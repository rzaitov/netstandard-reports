[Info] Ref dir not found: System.Buffers/ref
[Info] Ref dir not found: System.Collections.Immutable/ref
[Info] Ref dir not found: System.Diagnostics.DiagnosticSource/ref
[Info] Ref dir not found: System.Reflection.Metadata/ref
[Info] Ref dir not found: System.Resources.Reader/ref
[Info] Ref dir not found: System.Resources.Writer/ref
[Info] Ref dir not found: System.Runtime.CompilerServices.Unsafe/ref
[Info] Ref dir not found: System.Text.Encodings.Web/ref
[Info] Ref dir not found: System.Threading.Tasks.Dataflow/ref
[Info] Ref dir not found: System.Threading.Tasks.Extensions/ref
[Info] Ref dir not found: System.ValueTuple/ref

*** Legend ***

- [a]    runtime(implementation) assembly was not found
- [a]    runtime(implementation) assembly was found
- [t]    type was not found in assembly
f [t]    TypeForwarder was found first, then type was resolved successfully
+ [t]    type was found in assembly
- [m]    method was not found in platform assembly
+ [m]    method was found
! [m]    method was found but it throws NotImplementedException

**************

+ [a] Microsoft.CSharp.dll
ref: ./netstandard/packages/Microsoft.CSharp/ref/netstandard1.0/Microsoft.CSharp.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/mono/2.1/Microsoft.CSharp.dll

+ [t] Microsoft.CSharp.RuntimeBinder.Binder
+ [m]	CallSiteBinder BinaryOperation(CSharpBinderFlags,ExpressionType,Type,IEnumerable`1)
+ [m]	CallSiteBinder Convert(CSharpBinderFlags,Type,Type)
+ [m]	CallSiteBinder GetIndex(CSharpBinderFlags,Type,IEnumerable`1)
+ [m]	CallSiteBinder GetMember(CSharpBinderFlags,String,Type,IEnumerable`1)
+ [m]	CallSiteBinder Invoke(CSharpBinderFlags,Type,IEnumerable`1)
+ [m]	CallSiteBinder InvokeConstructor(CSharpBinderFlags,Type,IEnumerable`1)
+ [m]	CallSiteBinder InvokeMember(CSharpBinderFlags,String,IEnumerable`1,Type,IEnumerable`1)
+ [m]	CallSiteBinder IsEvent(CSharpBinderFlags,String,Type)
+ [m]	CallSiteBinder SetIndex(CSharpBinderFlags,Type,IEnumerable`1)
+ [m]	CallSiteBinder SetMember(CSharpBinderFlags,String,Type,IEnumerable`1)
+ [m]	CallSiteBinder UnaryOperation(CSharpBinderFlags,ExpressionType,Type,IEnumerable`1)

+ [t] Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfo
- [m]	Void .ctor()
+ [m]	CSharpArgumentInfo Create(CSharpArgumentInfoFlags,String)

+ [t] Microsoft.CSharp.RuntimeBinder.CSharpArgumentInfoFlags

+ [t] Microsoft.CSharp.RuntimeBinder.CSharpBinderFlags

+ [t] Microsoft.CSharp.RuntimeBinder.RuntimeBinderException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

+ [t] Microsoft.CSharp.RuntimeBinder.RuntimeBinderInternalCompilerException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

---------------------------------------
- [a] Microsoft.VisualBasic.dll File not found /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/mono/2.1/Microsoft.VisualBasic.dll
---------------------------------------
+ [a] Microsoft.Win32.Primitives.dll
ref: ./netstandard/packages/Microsoft.Win32.Primitives/ref/netstandard1.3/Microsoft.Win32.Primitives.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/Microsoft.Win32.Primitives.dll

f [t] System.ComponentModel.Win32Exception
+ [m]	Void .ctor()
+ [m]	Void .ctor(Int32)
+ [m]	Void .ctor(Int32,String)
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	Int32 get_NativeErrorCode()

---------------------------------------
+ [a] Microsoft.Win32.Registry.dll
ref: ./netstandard/packages/Microsoft.Win32.Registry/ref/netstandard1.3/Microsoft.Win32.Registry.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/Microsoft.Win32.Registry.dll

f [t] System.Security.AccessControl.RegistryRights

f [t] Microsoft.Win32.Registry
+ [m]	Object GetValue(String,String,Object)
+ [m]	Void SetValue(String,String,Object)
+ [m]	Void SetValue(String,String,Object,RegistryValueKind)

f [t] Microsoft.Win32.RegistryHive

f [t] Microsoft.Win32.RegistryKey
- [m]	Void .ctor()
- [m]	SafeRegistryHandle get_Handle()
- [m]	String get_Name()
- [m]	Int32 get_SubKeyCount()
- [m]	Int32 get_ValueCount()
- [m]	RegistryView get_View()
+ [m]	RegistryKey CreateSubKey(String)
- [m]	RegistryKey CreateSubKey(String,Boolean)
- [m]	RegistryKey CreateSubKey(String,Boolean,RegistryOptions)
- [m]	Void DeleteSubKey(String)
- [m]	Void DeleteSubKey(String,Boolean)
- [m]	Void DeleteSubKeyTree(String)
- [m]	Void DeleteSubKeyTree(String,Boolean)
- [m]	Void DeleteValue(String)
- [m]	Void DeleteValue(String,Boolean)
+ [m]	Void Dispose()
- [m]	Void Flush()
- [m]	RegistryKey FromHandle(SafeRegistryHandle)
- [m]	RegistryKey FromHandle(SafeRegistryHandle,RegistryView)
- [m]	String[] GetSubKeyNames()
- [m]	Object GetValue(String)
+ [m]	Object GetValue(String,Object)
- [m]	Object GetValue(String,Object,RegistryValueOptions)
- [m]	RegistryValueKind GetValueKind(String)
- [m]	String[] GetValueNames()
- [m]	RegistryKey OpenBaseKey(RegistryHive,RegistryView)
- [m]	RegistryKey OpenSubKey(String)
+ [m]	RegistryKey OpenSubKey(String,Boolean)
- [m]	RegistryKey OpenSubKey(String,RegistryRights)
+ [m]	Void SetValue(String,Object)
+ [m]	Void SetValue(String,Object,RegistryValueKind)
- [m]	String ToString()

f [t] Microsoft.Win32.RegistryOptions

f [t] Microsoft.Win32.RegistryValueKind

f [t] Microsoft.Win32.RegistryValueOptions

f [t] Microsoft.Win32.RegistryView

f [t] Microsoft.Win32.SafeHandles.SafeRegistryHandle
+ [m]	Void .ctor(IntPtr,Boolean)
+ [m]	Boolean ReleaseHandle()
- [m]	Boolean get_IsInvalid()

---------------------------------------
+ [a] Microsoft.Win32.Registry.AccessControl.dll
ref: ./netstandard/packages/Microsoft.Win32.Registry.AccessControl/ref/netstandard1.3/Microsoft.Win32.Registry.AccessControl.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/Microsoft.Win32.Registry.AccessControl.dll

f [t] System.Security.AccessControl.RegistryAccessRule
+ [m]	Void .ctor(IdentityReference,RegistryRights,AccessControlType)
+ [m]	Void .ctor(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AccessControlType)
+ [m]	Void .ctor(String,RegistryRights,AccessControlType)
+ [m]	Void .ctor(String,RegistryRights,InheritanceFlags,PropagationFlags,AccessControlType)
+ [m]	RegistryRights get_RegistryRights()

f [t] System.Security.AccessControl.RegistryAuditRule
+ [m]	Void .ctor(IdentityReference,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
+ [m]	Void .ctor(String,RegistryRights,InheritanceFlags,PropagationFlags,AuditFlags)
+ [m]	RegistryRights get_RegistryRights()

f [t] System.Security.AccessControl.RegistrySecurity
+ [m]	Void .ctor()
+ [m]	Type get_AccessRightType()
+ [m]	Type get_AccessRuleType()
+ [m]	Type get_AuditRuleType()
+ [m]	AccessRule AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
+ [m]	Void AddAccessRule(RegistryAccessRule)
+ [m]	Void AddAuditRule(RegistryAuditRule)
+ [m]	AuditRule AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
+ [m]	Boolean RemoveAccessRule(RegistryAccessRule)
+ [m]	Void RemoveAccessRuleAll(RegistryAccessRule)
+ [m]	Void RemoveAccessRuleSpecific(RegistryAccessRule)
+ [m]	Boolean RemoveAuditRule(RegistryAuditRule)
+ [m]	Void RemoveAuditRuleAll(RegistryAuditRule)
+ [m]	Void RemoveAuditRuleSpecific(RegistryAuditRule)
+ [m]	Void ResetAccessRule(RegistryAccessRule)
+ [m]	Void SetAccessRule(RegistryAccessRule)
+ [m]	Void SetAuditRule(RegistryAuditRule)

+ [t] Microsoft.Win32.RegistryAclExtensions
! [m]	RegistrySecurity GetAccessControl(RegistryKey)
! [m]	RegistrySecurity GetAccessControl(RegistryKey,AccessControlSections)
! [m]	Void SetAccessControl(RegistryKey,RegistrySecurity)

---------------------------------------
+ [a] System.AppContext.dll
ref: ./netstandard/packages/System.AppContext/ref/netstandard1.6/System.AppContext.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.AppContext.dll

f [t] System.AppContext
- [m]	String get_BaseDirectory()
- [m]	Void SetSwitch(String,Boolean)
- [m]	Boolean TryGetSwitch(String,Boolean&)
- [m]	String get_TargetFrameworkName()
- [m]	Object GetData(String)

---------------------------------------
+ [a] System.Collections.dll
ref: ./netstandard/packages/System.Collections/ref/netstandard1.3/System.Collections.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Collections.dll

f [t] System.Collections.BitArray
+ [m]	Void .ctor(Boolean[])
+ [m]	Void .ctor(Byte[])
+ [m]	Void .ctor(BitArray)
+ [m]	Void .ctor(Int32)
+ [m]	Void .ctor(Int32,Boolean)
+ [m]	Void .ctor(Int32[])
+ [m]	Boolean get_Item(Int32)
+ [m]	Void set_Item(Int32,Boolean)
+ [m]	Int32 get_Length()
+ [m]	Void set_Length(Int32)
- [m]	Int32 System.Collections.ICollection.get_Count()
- [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
- [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	BitArray And(BitArray)
+ [m]	Boolean Get(Int32)
+ [m]	IEnumerator GetEnumerator()
+ [m]	BitArray Not()
+ [m]	BitArray Or(BitArray)
+ [m]	Void Set(Int32,Boolean)
+ [m]	Void SetAll(Boolean)
- [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
+ [m]	BitArray Xor(BitArray)

f [t] System.Collections.StructuralComparisons
+ [m]	IComparer get_StructuralComparer()
+ [m]	IEqualityComparer get_StructuralEqualityComparer()

f [t] System.Collections.Generic.Comparer`1
+ [m]	Void .ctor()
+ [m]	Comparer`1 get_Default()
+ [m]	Int32 Compare(T,T)
+ [m]	Comparer`1 Create(Comparison`1)
+ [m]	Int32 System.Collections.IComparer.Compare(Object,Object)

f [t] System.Collections.Generic.Dictionary`2
+ [m]	Void .ctor()
+ [m]	Void .ctor(IDictionary`2)
+ [m]	Void .ctor(IDictionary`2,IEqualityComparer`1)
+ [m]	Void .ctor(IEqualityComparer`1)
+ [m]	Void .ctor(Int32)
+ [m]	Void .ctor(Int32,IEqualityComparer`1)
+ [m]	IEqualityComparer`1 get_Comparer()
+ [m]	Int32 get_Count()
+ [m]	TValue get_Item(TKey)
+ [m]	Void set_Item(TKey,TValue)
+ [m]	KeyCollection get_Keys()
+ [m]	Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly()
+ [m]	ICollection`1 System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys()
+ [m]	ICollection`1 System.Collections.Generic.IDictionary<TKey,TValue>.get_Values()
+ [m]	IEnumerable`1 System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys()
+ [m]	IEnumerable`1 System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values()
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Boolean System.Collections.IDictionary.get_IsFixedSize()
+ [m]	Boolean System.Collections.IDictionary.get_IsReadOnly()
+ [m]	Object System.Collections.IDictionary.get_Item(Object)
+ [m]	Void System.Collections.IDictionary.set_Item(Object,Object)
+ [m]	ICollection System.Collections.IDictionary.get_Keys()
+ [m]	ICollection System.Collections.IDictionary.get_Values()
+ [m]	ValueCollection get_Values()
+ [m]	Void Add(TKey,TValue)
+ [m]	Void Clear()
+ [m]	Boolean ContainsKey(TKey)
+ [m]	Boolean ContainsValue(TValue)
+ [m]	Enumerator GetEnumerator()
+ [m]	Boolean Remove(TKey)
+ [m]	Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair`2)
+ [m]	Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair`2)
+ [m]	Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair`2[],Int32)
+ [m]	Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair`2)
+ [m]	IEnumerator`1 System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
+ [m]	Void System.Collections.IDictionary.Add(Object,Object)
+ [m]	Boolean System.Collections.IDictionary.Contains(Object)
+ [m]	IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
+ [m]	Void System.Collections.IDictionary.Remove(Object)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	Boolean TryGetValue(TKey,TValue&)

f [t] System.Collections.Generic.EqualityComparer`1
+ [m]	Void .ctor()
+ [m]	EqualityComparer`1 get_Default()
+ [m]	Boolean Equals(T,T)
+ [m]	Int32 GetHashCode(T)
+ [m]	Boolean System.Collections.IEqualityComparer.Equals(Object,Object)
+ [m]	Int32 System.Collections.IEqualityComparer.GetHashCode(Object)

f [t] System.Collections.Generic.HashSet`1
+ [m]	Void .ctor()
+ [m]	Void .ctor(IEnumerable`1)
+ [m]	Void .ctor(IEnumerable`1,IEqualityComparer`1)
+ [m]	Void .ctor(IEqualityComparer`1)
+ [m]	IEqualityComparer`1 get_Comparer()
+ [m]	Int32 get_Count()
+ [m]	Boolean System.Collections.Generic.ICollection<T>.get_IsReadOnly()
+ [m]	Boolean Add(T)
+ [m]	Void Clear()
+ [m]	Boolean Contains(T)
+ [m]	Void CopyTo(T[])
+ [m]	Void CopyTo(T[],Int32)
+ [m]	Void CopyTo(T[],Int32,Int32)
+ [m]	Void ExceptWith(IEnumerable`1)
+ [m]	Enumerator GetEnumerator()
+ [m]	Void IntersectWith(IEnumerable`1)
+ [m]	Boolean IsProperSubsetOf(IEnumerable`1)
+ [m]	Boolean IsProperSupersetOf(IEnumerable`1)
+ [m]	Boolean IsSubsetOf(IEnumerable`1)
+ [m]	Boolean IsSupersetOf(IEnumerable`1)
+ [m]	Boolean Overlaps(IEnumerable`1)
+ [m]	Boolean Remove(T)
+ [m]	Int32 RemoveWhere(Predicate`1)
+ [m]	Boolean SetEquals(IEnumerable`1)
+ [m]	Void SymmetricExceptWith(IEnumerable`1)
+ [m]	Void System.Collections.Generic.ICollection<T>.Add(T)
+ [m]	IEnumerator`1 System.Collections.Generic.IEnumerable<T>.GetEnumerator()
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	Void TrimExcess()
+ [m]	Void UnionWith(IEnumerable`1)

f [t] System.Collections.Generic.LinkedList`1
+ [m]	Void .ctor()
+ [m]	Void .ctor(IEnumerable`1)
+ [m]	Int32 get_Count()
+ [m]	LinkedListNode`1 get_First()
+ [m]	LinkedListNode`1 get_Last()
+ [m]	Boolean System.Collections.Generic.ICollection<T>.get_IsReadOnly()
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	LinkedListNode`1 AddAfter(LinkedListNode`1,T)
+ [m]	Void AddAfter(LinkedListNode`1,LinkedListNode`1)
+ [m]	LinkedListNode`1 AddBefore(LinkedListNode`1,T)
+ [m]	Void AddBefore(LinkedListNode`1,LinkedListNode`1)
+ [m]	LinkedListNode`1 AddFirst(T)
+ [m]	Void AddFirst(LinkedListNode`1)
+ [m]	LinkedListNode`1 AddLast(T)
+ [m]	Void AddLast(LinkedListNode`1)
+ [m]	Void Clear()
+ [m]	Boolean Contains(T)
+ [m]	Void CopyTo(T[],Int32)
+ [m]	LinkedListNode`1 Find(T)
+ [m]	LinkedListNode`1 FindLast(T)
+ [m]	Enumerator GetEnumerator()
+ [m]	Boolean Remove(T)
+ [m]	Void Remove(LinkedListNode`1)
+ [m]	Void RemoveFirst()
+ [m]	Void RemoveLast()
+ [m]	Void System.Collections.Generic.ICollection<T>.Add(T)
+ [m]	IEnumerator`1 System.Collections.Generic.IEnumerable<T>.GetEnumerator()
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()

f [t] System.Collections.Generic.LinkedListNode`1
+ [m]	Void .ctor(T)
+ [m]	LinkedList`1 get_List()
+ [m]	LinkedListNode`1 get_Next()
+ [m]	LinkedListNode`1 get_Previous()
+ [m]	T get_Value()
+ [m]	Void set_Value(T)

f [t] System.Collections.Generic.List`1
+ [m]	Void .ctor()
+ [m]	Void .ctor(IEnumerable`1)
+ [m]	Void .ctor(Int32)
+ [m]	Int32 get_Capacity()
+ [m]	Void set_Capacity(Int32)
+ [m]	Int32 get_Count()
+ [m]	T get_Item(Int32)
+ [m]	Void set_Item(Int32,T)
+ [m]	Boolean System.Collections.Generic.ICollection<T>.get_IsReadOnly()
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Boolean System.Collections.IList.get_IsFixedSize()
+ [m]	Boolean System.Collections.IList.get_IsReadOnly()
+ [m]	Object System.Collections.IList.get_Item(Int32)
+ [m]	Void System.Collections.IList.set_Item(Int32,Object)
+ [m]	Void Add(T)
+ [m]	Void AddRange(IEnumerable`1)
+ [m]	ReadOnlyCollection`1 AsReadOnly()
+ [m]	Int32 BinarySearch(T)
+ [m]	Int32 BinarySearch(T,IComparer`1)
+ [m]	Int32 BinarySearch(Int32,Int32,T,IComparer`1)
+ [m]	Void Clear()
+ [m]	Boolean Contains(T)
+ [m]	Void CopyTo(T[])
+ [m]	Void CopyTo(T[],Int32)
+ [m]	Void CopyTo(Int32,T[],Int32,Int32)
+ [m]	Boolean Exists(Predicate`1)
+ [m]	T Find(Predicate`1)
+ [m]	List`1 FindAll(Predicate`1)
+ [m]	Int32 FindIndex(Int32,Int32,Predicate`1)
+ [m]	Int32 FindIndex(Int32,Predicate`1)
+ [m]	Int32 FindIndex(Predicate`1)
+ [m]	T FindLast(Predicate`1)
+ [m]	Int32 FindLastIndex(Int32,Int32,Predicate`1)
+ [m]	Int32 FindLastIndex(Int32,Predicate`1)
+ [m]	Int32 FindLastIndex(Predicate`1)
+ [m]	Void ForEach(Action`1)
+ [m]	Enumerator GetEnumerator()
+ [m]	List`1 GetRange(Int32,Int32)
+ [m]	Int32 IndexOf(T)
+ [m]	Int32 IndexOf(T,Int32)
+ [m]	Int32 IndexOf(T,Int32,Int32)
+ [m]	Void Insert(Int32,T)
+ [m]	Void InsertRange(Int32,IEnumerable`1)
+ [m]	Int32 LastIndexOf(T)
+ [m]	Int32 LastIndexOf(T,Int32)
+ [m]	Int32 LastIndexOf(T,Int32,Int32)
+ [m]	Boolean Remove(T)
+ [m]	Int32 RemoveAll(Predicate`1)
+ [m]	Void RemoveAt(Int32)
+ [m]	Void RemoveRange(Int32,Int32)
+ [m]	Void Reverse()
+ [m]	Void Reverse(Int32,Int32)
+ [m]	Void Sort()
+ [m]	Void Sort(IComparer`1)
+ [m]	Void Sort(Comparison`1)
+ [m]	Void Sort(Int32,Int32,IComparer`1)
+ [m]	IEnumerator`1 System.Collections.Generic.IEnumerable<T>.GetEnumerator()
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	Int32 System.Collections.IList.Add(Object)
+ [m]	Boolean System.Collections.IList.Contains(Object)
+ [m]	Int32 System.Collections.IList.IndexOf(Object)
+ [m]	Void System.Collections.IList.Insert(Int32,Object)
+ [m]	Void System.Collections.IList.Remove(Object)
+ [m]	T[] ToArray()
+ [m]	Void TrimExcess()
+ [m]	Boolean TrueForAll(Predicate`1)

f [t] System.Collections.Generic.Queue`1
+ [m]	Void .ctor()
+ [m]	Void .ctor(IEnumerable`1)
+ [m]	Void .ctor(Int32)
+ [m]	Int32 get_Count()
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Void Clear()
+ [m]	Boolean Contains(T)
+ [m]	Void CopyTo(T[],Int32)
+ [m]	T Dequeue()
+ [m]	Void Enqueue(T)
+ [m]	Enumerator GetEnumerator()
+ [m]	T Peek()
+ [m]	IEnumerator`1 System.Collections.Generic.IEnumerable<T>.GetEnumerator()
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	T[] ToArray()
+ [m]	Void TrimExcess()

f [t] System.Collections.Generic.SortedDictionary`2
+ [m]	Void .ctor()
+ [m]	Void .ctor(IComparer`1)
+ [m]	Void .ctor(IDictionary`2)
+ [m]	Void .ctor(IDictionary`2,IComparer`1)
+ [m]	IComparer`1 get_Comparer()
+ [m]	Int32 get_Count()
+ [m]	TValue get_Item(TKey)
+ [m]	Void set_Item(TKey,TValue)
+ [m]	KeyCollection get_Keys()
+ [m]	Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly()
+ [m]	ICollection`1 System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys()
+ [m]	ICollection`1 System.Collections.Generic.IDictionary<TKey,TValue>.get_Values()
+ [m]	IEnumerable`1 System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys()
+ [m]	IEnumerable`1 System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values()
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Boolean System.Collections.IDictionary.get_IsFixedSize()
+ [m]	Boolean System.Collections.IDictionary.get_IsReadOnly()
+ [m]	Object System.Collections.IDictionary.get_Item(Object)
+ [m]	Void System.Collections.IDictionary.set_Item(Object,Object)
+ [m]	ICollection System.Collections.IDictionary.get_Keys()
+ [m]	ICollection System.Collections.IDictionary.get_Values()
+ [m]	ValueCollection get_Values()
+ [m]	Void Add(TKey,TValue)
+ [m]	Void Clear()
+ [m]	Boolean ContainsKey(TKey)
+ [m]	Boolean ContainsValue(TValue)
+ [m]	Void CopyTo(KeyValuePair`2[],Int32)
+ [m]	Enumerator GetEnumerator()
+ [m]	Boolean Remove(TKey)
+ [m]	Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair`2)
+ [m]	Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair`2)
+ [m]	Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair`2)
+ [m]	IEnumerator`1 System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
+ [m]	Void System.Collections.IDictionary.Add(Object,Object)
+ [m]	Boolean System.Collections.IDictionary.Contains(Object)
+ [m]	IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
+ [m]	Void System.Collections.IDictionary.Remove(Object)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	Boolean TryGetValue(TKey,TValue&)

f [t] System.Collections.Generic.SortedList`2
+ [m]	Void .ctor()
+ [m]	Void .ctor(IComparer`1)
+ [m]	Void .ctor(IDictionary`2)
+ [m]	Void .ctor(IDictionary`2,IComparer`1)
+ [m]	Void .ctor(Int32)
+ [m]	Void .ctor(Int32,IComparer`1)
+ [m]	Int32 get_Capacity()
+ [m]	Void set_Capacity(Int32)
+ [m]	IComparer`1 get_Comparer()
+ [m]	Int32 get_Count()
+ [m]	TValue get_Item(TKey)
+ [m]	Void set_Item(TKey,TValue)
+ [m]	IList`1 get_Keys()
+ [m]	Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly()
+ [m]	ICollection`1 System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys()
+ [m]	ICollection`1 System.Collections.Generic.IDictionary<TKey,TValue>.get_Values()
+ [m]	IEnumerable`1 System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys()
+ [m]	IEnumerable`1 System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values()
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Boolean System.Collections.IDictionary.get_IsFixedSize()
+ [m]	Boolean System.Collections.IDictionary.get_IsReadOnly()
+ [m]	Object System.Collections.IDictionary.get_Item(Object)
+ [m]	Void System.Collections.IDictionary.set_Item(Object,Object)
+ [m]	ICollection System.Collections.IDictionary.get_Keys()
+ [m]	ICollection System.Collections.IDictionary.get_Values()
+ [m]	IList`1 get_Values()
+ [m]	Void Add(TKey,TValue)
+ [m]	Void Clear()
+ [m]	Boolean ContainsKey(TKey)
+ [m]	Boolean ContainsValue(TValue)
+ [m]	IEnumerator`1 GetEnumerator()
+ [m]	Int32 IndexOfKey(TKey)
+ [m]	Int32 IndexOfValue(TValue)
+ [m]	Boolean Remove(TKey)
+ [m]	Void RemoveAt(Int32)
+ [m]	Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair`2)
+ [m]	Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair`2)
+ [m]	Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair`2[],Int32)
+ [m]	Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair`2)
+ [m]	IEnumerator`1 System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
+ [m]	Void System.Collections.IDictionary.Add(Object,Object)
+ [m]	Boolean System.Collections.IDictionary.Contains(Object)
+ [m]	IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
+ [m]	Void System.Collections.IDictionary.Remove(Object)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	Void TrimExcess()
+ [m]	Boolean TryGetValue(TKey,TValue&)

f [t] System.Collections.Generic.SortedSet`1
+ [m]	Void .ctor()
+ [m]	Void .ctor(IComparer`1)
+ [m]	Void .ctor(IEnumerable`1)
+ [m]	Void .ctor(IEnumerable`1,IComparer`1)
+ [m]	IComparer`1 get_Comparer()
+ [m]	Int32 get_Count()
+ [m]	T get_Max()
+ [m]	T get_Min()
+ [m]	Boolean System.Collections.Generic.ICollection<T>.get_IsReadOnly()
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Boolean Add(T)
+ [m]	Void Clear()
+ [m]	Boolean Contains(T)
+ [m]	Void CopyTo(T[])
+ [m]	Void CopyTo(T[],Int32)
+ [m]	Void CopyTo(T[],Int32,Int32)
+ [m]	Void ExceptWith(IEnumerable`1)
+ [m]	Enumerator GetEnumerator()
+ [m]	SortedSet`1 GetViewBetween(T,T)
+ [m]	Void IntersectWith(IEnumerable`1)
+ [m]	Boolean IsProperSubsetOf(IEnumerable`1)
+ [m]	Boolean IsProperSupersetOf(IEnumerable`1)
+ [m]	Boolean IsSubsetOf(IEnumerable`1)
+ [m]	Boolean IsSupersetOf(IEnumerable`1)
+ [m]	Boolean Overlaps(IEnumerable`1)
+ [m]	Boolean Remove(T)
+ [m]	Int32 RemoveWhere(Predicate`1)
+ [m]	IEnumerable`1 Reverse()
+ [m]	Boolean SetEquals(IEnumerable`1)
+ [m]	Void SymmetricExceptWith(IEnumerable`1)
+ [m]	Void System.Collections.Generic.ICollection<T>.Add(T)
+ [m]	IEnumerator`1 System.Collections.Generic.IEnumerable<T>.GetEnumerator()
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	Void UnionWith(IEnumerable`1)

f [t] System.Collections.Generic.Stack`1
+ [m]	Void .ctor()
+ [m]	Void .ctor(IEnumerable`1)
+ [m]	Void .ctor(Int32)
+ [m]	Int32 get_Count()
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Void Clear()
+ [m]	Boolean Contains(T)
+ [m]	Void CopyTo(T[],Int32)
+ [m]	Enumerator GetEnumerator()
+ [m]	T Peek()
+ [m]	T Pop()
+ [m]	Void Push(T)
+ [m]	IEnumerator`1 System.Collections.Generic.IEnumerable<T>.GetEnumerator()
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	T[] ToArray()
+ [m]	Void TrimExcess()

---------------------------------------
+ [a] System.Collections.Concurrent.dll
ref: ./netstandard/packages/System.Collections.Concurrent/ref/netstandard1.3/System.Collections.Concurrent.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Collections.Concurrent.dll

f [t] System.Collections.Concurrent.BlockingCollection`1
+ [m]	Void .ctor()
+ [m]	Void .ctor(IProducerConsumerCollection`1)
+ [m]	Void .ctor(IProducerConsumerCollection`1,Int32)
+ [m]	Void .ctor(Int32)
+ [m]	Int32 get_BoundedCapacity()
+ [m]	Int32 get_Count()
+ [m]	Boolean get_IsAddingCompleted()
+ [m]	Boolean get_IsCompleted()
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Void Add(T)
+ [m]	Void Add(T,CancellationToken)
+ [m]	Int32 AddToAny(BlockingCollection`1[],T)
+ [m]	Int32 AddToAny(BlockingCollection`1[],T,CancellationToken)
+ [m]	Void CompleteAdding()
+ [m]	Void CopyTo(T[],Int32)
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	IEnumerable`1 GetConsumingEnumerable()
+ [m]	IEnumerable`1 GetConsumingEnumerable(CancellationToken)
+ [m]	IEnumerator`1 System.Collections.Generic.IEnumerable<T>.GetEnumerator()
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	T Take()
+ [m]	T Take(CancellationToken)
+ [m]	Int32 TakeFromAny(BlockingCollection`1[],T&)
+ [m]	Int32 TakeFromAny(BlockingCollection`1[],T&,CancellationToken)
+ [m]	T[] ToArray()
+ [m]	Boolean TryAdd(T)
+ [m]	Boolean TryAdd(T,Int32)
+ [m]	Boolean TryAdd(T,Int32,CancellationToken)
+ [m]	Boolean TryAdd(T,TimeSpan)
+ [m]	Int32 TryAddToAny(BlockingCollection`1[],T)
+ [m]	Int32 TryAddToAny(BlockingCollection`1[],T,Int32)
+ [m]	Int32 TryAddToAny(BlockingCollection`1[],T,Int32,CancellationToken)
+ [m]	Int32 TryAddToAny(BlockingCollection`1[],T,TimeSpan)
+ [m]	Boolean TryTake(T&)
+ [m]	Boolean TryTake(T&,Int32)
+ [m]	Boolean TryTake(T&,Int32,CancellationToken)
+ [m]	Boolean TryTake(T&,TimeSpan)
+ [m]	Int32 TryTakeFromAny(BlockingCollection`1[],T&)
+ [m]	Int32 TryTakeFromAny(BlockingCollection`1[],T&,Int32)
+ [m]	Int32 TryTakeFromAny(BlockingCollection`1[],T&,Int32,CancellationToken)
+ [m]	Int32 TryTakeFromAny(BlockingCollection`1[],T&,TimeSpan)

f [t] System.Collections.Concurrent.ConcurrentBag`1
+ [m]	Void .ctor()
+ [m]	Void .ctor(IEnumerable`1)
+ [m]	Int32 get_Count()
+ [m]	Boolean get_IsEmpty()
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Void Add(T)
+ [m]	Void CopyTo(T[],Int32)
+ [m]	IEnumerator`1 GetEnumerator()
+ [m]	Boolean System.Collections.Concurrent.IProducerConsumerCollection<T>.TryAdd(T)
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	T[] ToArray()
+ [m]	Boolean TryPeek(T&)
+ [m]	Boolean TryTake(T&)

f [t] System.Collections.Concurrent.ConcurrentDictionary`2
+ [m]	Void .ctor()
+ [m]	Void .ctor(IEnumerable`1)
+ [m]	Void .ctor(IEnumerable`1,IEqualityComparer`1)
+ [m]	Void .ctor(IEqualityComparer`1)
+ [m]	Void .ctor(Int32,IEnumerable`1,IEqualityComparer`1)
+ [m]	Void .ctor(Int32,Int32)
+ [m]	Void .ctor(Int32,Int32,IEqualityComparer`1)
+ [m]	Int32 get_Count()
+ [m]	Boolean get_IsEmpty()
+ [m]	TValue get_Item(TKey)
+ [m]	Void set_Item(TKey,TValue)
+ [m]	ICollection`1 get_Keys()
+ [m]	Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly()
+ [m]	IEnumerable`1 System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys()
+ [m]	IEnumerable`1 System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values()
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Boolean System.Collections.IDictionary.get_IsFixedSize()
+ [m]	Boolean System.Collections.IDictionary.get_IsReadOnly()
+ [m]	Object System.Collections.IDictionary.get_Item(Object)
+ [m]	Void System.Collections.IDictionary.set_Item(Object,Object)
+ [m]	ICollection System.Collections.IDictionary.get_Keys()
+ [m]	ICollection System.Collections.IDictionary.get_Values()
+ [m]	ICollection`1 get_Values()
+ [m]	TValue AddOrUpdate(TKey,TValue,Func`3)
+ [m]	TValue AddOrUpdate(TKey,Func`2,Func`3)
+ [m]	Void Clear()
+ [m]	Boolean ContainsKey(TKey)
+ [m]	IEnumerator`1 GetEnumerator()
+ [m]	TValue GetOrAdd(TKey,TValue)
+ [m]	TValue GetOrAdd(TKey,Func`2)
+ [m]	Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair`2)
+ [m]	Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair`2)
+ [m]	Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair`2[],Int32)
+ [m]	Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair`2)
+ [m]	Void System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey,TValue)
+ [m]	Boolean System.Collections.Generic.IDictionary<TKey,TValue>.Remove(TKey)
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
+ [m]	Void System.Collections.IDictionary.Add(Object,Object)
+ [m]	Boolean System.Collections.IDictionary.Contains(Object)
+ [m]	IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
+ [m]	Void System.Collections.IDictionary.Remove(Object)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	KeyValuePair`2[] ToArray()
+ [m]	Boolean TryAdd(TKey,TValue)
+ [m]	Boolean TryGetValue(TKey,TValue&)
+ [m]	Boolean TryRemove(TKey,TValue&)
+ [m]	Boolean TryUpdate(TKey,TValue,TValue)

f [t] System.Collections.Concurrent.ConcurrentQueue`1
+ [m]	Void .ctor()
+ [m]	Void .ctor(IEnumerable`1)
+ [m]	Int32 get_Count()
+ [m]	Boolean get_IsEmpty()
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Void CopyTo(T[],Int32)
+ [m]	Void Enqueue(T)
+ [m]	IEnumerator`1 GetEnumerator()
+ [m]	Boolean System.Collections.Concurrent.IProducerConsumerCollection<T>.TryAdd(T)
+ [m]	Boolean System.Collections.Concurrent.IProducerConsumerCollection<T>.TryTake(T&)
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	T[] ToArray()
+ [m]	Boolean TryDequeue(T&)
+ [m]	Boolean TryPeek(T&)

f [t] System.Collections.Concurrent.ConcurrentStack`1
+ [m]	Void .ctor()
+ [m]	Void .ctor(IEnumerable`1)
+ [m]	Int32 get_Count()
+ [m]	Boolean get_IsEmpty()
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Void Clear()
+ [m]	Void CopyTo(T[],Int32)
+ [m]	IEnumerator`1 GetEnumerator()
+ [m]	Void Push(T)
+ [m]	Void PushRange(T[])
+ [m]	Void PushRange(T[],Int32,Int32)
+ [m]	Boolean System.Collections.Concurrent.IProducerConsumerCollection<T>.TryAdd(T)
+ [m]	Boolean System.Collections.Concurrent.IProducerConsumerCollection<T>.TryTake(T&)
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	T[] ToArray()
+ [m]	Boolean TryPeek(T&)
+ [m]	Boolean TryPop(T&)
+ [m]	Int32 TryPopRange(T[])
+ [m]	Int32 TryPopRange(T[],Int32,Int32)

f [t] System.Collections.Concurrent.EnumerablePartitionerOptions

f [t] System.Collections.Concurrent.IProducerConsumerCollection`1
+ [m]	Void CopyTo(T[],Int32)
+ [m]	T[] ToArray()
+ [m]	Boolean TryAdd(T)
+ [m]	Boolean TryTake(T&)

f [t] System.Collections.Concurrent.OrderablePartitioner`1
+ [m]	Void .ctor(Boolean,Boolean,Boolean)
+ [m]	Boolean get_KeysNormalized()
+ [m]	Boolean get_KeysOrderedAcrossPartitions()
+ [m]	Boolean get_KeysOrderedInEachPartition()
+ [m]	IEnumerable`1 GetDynamicPartitions()
+ [m]	IEnumerable`1 GetOrderableDynamicPartitions()
+ [m]	IList`1 GetOrderablePartitions(Int32)
+ [m]	IList`1 GetPartitions(Int32)

f [t] System.Collections.Concurrent.Partitioner
+ [m]	OrderablePartitioner`1 Create(Int32,Int32)
+ [m]	OrderablePartitioner`1 Create(Int32,Int32,Int32)
+ [m]	OrderablePartitioner`1 Create(Int64,Int64)
+ [m]	OrderablePartitioner`1 Create(Int64,Int64,Int64)
+ [m]	OrderablePartitioner`1 Create(TSource[],Boolean)
+ [m]	OrderablePartitioner`1 Create(IEnumerable`1)
+ [m]	OrderablePartitioner`1 Create(IEnumerable`1,EnumerablePartitionerOptions)
+ [m]	OrderablePartitioner`1 Create(IList`1,Boolean)

f [t] System.Collections.Concurrent.Partitioner`1
+ [m]	Void .ctor()
+ [m]	Boolean get_SupportsDynamicPartitions()
+ [m]	IEnumerable`1 GetDynamicPartitions()
+ [m]	IList`1 GetPartitions(Int32)

---------------------------------------
+ [a] System.Collections.NonGeneric.dll
ref: ./netstandard/packages/System.Collections.NonGeneric/ref/netstandard1.3/System.Collections.NonGeneric.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Collections.NonGeneric.dll

f [t] System.Collections.ArrayList
+ [m]	Void .ctor()
+ [m]	Void .ctor(ICollection)
+ [m]	Void .ctor(Int32)
+ [m]	Int32 get_Capacity()
+ [m]	Void set_Capacity(Int32)
+ [m]	Int32 get_Count()
+ [m]	Boolean get_IsFixedSize()
+ [m]	Boolean get_IsReadOnly()
+ [m]	Boolean get_IsSynchronized()
+ [m]	Object get_Item(Int32)
+ [m]	Void set_Item(Int32,Object)
+ [m]	Object get_SyncRoot()
+ [m]	ArrayList Adapter(IList)
+ [m]	Int32 Add(Object)
+ [m]	Void AddRange(ICollection)
+ [m]	Int32 BinarySearch(Int32,Int32,Object,IComparer)
+ [m]	Int32 BinarySearch(Object)
+ [m]	Int32 BinarySearch(Object,IComparer)
+ [m]	Void Clear()
+ [m]	Object Clone()
+ [m]	Boolean Contains(Object)
+ [m]	Void CopyTo(Array)
+ [m]	Void CopyTo(Array,Int32)
+ [m]	Void CopyTo(Int32,Array,Int32,Int32)
+ [m]	ArrayList FixedSize(ArrayList)
+ [m]	IList FixedSize(IList)
+ [m]	IEnumerator GetEnumerator()
+ [m]	IEnumerator GetEnumerator(Int32,Int32)
+ [m]	ArrayList GetRange(Int32,Int32)
+ [m]	Int32 IndexOf(Object)
+ [m]	Int32 IndexOf(Object,Int32)
+ [m]	Int32 IndexOf(Object,Int32,Int32)
+ [m]	Void Insert(Int32,Object)
+ [m]	Void InsertRange(Int32,ICollection)
+ [m]	Int32 LastIndexOf(Object)
+ [m]	Int32 LastIndexOf(Object,Int32)
+ [m]	Int32 LastIndexOf(Object,Int32,Int32)
+ [m]	ArrayList ReadOnly(ArrayList)
+ [m]	IList ReadOnly(IList)
+ [m]	Void Remove(Object)
+ [m]	Void RemoveAt(Int32)
+ [m]	Void RemoveRange(Int32,Int32)
+ [m]	ArrayList Repeat(Object,Int32)
+ [m]	Void Reverse()
+ [m]	Void Reverse(Int32,Int32)
+ [m]	Void SetRange(Int32,ICollection)
+ [m]	Void Sort()
+ [m]	Void Sort(IComparer)
+ [m]	Void Sort(Int32,Int32,IComparer)
+ [m]	ArrayList Synchronized(ArrayList)
+ [m]	IList Synchronized(IList)
+ [m]	Object[] ToArray()
+ [m]	Array ToArray(Type)
+ [m]	Void TrimToSize()

f [t] System.Collections.CaseInsensitiveComparer
+ [m]	Void .ctor()
+ [m]	Void .ctor(CultureInfo)
+ [m]	CaseInsensitiveComparer get_Default()
+ [m]	CaseInsensitiveComparer get_DefaultInvariant()
+ [m]	Int32 Compare(Object,Object)

f [t] System.Collections.CollectionBase
+ [m]	Void .ctor()
+ [m]	Void .ctor(Int32)
+ [m]	Int32 get_Capacity()
+ [m]	Void set_Capacity(Int32)
+ [m]	Int32 get_Count()
+ [m]	ArrayList get_InnerList()
+ [m]	IList get_List()
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Boolean System.Collections.IList.get_IsFixedSize()
+ [m]	Boolean System.Collections.IList.get_IsReadOnly()
+ [m]	Object System.Collections.IList.get_Item(Int32)
+ [m]	Void System.Collections.IList.set_Item(Int32,Object)
+ [m]	Void Clear()
+ [m]	IEnumerator GetEnumerator()
+ [m]	Void OnClear()
+ [m]	Void OnClearComplete()
+ [m]	Void OnInsert(Int32,Object)
+ [m]	Void OnInsertComplete(Int32,Object)
+ [m]	Void OnRemove(Int32,Object)
+ [m]	Void OnRemoveComplete(Int32,Object)
+ [m]	Void OnSet(Int32,Object,Object)
+ [m]	Void OnSetComplete(Int32,Object,Object)
+ [m]	Void OnValidate(Object)
+ [m]	Void RemoveAt(Int32)
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
+ [m]	Int32 System.Collections.IList.Add(Object)
+ [m]	Boolean System.Collections.IList.Contains(Object)
+ [m]	Int32 System.Collections.IList.IndexOf(Object)
+ [m]	Void System.Collections.IList.Insert(Int32,Object)
+ [m]	Void System.Collections.IList.Remove(Object)

f [t] System.Collections.Comparer
+ [m]	Void .ctor(CultureInfo)
+ [m]	Int32 Compare(Object,Object)

f [t] System.Collections.DictionaryBase
+ [m]	Void .ctor()
+ [m]	Int32 get_Count()
+ [m]	IDictionary get_Dictionary()
+ [m]	Hashtable get_InnerHashtable()
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Boolean System.Collections.IDictionary.get_IsFixedSize()
+ [m]	Boolean System.Collections.IDictionary.get_IsReadOnly()
+ [m]	Object System.Collections.IDictionary.get_Item(Object)
+ [m]	Void System.Collections.IDictionary.set_Item(Object,Object)
+ [m]	ICollection System.Collections.IDictionary.get_Keys()
+ [m]	ICollection System.Collections.IDictionary.get_Values()
+ [m]	Void Clear()
+ [m]	Void CopyTo(Array,Int32)
+ [m]	IDictionaryEnumerator GetEnumerator()
+ [m]	Void OnClear()
+ [m]	Void OnClearComplete()
+ [m]	Object OnGet(Object,Object)
+ [m]	Void OnInsert(Object,Object)
+ [m]	Void OnInsertComplete(Object,Object)
+ [m]	Void OnRemove(Object,Object)
+ [m]	Void OnRemoveComplete(Object,Object)
+ [m]	Void OnSet(Object,Object,Object)
+ [m]	Void OnSetComplete(Object,Object,Object)
+ [m]	Void OnValidate(Object,Object)
+ [m]	Void System.Collections.IDictionary.Add(Object,Object)
+ [m]	Boolean System.Collections.IDictionary.Contains(Object)
+ [m]	Void System.Collections.IDictionary.Remove(Object)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()

f [t] System.Collections.Hashtable
+ [m]	Void .ctor()
+ [m]	Void .ctor(IDictionary)
+ [m]	Void .ctor(IDictionary,IEqualityComparer)
+ [m]	Void .ctor(IDictionary,Single)
+ [m]	Void .ctor(IDictionary,Single,IEqualityComparer)
+ [m]	Void .ctor(IEqualityComparer)
+ [m]	Void .ctor(Int32)
+ [m]	Void .ctor(Int32,IEqualityComparer)
+ [m]	Void .ctor(Int32,Single)
+ [m]	Void .ctor(Int32,Single,IEqualityComparer)
+ [m]	Int32 get_Count()
+ [m]	IEqualityComparer get_EqualityComparer()
+ [m]	Boolean get_IsFixedSize()
+ [m]	Boolean get_IsReadOnly()
+ [m]	Boolean get_IsSynchronized()
+ [m]	Object get_Item(Object)
+ [m]	Void set_Item(Object,Object)
+ [m]	ICollection get_Keys()
+ [m]	Object get_SyncRoot()
+ [m]	ICollection get_Values()
+ [m]	Void Add(Object,Object)
+ [m]	Void Clear()
+ [m]	Object Clone()
+ [m]	Boolean Contains(Object)
+ [m]	Boolean ContainsKey(Object)
+ [m]	Boolean ContainsValue(Object)
+ [m]	Void CopyTo(Array,Int32)
+ [m]	IDictionaryEnumerator GetEnumerator()
+ [m]	Int32 GetHash(Object)
+ [m]	Boolean KeyEquals(Object,Object)
+ [m]	Void Remove(Object)
+ [m]	Hashtable Synchronized(Hashtable)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()

f [t] System.Collections.Queue
+ [m]	Void .ctor()
+ [m]	Void .ctor(ICollection)
+ [m]	Void .ctor(Int32)
+ [m]	Void .ctor(Int32,Single)
+ [m]	Int32 get_Count()
+ [m]	Boolean get_IsSynchronized()
+ [m]	Object get_SyncRoot()
+ [m]	Void Clear()
+ [m]	Object Clone()
+ [m]	Boolean Contains(Object)
+ [m]	Void CopyTo(Array,Int32)
+ [m]	Object Dequeue()
+ [m]	Void Enqueue(Object)
+ [m]	IEnumerator GetEnumerator()
+ [m]	Object Peek()
+ [m]	Queue Synchronized(Queue)
+ [m]	Object[] ToArray()
+ [m]	Void TrimToSize()

f [t] System.Collections.ReadOnlyCollectionBase
+ [m]	Void .ctor()
+ [m]	Int32 get_Count()
+ [m]	ArrayList get_InnerList()
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	IEnumerator GetEnumerator()
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)

f [t] System.Collections.SortedList
+ [m]	Void .ctor()
+ [m]	Void .ctor(IComparer)
+ [m]	Void .ctor(IComparer,Int32)
+ [m]	Void .ctor(IDictionary)
+ [m]	Void .ctor(IDictionary,IComparer)
+ [m]	Void .ctor(Int32)
+ [m]	Int32 get_Capacity()
+ [m]	Void set_Capacity(Int32)
+ [m]	Int32 get_Count()
+ [m]	Boolean get_IsFixedSize()
+ [m]	Boolean get_IsReadOnly()
+ [m]	Boolean get_IsSynchronized()
+ [m]	Object get_Item(Object)
+ [m]	Void set_Item(Object,Object)
+ [m]	ICollection get_Keys()
+ [m]	Object get_SyncRoot()
+ [m]	ICollection get_Values()
+ [m]	Void Add(Object,Object)
+ [m]	Void Clear()
+ [m]	Object Clone()
+ [m]	Boolean Contains(Object)
+ [m]	Boolean ContainsKey(Object)
+ [m]	Boolean ContainsValue(Object)
+ [m]	Void CopyTo(Array,Int32)
+ [m]	Object GetByIndex(Int32)
+ [m]	IDictionaryEnumerator GetEnumerator()
+ [m]	Object GetKey(Int32)
+ [m]	IList GetKeyList()
+ [m]	IList GetValueList()
+ [m]	Int32 IndexOfKey(Object)
+ [m]	Int32 IndexOfValue(Object)
+ [m]	Void Remove(Object)
+ [m]	Void RemoveAt(Int32)
+ [m]	Void SetByIndex(Int32,Object)
+ [m]	SortedList Synchronized(SortedList)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	Void TrimToSize()

f [t] System.Collections.Stack
+ [m]	Void .ctor()
+ [m]	Void .ctor(ICollection)
+ [m]	Void .ctor(Int32)
+ [m]	Int32 get_Count()
+ [m]	Boolean get_IsSynchronized()
+ [m]	Object get_SyncRoot()
+ [m]	Void Clear()
+ [m]	Object Clone()
+ [m]	Boolean Contains(Object)
+ [m]	Void CopyTo(Array,Int32)
+ [m]	IEnumerator GetEnumerator()
+ [m]	Object Peek()
+ [m]	Object Pop()
+ [m]	Void Push(Object)
+ [m]	Stack Synchronized(Stack)
+ [m]	Object[] ToArray()

f [t] System.Collections.Specialized.CollectionsUtil
+ [m]	Void .ctor()
+ [m]	Hashtable CreateCaseInsensitiveHashtable()
+ [m]	Hashtable CreateCaseInsensitiveHashtable(IDictionary)
+ [m]	Hashtable CreateCaseInsensitiveHashtable(Int32)
+ [m]	SortedList CreateCaseInsensitiveSortedList()

---------------------------------------
+ [a] System.Collections.Specialized.dll
ref: ./netstandard/packages/System.Collections.Specialized/ref/netstandard1.3/System.Collections.Specialized.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Collections.Specialized.dll

f [t] System.Collections.Specialized.BitVector32
+ [m]	Void .ctor(BitVector32)
+ [m]	Void .ctor(Int32)
+ [m]	Int32 get_Data()
+ [m]	Int32 get_Item(Section)
+ [m]	Void set_Item(Section,Int32)
+ [m]	Boolean get_Item(Int32)
+ [m]	Void set_Item(Int32,Boolean)
+ [m]	Int32 CreateMask()
+ [m]	Int32 CreateMask(Int32)
+ [m]	Section CreateSection(Int16)
+ [m]	Section CreateSection(Int16,Section)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	String ToString()
+ [m]	String ToString(BitVector32)

f [t] System.Collections.Specialized.HybridDictionary
+ [m]	Void .ctor()
+ [m]	Void .ctor(Boolean)
+ [m]	Void .ctor(Int32)
+ [m]	Void .ctor(Int32,Boolean)
+ [m]	Int32 get_Count()
+ [m]	Boolean get_IsFixedSize()
+ [m]	Boolean get_IsReadOnly()
+ [m]	Boolean get_IsSynchronized()
+ [m]	Object get_Item(Object)
+ [m]	Void set_Item(Object,Object)
+ [m]	ICollection get_Keys()
+ [m]	Object get_SyncRoot()
+ [m]	ICollection get_Values()
+ [m]	Void Add(Object,Object)
+ [m]	Void Clear()
+ [m]	Boolean Contains(Object)
+ [m]	Void CopyTo(Array,Int32)
+ [m]	IDictionaryEnumerator GetEnumerator()
+ [m]	Void Remove(Object)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()

f [t] System.Collections.Specialized.IOrderedDictionary
+ [m]	Object get_Item(Int32)
+ [m]	Void set_Item(Int32,Object)
+ [m]	IDictionaryEnumerator GetEnumerator()
+ [m]	Void Insert(Int32,Object,Object)
+ [m]	Void RemoveAt(Int32)

f [t] System.Collections.Specialized.ListDictionary
+ [m]	Void .ctor()
+ [m]	Void .ctor(IComparer)
+ [m]	Int32 get_Count()
+ [m]	Boolean get_IsFixedSize()
+ [m]	Boolean get_IsReadOnly()
+ [m]	Boolean get_IsSynchronized()
+ [m]	Object get_Item(Object)
+ [m]	Void set_Item(Object,Object)
+ [m]	ICollection get_Keys()
+ [m]	Object get_SyncRoot()
+ [m]	ICollection get_Values()
+ [m]	Void Add(Object,Object)
+ [m]	Void Clear()
+ [m]	Boolean Contains(Object)
+ [m]	Void CopyTo(Array,Int32)
+ [m]	IDictionaryEnumerator GetEnumerator()
+ [m]	Void Remove(Object)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()

f [t] System.Collections.Specialized.NameObjectCollectionBase
+ [m]	Void .ctor()
+ [m]	Void .ctor(IEqualityComparer)
+ [m]	Void .ctor(Int32)
+ [m]	Void .ctor(Int32,IEqualityComparer)
+ [m]	Int32 get_Count()
+ [m]	Boolean get_IsReadOnly()
+ [m]	Void set_IsReadOnly(Boolean)
+ [m]	KeysCollection get_Keys()
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Void BaseAdd(String,Object)
+ [m]	Void BaseClear()
+ [m]	Object BaseGet(Int32)
+ [m]	Object BaseGet(String)
+ [m]	String[] BaseGetAllKeys()
+ [m]	Object[] BaseGetAllValues()
+ [m]	Object[] BaseGetAllValues(Type)
+ [m]	String BaseGetKey(Int32)
+ [m]	Boolean BaseHasKeys()
+ [m]	Void BaseRemove(String)
+ [m]	Void BaseRemoveAt(Int32)
+ [m]	Void BaseSet(Int32,Object)
+ [m]	Void BaseSet(String,Object)
+ [m]	IEnumerator GetEnumerator()
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)

f [t] System.Collections.Specialized.NameValueCollection
+ [m]	Void .ctor()
+ [m]	Void .ctor(IEqualityComparer)
+ [m]	Void .ctor(NameValueCollection)
+ [m]	Void .ctor(Int32)
+ [m]	Void .ctor(Int32,IEqualityComparer)
+ [m]	Void .ctor(Int32,NameValueCollection)
+ [m]	String[] get_AllKeys()
+ [m]	String get_Item(Int32)
+ [m]	String get_Item(String)
+ [m]	Void set_Item(String,String)
+ [m]	Void Add(NameValueCollection)
+ [m]	Void Add(String,String)
+ [m]	Void Clear()
+ [m]	Void CopyTo(Array,Int32)
+ [m]	String Get(Int32)
+ [m]	String Get(String)
+ [m]	String GetKey(Int32)
+ [m]	String[] GetValues(Int32)
+ [m]	String[] GetValues(String)
+ [m]	Boolean HasKeys()
+ [m]	Void InvalidateCachedArrays()
+ [m]	Void Remove(String)
+ [m]	Void Set(String,String)

f [t] System.Collections.Specialized.OrderedDictionary
+ [m]	Void .ctor()
+ [m]	Void .ctor(IEqualityComparer)
+ [m]	Void .ctor(Int32)
+ [m]	Void .ctor(Int32,IEqualityComparer)
+ [m]	Int32 get_Count()
+ [m]	Boolean get_IsReadOnly()
+ [m]	Object get_Item(Int32)
+ [m]	Void set_Item(Int32,Object)
+ [m]	Object get_Item(Object)
+ [m]	Void set_Item(Object,Object)
+ [m]	ICollection get_Keys()
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Boolean System.Collections.IDictionary.get_IsFixedSize()
+ [m]	ICollection get_Values()
+ [m]	Void Add(Object,Object)
+ [m]	OrderedDictionary AsReadOnly()
+ [m]	Void Clear()
+ [m]	Boolean Contains(Object)
+ [m]	Void CopyTo(Array,Int32)
+ [m]	IDictionaryEnumerator GetEnumerator()
+ [m]	Void Insert(Int32,Object,Object)
+ [m]	Void Remove(Object)
+ [m]	Void RemoveAt(Int32)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()

f [t] System.Collections.Specialized.StringCollection
+ [m]	Void .ctor()
+ [m]	Int32 get_Count()
+ [m]	Boolean get_IsReadOnly()
+ [m]	Boolean get_IsSynchronized()
+ [m]	String get_Item(Int32)
+ [m]	Void set_Item(Int32,String)
+ [m]	Object get_SyncRoot()
+ [m]	Boolean System.Collections.IList.get_IsFixedSize()
+ [m]	Boolean System.Collections.IList.get_IsReadOnly()
+ [m]	Object System.Collections.IList.get_Item(Int32)
+ [m]	Void System.Collections.IList.set_Item(Int32,Object)
+ [m]	Int32 Add(String)
+ [m]	Void AddRange(String[])
+ [m]	Void Clear()
+ [m]	Boolean Contains(String)
+ [m]	Void CopyTo(String[],Int32)
+ [m]	StringEnumerator GetEnumerator()
+ [m]	Int32 IndexOf(String)
+ [m]	Void Insert(Int32,String)
+ [m]	Void Remove(String)
+ [m]	Void RemoveAt(Int32)
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	Int32 System.Collections.IList.Add(Object)
+ [m]	Boolean System.Collections.IList.Contains(Object)
+ [m]	Int32 System.Collections.IList.IndexOf(Object)
+ [m]	Void System.Collections.IList.Insert(Int32,Object)
+ [m]	Void System.Collections.IList.Remove(Object)

f [t] System.Collections.Specialized.StringDictionary
+ [m]	Void .ctor()
+ [m]	Int32 get_Count()
+ [m]	Boolean get_IsSynchronized()
+ [m]	String get_Item(String)
+ [m]	Void set_Item(String,String)
+ [m]	ICollection get_Keys()
+ [m]	Object get_SyncRoot()
+ [m]	ICollection get_Values()
+ [m]	Void Add(String,String)
+ [m]	Void Clear()
+ [m]	Boolean ContainsKey(String)
+ [m]	Boolean ContainsValue(String)
+ [m]	Void CopyTo(Array,Int32)
+ [m]	IEnumerator GetEnumerator()
+ [m]	Void Remove(String)

f [t] System.Collections.Specialized.StringEnumerator
- [m]	Void .ctor()
+ [m]	String get_Current()
+ [m]	Boolean MoveNext()
+ [m]	Void Reset()

---------------------------------------
+ [a] System.ComponentModel.dll
ref: ./netstandard/packages/System.ComponentModel/ref/netstandard1.0/System.ComponentModel.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.ComponentModel.dll

f [t] System.IServiceProvider
+ [m]	Object GetService(Type)

f [t] System.ComponentModel.CancelEventArgs
+ [m]	Void .ctor()
+ [m]	Void .ctor(Boolean)
+ [m]	Boolean get_Cancel()
+ [m]	Void set_Cancel(Boolean)

f [t] System.ComponentModel.IChangeTracking
+ [m]	Boolean get_IsChanged()
+ [m]	Void AcceptChanges()

f [t] System.ComponentModel.IEditableObject
+ [m]	Void BeginEdit()
+ [m]	Void CancelEdit()
+ [m]	Void EndEdit()

f [t] System.ComponentModel.IRevertibleChangeTracking
+ [m]	Void RejectChanges()

---------------------------------------
+ [a] System.ComponentModel.Annotations.dll
ref: ./netstandard/packages/System.ComponentModel.Annotations/ref/netstandard1.4/System.ComponentModel.Annotations.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.ComponentModel.Annotations.dll

f [t] System.ComponentModel.DataAnnotations.AssociationAttribute
+ [m]	Void .ctor(String,String,String)
+ [m]	Boolean get_IsForeignKey()
+ [m]	Void set_IsForeignKey(Boolean)
+ [m]	String get_Name()
+ [m]	String get_OtherKey()
+ [m]	IEnumerable`1 get_OtherKeyMembers()
+ [m]	String get_ThisKey()
+ [m]	IEnumerable`1 get_ThisKeyMembers()

f [t] System.ComponentModel.DataAnnotations.CompareAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_OtherProperty()
+ [m]	String get_OtherPropertyDisplayName()
+ [m]	Boolean get_RequiresValidationContext()
+ [m]	String FormatErrorMessage(String)
+ [m]	ValidationResult IsValid(Object,ValidationContext)

f [t] System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute
+ [m]	Void .ctor()

f [t] System.ComponentModel.DataAnnotations.CreditCardAttribute
+ [m]	Void .ctor()
+ [m]	Boolean IsValid(Object)

f [t] System.ComponentModel.DataAnnotations.CustomValidationAttribute
+ [m]	Void .ctor(Type,String)
+ [m]	String get_Method()
+ [m]	Type get_ValidatorType()
+ [m]	String FormatErrorMessage(String)
+ [m]	ValidationResult IsValid(Object,ValidationContext)

f [t] System.ComponentModel.DataAnnotations.DataType

f [t] System.ComponentModel.DataAnnotations.DataTypeAttribute
+ [m]	Void .ctor(DataType)
+ [m]	Void .ctor(String)
+ [m]	String get_CustomDataType()
+ [m]	DataType get_DataType()
+ [m]	DisplayFormatAttribute get_DisplayFormat()
+ [m]	Void set_DisplayFormat(DisplayFormatAttribute)
+ [m]	String GetDataTypeName()
+ [m]	Boolean IsValid(Object)

f [t] System.ComponentModel.DataAnnotations.DisplayAttribute
+ [m]	Void .ctor()
+ [m]	Boolean get_AutoGenerateField()
+ [m]	Void set_AutoGenerateField(Boolean)
+ [m]	Boolean get_AutoGenerateFilter()
+ [m]	Void set_AutoGenerateFilter(Boolean)
+ [m]	String get_Description()
+ [m]	Void set_Description(String)
+ [m]	String get_GroupName()
+ [m]	Void set_GroupName(String)
+ [m]	String get_Name()
+ [m]	Void set_Name(String)
+ [m]	Int32 get_Order()
+ [m]	Void set_Order(Int32)
+ [m]	String get_Prompt()
+ [m]	Void set_Prompt(String)
+ [m]	Type get_ResourceType()
+ [m]	Void set_ResourceType(Type)
+ [m]	String get_ShortName()
+ [m]	Void set_ShortName(String)
+ [m]	Nullable`1 GetAutoGenerateField()
+ [m]	Nullable`1 GetAutoGenerateFilter()
+ [m]	String GetDescription()
+ [m]	String GetGroupName()
+ [m]	String GetName()
+ [m]	Nullable`1 GetOrder()
+ [m]	String GetPrompt()
+ [m]	String GetShortName()

f [t] System.ComponentModel.DataAnnotations.DisplayColumnAttribute
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,String)
+ [m]	Void .ctor(String,String,Boolean)
+ [m]	String get_DisplayColumn()
+ [m]	String get_SortColumn()
+ [m]	Boolean get_SortDescending()

f [t] System.ComponentModel.DataAnnotations.DisplayFormatAttribute
+ [m]	Void .ctor()
+ [m]	Boolean get_ApplyFormatInEditMode()
+ [m]	Void set_ApplyFormatInEditMode(Boolean)
+ [m]	Boolean get_ConvertEmptyStringToNull()
+ [m]	Void set_ConvertEmptyStringToNull(Boolean)
+ [m]	String get_DataFormatString()
+ [m]	Void set_DataFormatString(String)
+ [m]	Boolean get_HtmlEncode()
+ [m]	Void set_HtmlEncode(Boolean)
+ [m]	String get_NullDisplayText()
+ [m]	Void set_NullDisplayText(String)

f [t] System.ComponentModel.DataAnnotations.EditableAttribute
+ [m]	Void .ctor(Boolean)
+ [m]	Boolean get_AllowEdit()
+ [m]	Boolean get_AllowInitialValue()
+ [m]	Void set_AllowInitialValue(Boolean)

f [t] System.ComponentModel.DataAnnotations.EmailAddressAttribute
+ [m]	Void .ctor()
+ [m]	Boolean IsValid(Object)

f [t] System.ComponentModel.DataAnnotations.EnumDataTypeAttribute
+ [m]	Void .ctor(Type)
+ [m]	Type get_EnumType()
+ [m]	Boolean IsValid(Object)

f [t] System.ComponentModel.DataAnnotations.FileExtensionsAttribute
+ [m]	Void .ctor()
+ [m]	String get_Extensions()
+ [m]	Void set_Extensions(String)
+ [m]	String FormatErrorMessage(String)
+ [m]	Boolean IsValid(Object)

f [t] System.ComponentModel.DataAnnotations.FilterUIHintAttribute
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,String)
+ [m]	Void .ctor(String,String,Object[])
+ [m]	IDictionary`2 get_ControlParameters()
+ [m]	String get_FilterUIHint()
+ [m]	String get_PresentationLayer()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()

f [t] System.ComponentModel.DataAnnotations.IValidatableObject
+ [m]	IEnumerable`1 Validate(ValidationContext)

f [t] System.ComponentModel.DataAnnotations.KeyAttribute
+ [m]	Void .ctor()

f [t] System.ComponentModel.DataAnnotations.MaxLengthAttribute
+ [m]	Void .ctor()
+ [m]	Void .ctor(Int32)
+ [m]	Int32 get_Length()
+ [m]	String FormatErrorMessage(String)
+ [m]	Boolean IsValid(Object)

f [t] System.ComponentModel.DataAnnotations.MinLengthAttribute
+ [m]	Void .ctor(Int32)
+ [m]	Int32 get_Length()
+ [m]	String FormatErrorMessage(String)
+ [m]	Boolean IsValid(Object)

f [t] System.ComponentModel.DataAnnotations.PhoneAttribute
+ [m]	Void .ctor()
+ [m]	Boolean IsValid(Object)

f [t] System.ComponentModel.DataAnnotations.RangeAttribute
+ [m]	Void .ctor(Double,Double)
+ [m]	Void .ctor(Int32,Int32)
+ [m]	Void .ctor(Type,String,String)
+ [m]	Object get_Maximum()
+ [m]	Object get_Minimum()
+ [m]	Type get_OperandType()
+ [m]	String FormatErrorMessage(String)
+ [m]	Boolean IsValid(Object)

f [t] System.ComponentModel.DataAnnotations.RegularExpressionAttribute
+ [m]	Void .ctor(String)
+ [m]	Int32 get_MatchTimeoutInMilliseconds()
+ [m]	Void set_MatchTimeoutInMilliseconds(Int32)
+ [m]	String get_Pattern()
+ [m]	String FormatErrorMessage(String)
+ [m]	Boolean IsValid(Object)

f [t] System.ComponentModel.DataAnnotations.RequiredAttribute
+ [m]	Void .ctor()
+ [m]	Boolean get_AllowEmptyStrings()
+ [m]	Void set_AllowEmptyStrings(Boolean)
+ [m]	Boolean IsValid(Object)

f [t] System.ComponentModel.DataAnnotations.ScaffoldColumnAttribute
+ [m]	Void .ctor(Boolean)
+ [m]	Boolean get_Scaffold()

f [t] System.ComponentModel.DataAnnotations.StringLengthAttribute
+ [m]	Void .ctor(Int32)
+ [m]	Int32 get_MaximumLength()
+ [m]	Int32 get_MinimumLength()
+ [m]	Void set_MinimumLength(Int32)
+ [m]	String FormatErrorMessage(String)
+ [m]	Boolean IsValid(Object)

f [t] System.ComponentModel.DataAnnotations.TimestampAttribute
+ [m]	Void .ctor()

f [t] System.ComponentModel.DataAnnotations.UIHintAttribute
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,String)
+ [m]	Void .ctor(String,String,Object[])
+ [m]	IDictionary`2 get_ControlParameters()
+ [m]	String get_PresentationLayer()
+ [m]	String get_UIHint()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()

f [t] System.ComponentModel.DataAnnotations.UrlAttribute
+ [m]	Void .ctor()
+ [m]	Boolean IsValid(Object)

f [t] System.ComponentModel.DataAnnotations.ValidationAttribute
+ [m]	Void .ctor()
+ [m]	Void .ctor(Func`1)
+ [m]	Void .ctor(String)
+ [m]	String get_ErrorMessage()
+ [m]	Void set_ErrorMessage(String)
+ [m]	String get_ErrorMessageResourceName()
+ [m]	Void set_ErrorMessageResourceName(String)
+ [m]	Type get_ErrorMessageResourceType()
+ [m]	Void set_ErrorMessageResourceType(Type)
+ [m]	String get_ErrorMessageString()
+ [m]	Boolean get_RequiresValidationContext()
+ [m]	String FormatErrorMessage(String)
+ [m]	ValidationResult GetValidationResult(Object,ValidationContext)
+ [m]	Boolean IsValid(Object)
+ [m]	ValidationResult IsValid(Object,ValidationContext)
+ [m]	Void Validate(Object,ValidationContext)
+ [m]	Void Validate(Object,String)

f [t] System.ComponentModel.DataAnnotations.ValidationContext
+ [m]	Void .ctor(Object)
+ [m]	Void .ctor(Object,IDictionary`2)
+ [m]	Void .ctor(Object,IServiceProvider,IDictionary`2)
+ [m]	String get_DisplayName()
+ [m]	Void set_DisplayName(String)
+ [m]	IDictionary`2 get_Items()
+ [m]	String get_MemberName()
+ [m]	Void set_MemberName(String)
+ [m]	Object get_ObjectInstance()
+ [m]	Type get_ObjectType()
+ [m]	Object GetService(Type)
+ [m]	Void InitializeServiceProvider(Func`2)

f [t] System.ComponentModel.DataAnnotations.ValidationException
+ [m]	Void .ctor()
+ [m]	Void .ctor(ValidationResult,ValidationAttribute,Object)
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,ValidationAttribute,Object)
+ [m]	Void .ctor(String,Exception)
+ [m]	ValidationAttribute get_ValidationAttribute()
+ [m]	ValidationResult get_ValidationResult()
+ [m]	Object get_Value()

f [t] System.ComponentModel.DataAnnotations.ValidationResult
+ [m]	Void .ctor(ValidationResult)
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,IEnumerable`1)
+ [m]	String get_ErrorMessage()
+ [m]	Void set_ErrorMessage(String)
+ [m]	IEnumerable`1 get_MemberNames()
+ [m]	String ToString()

f [t] System.ComponentModel.DataAnnotations.Validator
+ [m]	Boolean TryValidateObject(Object,ValidationContext,ICollection`1)
+ [m]	Boolean TryValidateObject(Object,ValidationContext,ICollection`1,Boolean)
+ [m]	Boolean TryValidateProperty(Object,ValidationContext,ICollection`1)
+ [m]	Boolean TryValidateValue(Object,ValidationContext,ICollection`1,IEnumerable`1)
+ [m]	Void ValidateObject(Object,ValidationContext)
+ [m]	Void ValidateObject(Object,ValidationContext,Boolean)
+ [m]	Void ValidateProperty(Object,ValidationContext)
+ [m]	Void ValidateValue(Object,ValidationContext,IEnumerable`1)

f [t] System.ComponentModel.DataAnnotations.Schema.ColumnAttribute
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	String get_Name()
+ [m]	Int32 get_Order()
+ [m]	Void set_Order(Int32)
+ [m]	String get_TypeName()
+ [m]	Void set_TypeName(String)

f [t] System.ComponentModel.DataAnnotations.Schema.ComplexTypeAttribute
+ [m]	Void .ctor()

f [t] System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute
+ [m]	Void .ctor(DatabaseGeneratedOption)
+ [m]	DatabaseGeneratedOption get_DatabaseGeneratedOption()

f [t] System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption

f [t] System.ComponentModel.DataAnnotations.Schema.ForeignKeyAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_Name()

f [t] System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_Property()

f [t] System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute
+ [m]	Void .ctor()

f [t] System.ComponentModel.DataAnnotations.Schema.TableAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_Name()
+ [m]	String get_Schema()
+ [m]	Void set_Schema(String)

---------------------------------------
+ [a] System.ComponentModel.EventBasedAsync.dll
ref: ./netstandard/packages/System.ComponentModel.EventBasedAsync/ref/netstandard1.3/System.ComponentModel.EventBasedAsync.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.ComponentModel.EventBasedAsync.dll

f [t] System.ComponentModel.AsyncCompletedEventArgs
+ [m]	Void .ctor(Exception,Boolean,Object)
+ [m]	Boolean get_Cancelled()
+ [m]	Exception get_Error()
+ [m]	Object get_UserState()
+ [m]	Void RaiseExceptionIfNecessary()

f [t] System.ComponentModel.AsyncCompletedEventHandler
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object,AsyncCompletedEventArgs)
+ [m]	IAsyncResult BeginInvoke(Object,AsyncCompletedEventArgs,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.ComponentModel.AsyncOperation
- [m]	Void .ctor()
+ [m]	SynchronizationContext get_SynchronizationContext()
+ [m]	Object get_UserSuppliedState()
+ [m]	Void Finalize()
+ [m]	Void OperationCompleted()
+ [m]	Void Post(SendOrPostCallback,Object)
+ [m]	Void PostOperationCompleted(SendOrPostCallback,Object)

f [t] System.ComponentModel.AsyncOperationManager
+ [m]	SynchronizationContext get_SynchronizationContext()
+ [m]	Void set_SynchronizationContext(SynchronizationContext)
+ [m]	AsyncOperation CreateOperation(Object)

f [t] System.ComponentModel.BackgroundWorker
+ [m]	Void .ctor()
+ [m]	Boolean get_CancellationPending()
+ [m]	Boolean get_IsBusy()
+ [m]	Boolean get_WorkerReportsProgress()
+ [m]	Void set_WorkerReportsProgress(Boolean)
+ [m]	Boolean get_WorkerSupportsCancellation()
+ [m]	Void set_WorkerSupportsCancellation(Boolean)
+ [m]	Void add_DoWork(DoWorkEventHandler)
+ [m]	Void remove_DoWork(DoWorkEventHandler)
+ [m]	Void add_ProgressChanged(ProgressChangedEventHandler)
+ [m]	Void remove_ProgressChanged(ProgressChangedEventHandler)
+ [m]	Void add_RunWorkerCompleted(RunWorkerCompletedEventHandler)
+ [m]	Void remove_RunWorkerCompleted(RunWorkerCompletedEventHandler)
+ [m]	Void CancelAsync()
+ [m]	Void OnDoWork(DoWorkEventArgs)
+ [m]	Void OnProgressChanged(ProgressChangedEventArgs)
+ [m]	Void OnRunWorkerCompleted(RunWorkerCompletedEventArgs)
+ [m]	Void ReportProgress(Int32)
+ [m]	Void ReportProgress(Int32,Object)
+ [m]	Void RunWorkerAsync()
+ [m]	Void RunWorkerAsync(Object)
- [m]	Void Dispose()
- [m]	Void Dispose(Boolean)

f [t] System.ComponentModel.DoWorkEventArgs
+ [m]	Void .ctor(Object)
+ [m]	Object get_Argument()
+ [m]	Object get_Result()
+ [m]	Void set_Result(Object)
- [m]	Boolean get_Cancel()
- [m]	Void set_Cancel(Boolean)

f [t] System.ComponentModel.DoWorkEventHandler
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object,DoWorkEventArgs)
+ [m]	IAsyncResult BeginInvoke(Object,DoWorkEventArgs,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.ComponentModel.ProgressChangedEventArgs
+ [m]	Void .ctor(Int32,Object)
+ [m]	Int32 get_ProgressPercentage()
+ [m]	Object get_UserState()

f [t] System.ComponentModel.ProgressChangedEventHandler
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object,ProgressChangedEventArgs)
+ [m]	IAsyncResult BeginInvoke(Object,ProgressChangedEventArgs,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.ComponentModel.RunWorkerCompletedEventArgs
+ [m]	Void .ctor(Object,Exception,Boolean)
+ [m]	Object get_Result()
+ [m]	Object get_UserState()

f [t] System.ComponentModel.RunWorkerCompletedEventHandler
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object,RunWorkerCompletedEventArgs)
+ [m]	IAsyncResult BeginInvoke(Object,RunWorkerCompletedEventArgs,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

---------------------------------------
+ [a] System.ComponentModel.Primitives.dll
ref: ./netstandard/packages/System.ComponentModel.Primitives/ref/netstandard1.0/System.ComponentModel.Primitives.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.ComponentModel.Primitives.dll

f [t] System.ComponentModel.BrowsableAttribute
+ [m]	Void .ctor(Boolean)
+ [m]	Boolean get_Browsable()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()

f [t] System.ComponentModel.CategoryAttribute
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	CategoryAttribute get_Action()
+ [m]	CategoryAttribute get_Appearance()
+ [m]	CategoryAttribute get_Asynchronous()
+ [m]	CategoryAttribute get_Behavior()
+ [m]	String get_Category()
+ [m]	CategoryAttribute get_Data()
+ [m]	CategoryAttribute get_Default()
+ [m]	CategoryAttribute get_Design()
+ [m]	CategoryAttribute get_DragDrop()
+ [m]	CategoryAttribute get_Focus()
+ [m]	CategoryAttribute get_Format()
+ [m]	CategoryAttribute get_Key()
+ [m]	CategoryAttribute get_Layout()
+ [m]	CategoryAttribute get_Mouse()
+ [m]	CategoryAttribute get_WindowStyle()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	String GetLocalizedString(String)

f [t] System.ComponentModel.ComponentCollection
- [m]	Void .ctor()

f [t] System.ComponentModel.DescriptionAttribute
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	String get_Description()
+ [m]	String get_DescriptionValue()
+ [m]	Void set_DescriptionValue(String)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()

f [t] System.ComponentModel.DesignerCategoryAttribute
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	String get_Category()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()

f [t] System.ComponentModel.DesignerSerializationVisibility

f [t] System.ComponentModel.DesignerSerializationVisibilityAttribute
+ [m]	Void .ctor(DesignerSerializationVisibility)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	DesignerSerializationVisibility get_Visibility()

f [t] System.ComponentModel.DesignOnlyAttribute
+ [m]	Void .ctor(Boolean)
+ [m]	Boolean get_IsDesignOnly()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()

f [t] System.ComponentModel.DisplayNameAttribute
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	String get_DisplayName()
+ [m]	String get_DisplayNameValue()
+ [m]	Void set_DisplayNameValue(String)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()

f [t] System.ComponentModel.EventHandlerList
+ [m]	Void .ctor()
+ [m]	Delegate get_Item(Object)
+ [m]	Void set_Item(Object,Delegate)
+ [m]	Void AddHandler(Object,Delegate)
+ [m]	Void AddHandlers(EventHandlerList)
+ [m]	Void Dispose()
+ [m]	Void RemoveHandler(Object,Delegate)

f [t] System.ComponentModel.IComponent
+ [m]	ISite get_Site()
+ [m]	Void set_Site(ISite)
+ [m]	Void add_Disposed(EventHandler)
+ [m]	Void remove_Disposed(EventHandler)

f [t] System.ComponentModel.IContainer
+ [m]	ComponentCollection get_Components()
+ [m]	Void Add(IComponent)
+ [m]	Void Add(IComponent,String)
+ [m]	Void Remove(IComponent)

f [t] System.ComponentModel.ImmutableObjectAttribute
+ [m]	Void .ctor(Boolean)
+ [m]	Boolean get_Immutable()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()

f [t] System.ComponentModel.InitializationEventAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_EventName()

f [t] System.ComponentModel.ISite
+ [m]	IComponent get_Component()
+ [m]	IContainer get_Container()
+ [m]	Boolean get_DesignMode()
+ [m]	String get_Name()
+ [m]	Void set_Name(String)

f [t] System.ComponentModel.LocalizableAttribute
+ [m]	Void .ctor(Boolean)
+ [m]	Boolean get_IsLocalizable()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()

f [t] System.ComponentModel.MergablePropertyAttribute
+ [m]	Void .ctor(Boolean)
+ [m]	Boolean get_AllowMerge()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()

f [t] System.ComponentModel.NotifyParentPropertyAttribute
+ [m]	Void .ctor(Boolean)
+ [m]	Boolean get_NotifyParent()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()

f [t] System.ComponentModel.ParenthesizePropertyNameAttribute
+ [m]	Void .ctor()
+ [m]	Void .ctor(Boolean)
+ [m]	Boolean get_NeedParenthesis()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()

f [t] System.ComponentModel.ReadOnlyAttribute
+ [m]	Void .ctor(Boolean)
+ [m]	Boolean get_IsReadOnly()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()

f [t] System.ComponentModel.RefreshProperties

f [t] System.ComponentModel.RefreshPropertiesAttribute
+ [m]	Void .ctor(RefreshProperties)
+ [m]	RefreshProperties get_RefreshProperties()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()

---------------------------------------
+ [a] System.ComponentModel.TypeConverter.dll
ref: ./netstandard/packages/System.ComponentModel.TypeConverter/ref/netstandard1.5/System.ComponentModel.TypeConverter.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.ComponentModel.TypeConverter.dll

f [t] System.UriTypeConverter
+ [m]	Void .ctor()
+ [m]	Boolean CanConvertFrom(ITypeDescriptorContext,Type)
+ [m]	Boolean CanConvertTo(ITypeDescriptorContext,Type)
+ [m]	Object ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
+ [m]	Object ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)

f [t] System.ComponentModel.ArrayConverter
+ [m]	Void .ctor()
+ [m]	Object ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
+ [m]	PropertyDescriptorCollection GetProperties(ITypeDescriptorContext,Object,Attribute[])
+ [m]	Boolean GetPropertiesSupported(ITypeDescriptorContext)

f [t] System.ComponentModel.AttributeCollection
+ [m]	Void .ctor()
+ [m]	Void .ctor(Attribute[])
+ [m]	Attribute[] get_Attributes()
+ [m]	Boolean Contains(Attribute)
+ [m]	Boolean Contains(Attribute[])
+ [m]	Void CopyTo(Array,Int32)
+ [m]	Int32 get_Count()
+ [m]	AttributeCollection FromExisting(AttributeCollection,Attribute[])
+ [m]	Attribute GetDefaultAttribute(Type)
+ [m]	IEnumerator GetEnumerator()
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Boolean Matches(Attribute)
+ [m]	Boolean Matches(Attribute[])
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Attribute get_Item(Int32)
+ [m]	Attribute get_Item(Type)

f [t] System.ComponentModel.AttributeProviderAttribute
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,String)
+ [m]	Void .ctor(Type)
+ [m]	String get_PropertyName()
+ [m]	String get_TypeName()

f [t] System.ComponentModel.BaseNumberConverter
+ [m]	Void .ctor()
+ [m]	Boolean CanConvertFrom(ITypeDescriptorContext,Type)
+ [m]	Boolean CanConvertTo(ITypeDescriptorContext,Type)
+ [m]	Object ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
+ [m]	Object ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)

f [t] System.ComponentModel.BooleanConverter
+ [m]	Void .ctor()
+ [m]	Boolean CanConvertFrom(ITypeDescriptorContext,Type)
+ [m]	Object ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
+ [m]	StandardValuesCollection GetStandardValues(ITypeDescriptorContext)
+ [m]	Boolean GetStandardValuesExclusive(ITypeDescriptorContext)
+ [m]	Boolean GetStandardValuesSupported(ITypeDescriptorContext)

f [t] System.ComponentModel.ByteConverter
+ [m]	Void .ctor()

f [t] System.ComponentModel.CancelEventHandler
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object,CancelEventArgs)
+ [m]	IAsyncResult BeginInvoke(Object,CancelEventArgs,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.ComponentModel.CharConverter
+ [m]	Void .ctor()
+ [m]	Boolean CanConvertFrom(ITypeDescriptorContext,Type)
+ [m]	Object ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
+ [m]	Object ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)

f [t] System.ComponentModel.CollectionChangeAction

f [t] System.ComponentModel.CollectionChangeEventArgs
+ [m]	Void .ctor(CollectionChangeAction,Object)
+ [m]	CollectionChangeAction get_Action()
+ [m]	Object get_Element()

f [t] System.ComponentModel.CollectionChangeEventHandler
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object,CollectionChangeEventArgs)
+ [m]	IAsyncResult BeginInvoke(Object,CollectionChangeEventArgs,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.ComponentModel.CollectionConverter
+ [m]	Void .ctor()
+ [m]	Object ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
+ [m]	PropertyDescriptorCollection GetProperties(ITypeDescriptorContext,Object,Attribute[])
+ [m]	Boolean GetPropertiesSupported(ITypeDescriptorContext)

f [t] System.ComponentModel.CustomTypeDescriptor
+ [m]	Void .ctor()
+ [m]	Void .ctor(ICustomTypeDescriptor)
+ [m]	AttributeCollection GetAttributes()
+ [m]	String GetClassName()
+ [m]	String GetComponentName()
+ [m]	TypeConverter GetConverter()
+ [m]	EventDescriptor GetDefaultEvent()
+ [m]	PropertyDescriptor GetDefaultProperty()
+ [m]	Object GetEditor(Type)
+ [m]	EventDescriptorCollection GetEvents()
+ [m]	EventDescriptorCollection GetEvents(Attribute[])
+ [m]	PropertyDescriptorCollection GetProperties()
+ [m]	PropertyDescriptorCollection GetProperties(Attribute[])
+ [m]	Object GetPropertyOwner(PropertyDescriptor)

f [t] System.ComponentModel.DateTimeConverter
+ [m]	Void .ctor()
+ [m]	Boolean CanConvertFrom(ITypeDescriptorContext,Type)
+ [m]	Boolean CanConvertTo(ITypeDescriptorContext,Type)
+ [m]	Object ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
+ [m]	Object ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)

f [t] System.ComponentModel.DateTimeOffsetConverter
+ [m]	Void .ctor()
+ [m]	Boolean CanConvertFrom(ITypeDescriptorContext,Type)
+ [m]	Boolean CanConvertTo(ITypeDescriptorContext,Type)
+ [m]	Object ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
+ [m]	Object ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)

f [t] System.ComponentModel.DecimalConverter
+ [m]	Void .ctor()
+ [m]	Boolean CanConvertTo(ITypeDescriptorContext,Type)
+ [m]	Object ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)

f [t] System.ComponentModel.DefaultEventAttribute
+ [m]	Void .ctor(String)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	String get_Name()

f [t] System.ComponentModel.DefaultPropertyAttribute
+ [m]	Void .ctor(String)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	String get_Name()

f [t] System.ComponentModel.DoubleConverter
+ [m]	Void .ctor()

f [t] System.ComponentModel.EnumConverter
+ [m]	Void .ctor(Type)
+ [m]	Type get_EnumType()
+ [m]	IComparer get_Comparer()
+ [m]	Boolean CanConvertFrom(ITypeDescriptorContext,Type)
+ [m]	Boolean CanConvertTo(ITypeDescriptorContext,Type)
+ [m]	Object ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
+ [m]	Object ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
+ [m]	StandardValuesCollection GetStandardValues(ITypeDescriptorContext)
+ [m]	Boolean GetStandardValuesExclusive(ITypeDescriptorContext)
+ [m]	Boolean GetStandardValuesSupported(ITypeDescriptorContext)
+ [m]	Boolean IsValid(ITypeDescriptorContext,Object)
+ [m]	StandardValuesCollection get_Values()
+ [m]	Void set_Values(StandardValuesCollection)

f [t] System.ComponentModel.EventDescriptor
+ [m]	Void .ctor(MemberDescriptor)
+ [m]	Void .ctor(MemberDescriptor,Attribute[])
+ [m]	Void .ctor(String,Attribute[])
+ [m]	Void AddEventHandler(Object,Delegate)
+ [m]	Type get_ComponentType()
+ [m]	Type get_EventType()
+ [m]	Boolean get_IsMulticast()
+ [m]	Void RemoveEventHandler(Object,Delegate)

f [t] System.ComponentModel.EventDescriptorCollection
+ [m]	Void .ctor(EventDescriptor[])
+ [m]	Void .ctor(EventDescriptor[],Boolean)
+ [m]	Int32 System.Collections.IList.Add(Object)
+ [m]	Boolean System.Collections.IList.Contains(Object)
+ [m]	Int32 get_Count()
+ [m]	Int32 System.Collections.IList.IndexOf(Object)
+ [m]	Void System.Collections.IList.Insert(Int32,Object)
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Boolean System.Collections.IList.get_IsFixedSize()
+ [m]	Boolean System.Collections.IList.get_IsReadOnly()
+ [m]	Void System.Collections.IList.Remove(Object)
+ [m]	Object System.Collections.IList.get_Item(Int32)
+ [m]	Void System.Collections.IList.set_Item(Int32,Object)
+ [m]	EventDescriptor get_Item(Int32)
+ [m]	EventDescriptor get_Item(String)
+ [m]	Int32 Add(EventDescriptor)
+ [m]	Void Clear()
+ [m]	Boolean Contains(EventDescriptor)
+ [m]	EventDescriptor Find(String,Boolean)
+ [m]	IEnumerator GetEnumerator()
+ [m]	Int32 IndexOf(EventDescriptor)
+ [m]	Void Insert(Int32,EventDescriptor)
+ [m]	Void InternalSort(IComparer)
+ [m]	Void InternalSort(String[])
+ [m]	Void Remove(EventDescriptor)
+ [m]	Void RemoveAt(Int32)
+ [m]	EventDescriptorCollection Sort()
+ [m]	EventDescriptorCollection Sort(IComparer)
+ [m]	EventDescriptorCollection Sort(String[])
+ [m]	EventDescriptorCollection Sort(String[],IComparer)
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)

f [t] System.ComponentModel.ExtenderProvidedPropertyAttribute
+ [m]	Void .ctor()
+ [m]	PropertyDescriptor get_ExtenderProperty()
+ [m]	IExtenderProvider get_Provider()
+ [m]	Type get_ReceiverType()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()

f [t] System.ComponentModel.GuidConverter
+ [m]	Void .ctor()
+ [m]	Boolean CanConvertFrom(ITypeDescriptorContext,Type)
+ [m]	Boolean CanConvertTo(ITypeDescriptorContext,Type)
+ [m]	Object ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
+ [m]	Object ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)

f [t] System.ComponentModel.HandledEventArgs
+ [m]	Void .ctor()
+ [m]	Void .ctor(Boolean)
+ [m]	Boolean get_Handled()
+ [m]	Void set_Handled(Boolean)

f [t] System.ComponentModel.HandledEventHandler
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object,HandledEventArgs)
+ [m]	IAsyncResult BeginInvoke(Object,HandledEventArgs,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.ComponentModel.ICustomTypeDescriptor
+ [m]	AttributeCollection GetAttributes()
+ [m]	String GetClassName()
+ [m]	String GetComponentName()
+ [m]	TypeConverter GetConverter()
+ [m]	EventDescriptor GetDefaultEvent()
+ [m]	PropertyDescriptor GetDefaultProperty()
+ [m]	Object GetEditor(Type)
+ [m]	EventDescriptorCollection GetEvents()
+ [m]	EventDescriptorCollection GetEvents(Attribute[])
+ [m]	PropertyDescriptorCollection GetProperties()
+ [m]	PropertyDescriptorCollection GetProperties(Attribute[])
+ [m]	Object GetPropertyOwner(PropertyDescriptor)

f [t] System.ComponentModel.IExtenderProvider
+ [m]	Boolean CanExtend(Object)

f [t] System.ComponentModel.IListSource
+ [m]	Boolean get_ContainsListCollection()
+ [m]	IList GetList()

f [t] System.ComponentModel.Int16Converter
+ [m]	Void .ctor()

f [t] System.ComponentModel.Int32Converter
+ [m]	Void .ctor()

f [t] System.ComponentModel.Int64Converter
+ [m]	Void .ctor()

f [t] System.ComponentModel.InvalidAsynchronousStateException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.ComponentModel.ITypeDescriptorContext
+ [m]	IContainer get_Container()
+ [m]	Object get_Instance()
+ [m]	PropertyDescriptor get_PropertyDescriptor()
+ [m]	Void OnComponentChanged()
+ [m]	Boolean OnComponentChanging()

f [t] System.ComponentModel.ITypedList
+ [m]	PropertyDescriptorCollection GetItemProperties(PropertyDescriptor[])
+ [m]	String GetListName(PropertyDescriptor[])

f [t] System.ComponentModel.MemberDescriptor
+ [m]	Void .ctor(MemberDescriptor)
+ [m]	Void .ctor(MemberDescriptor,Attribute[])
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Attribute[])
+ [m]	Attribute[] get_AttributeArray()
+ [m]	Void set_AttributeArray(Attribute[])
+ [m]	AttributeCollection get_Attributes()
+ [m]	String get_Category()
+ [m]	String get_Description()
+ [m]	Boolean get_DesignTimeOnly()
+ [m]	String get_DisplayName()
+ [m]	Boolean get_IsBrowsable()
+ [m]	String get_Name()
+ [m]	Int32 get_NameHashCode()
+ [m]	AttributeCollection CreateAttributeCollection()
+ [m]	Boolean Equals(Object)
+ [m]	Void FillAttributes(IList)
+ [m]	MethodInfo FindMethod(Type,String,Type[],Type)
+ [m]	MethodInfo FindMethod(Type,String,Type[],Type,Boolean)
+ [m]	Int32 GetHashCode()
+ [m]	Object GetInvocationTarget(Type,Object)
+ [m]	ISite GetSite(Object)

f [t] System.ComponentModel.MultilineStringConverter
+ [m]	Void .ctor()
+ [m]	Object ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
+ [m]	PropertyDescriptorCollection GetProperties(ITypeDescriptorContext,Object,Attribute[])
+ [m]	Boolean GetPropertiesSupported(ITypeDescriptorContext)

f [t] System.ComponentModel.NullableConverter
+ [m]	Void .ctor(Type)
+ [m]	Type get_NullableType()
+ [m]	Type get_UnderlyingType()
+ [m]	TypeConverter get_UnderlyingTypeConverter()
+ [m]	Boolean CanConvertFrom(ITypeDescriptorContext,Type)
+ [m]	Boolean CanConvertTo(ITypeDescriptorContext,Type)
+ [m]	Object ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
+ [m]	Object ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
+ [m]	Object CreateInstance(ITypeDescriptorContext,IDictionary)
+ [m]	Boolean GetCreateInstanceSupported(ITypeDescriptorContext)
+ [m]	PropertyDescriptorCollection GetProperties(ITypeDescriptorContext,Object,Attribute[])
+ [m]	Boolean GetPropertiesSupported(ITypeDescriptorContext)
+ [m]	StandardValuesCollection GetStandardValues(ITypeDescriptorContext)
+ [m]	Boolean GetStandardValuesExclusive(ITypeDescriptorContext)
+ [m]	Boolean GetStandardValuesSupported(ITypeDescriptorContext)
+ [m]	Boolean IsValid(ITypeDescriptorContext,Object)

f [t] System.ComponentModel.PropertyDescriptor
+ [m]	Void .ctor(MemberDescriptor)
+ [m]	Void .ctor(MemberDescriptor,Attribute[])
+ [m]	Void .ctor(String,Attribute[])
+ [m]	Type get_ComponentType()
+ [m]	TypeConverter get_Converter()
+ [m]	Boolean get_IsLocalizable()
+ [m]	Boolean get_IsReadOnly()
+ [m]	Type get_PropertyType()
+ [m]	Boolean get_SupportsChangeEvents()
+ [m]	Void AddValueChanged(Object,EventHandler)
+ [m]	Boolean CanResetValue(Object)
+ [m]	Object CreateInstance(Type)
+ [m]	Boolean Equals(Object)
+ [m]	Void FillAttributes(IList)
+ [m]	PropertyDescriptorCollection GetChildProperties()
+ [m]	PropertyDescriptorCollection GetChildProperties(Attribute[])
+ [m]	PropertyDescriptorCollection GetChildProperties(Object)
+ [m]	PropertyDescriptorCollection GetChildProperties(Object,Attribute[])
+ [m]	Object GetEditor(Type)
+ [m]	Int32 GetHashCode()
+ [m]	Object GetInvocationTarget(Type,Object)
+ [m]	Type GetTypeFromName(String)
+ [m]	Object GetValue(Object)
+ [m]	EventHandler GetValueChangedHandler(Object)
+ [m]	Void OnValueChanged(Object,EventArgs)
+ [m]	Void RemoveValueChanged(Object,EventHandler)
+ [m]	Void ResetValue(Object)
+ [m]	DesignerSerializationVisibility get_SerializationVisibility()
+ [m]	Void SetValue(Object,Object)
+ [m]	Boolean ShouldSerializeValue(Object)

f [t] System.ComponentModel.PropertyDescriptorCollection
+ [m]	Void .ctor(PropertyDescriptor[])
+ [m]	Void .ctor(PropertyDescriptor[],Boolean)
+ [m]	Int32 get_Count()
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Boolean System.Collections.IDictionary.get_IsFixedSize()
+ [m]	Void System.Collections.IDictionary.Add(Object,Object)
+ [m]	Boolean System.Collections.IDictionary.Contains(Object)
+ [m]	Object System.Collections.IDictionary.get_Item(Object)
+ [m]	Void System.Collections.IDictionary.set_Item(Object,Object)
+ [m]	Void System.Collections.IDictionary.Remove(Object)
+ [m]	Boolean System.Collections.IDictionary.get_IsReadOnly()
+ [m]	IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
+ [m]	ICollection System.Collections.IDictionary.get_Keys()
+ [m]	ICollection System.Collections.IDictionary.get_Values()
+ [m]	Boolean System.Collections.IList.get_IsFixedSize()
+ [m]	Boolean System.Collections.IList.get_IsReadOnly()
+ [m]	Int32 System.Collections.IList.Add(Object)
+ [m]	Void System.Collections.IList.Remove(Object)
+ [m]	Boolean System.Collections.IList.Contains(Object)
+ [m]	Int32 System.Collections.IList.IndexOf(Object)
+ [m]	Void System.Collections.IList.Insert(Int32,Object)
+ [m]	Object System.Collections.IList.get_Item(Int32)
+ [m]	Void System.Collections.IList.set_Item(Int32,Object)
+ [m]	PropertyDescriptor get_Item(Int32)
+ [m]	PropertyDescriptor get_Item(String)
+ [m]	Int32 Add(PropertyDescriptor)
+ [m]	Void Clear()
+ [m]	Boolean Contains(PropertyDescriptor)
+ [m]	Void CopyTo(Array,Int32)
+ [m]	PropertyDescriptor Find(String,Boolean)
+ [m]	IEnumerator GetEnumerator()
+ [m]	Int32 IndexOf(PropertyDescriptor)
+ [m]	Void Insert(Int32,PropertyDescriptor)
+ [m]	Void InternalSort(IComparer)
+ [m]	Void InternalSort(String[])
+ [m]	Void Remove(PropertyDescriptor)
+ [m]	Void RemoveAt(Int32)
+ [m]	PropertyDescriptorCollection Sort()
+ [m]	PropertyDescriptorCollection Sort(IComparer)
+ [m]	PropertyDescriptorCollection Sort(String[])
+ [m]	PropertyDescriptorCollection Sort(String[],IComparer)

f [t] System.ComponentModel.ProvidePropertyAttribute
+ [m]	Void .ctor(String,String)
+ [m]	Void .ctor(String,Type)
+ [m]	String get_PropertyName()
+ [m]	String get_ReceiverTypeName()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()

f [t] System.ComponentModel.RefreshEventArgs
+ [m]	Void .ctor(Object)
+ [m]	Void .ctor(Type)
+ [m]	Object get_ComponentChanged()
+ [m]	Type get_TypeChanged()

f [t] System.ComponentModel.RefreshEventHandler
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(RefreshEventArgs)
+ [m]	IAsyncResult BeginInvoke(RefreshEventArgs,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.ComponentModel.SByteConverter
+ [m]	Void .ctor()

f [t] System.ComponentModel.SingleConverter
+ [m]	Void .ctor()

f [t] System.ComponentModel.StringConverter
+ [m]	Void .ctor()
+ [m]	Boolean CanConvertFrom(ITypeDescriptorContext,Type)
+ [m]	Object ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)

f [t] System.ComponentModel.TimeSpanConverter
+ [m]	Void .ctor()
+ [m]	Boolean CanConvertFrom(ITypeDescriptorContext,Type)
+ [m]	Boolean CanConvertTo(ITypeDescriptorContext,Type)
+ [m]	Object ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
+ [m]	Object ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)

f [t] System.ComponentModel.TypeConverter
+ [m]	Void .ctor()
+ [m]	Boolean CanConvertFrom(ITypeDescriptorContext,Type)
+ [m]	Boolean CanConvertFrom(Type)
+ [m]	Boolean CanConvertTo(ITypeDescriptorContext,Type)
+ [m]	Boolean CanConvertTo(Type)
+ [m]	Object ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
+ [m]	Object ConvertFrom(Object)
+ [m]	Object ConvertFromInvariantString(ITypeDescriptorContext,String)
+ [m]	Object ConvertFromInvariantString(String)
+ [m]	Object ConvertFromString(ITypeDescriptorContext,CultureInfo,String)
+ [m]	Object ConvertFromString(ITypeDescriptorContext,String)
+ [m]	Object ConvertFromString(String)
+ [m]	Object ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
+ [m]	Object ConvertTo(Object,Type)
+ [m]	String ConvertToInvariantString(ITypeDescriptorContext,Object)
+ [m]	String ConvertToInvariantString(Object)
+ [m]	String ConvertToString(ITypeDescriptorContext,CultureInfo,Object)
+ [m]	String ConvertToString(ITypeDescriptorContext,Object)
+ [m]	String ConvertToString(Object)
+ [m]	Object CreateInstance(IDictionary)
+ [m]	Object CreateInstance(ITypeDescriptorContext,IDictionary)
+ [m]	Exception GetConvertFromException(Object)
+ [m]	Exception GetConvertToException(Object,Type)
+ [m]	Boolean GetCreateInstanceSupported()
+ [m]	Boolean GetCreateInstanceSupported(ITypeDescriptorContext)
+ [m]	PropertyDescriptorCollection GetProperties(ITypeDescriptorContext,Object)
+ [m]	PropertyDescriptorCollection GetProperties(ITypeDescriptorContext,Object,Attribute[])
+ [m]	PropertyDescriptorCollection GetProperties(Object)
+ [m]	Boolean GetPropertiesSupported()
+ [m]	Boolean GetPropertiesSupported(ITypeDescriptorContext)
+ [m]	ICollection GetStandardValues()
+ [m]	StandardValuesCollection GetStandardValues(ITypeDescriptorContext)
+ [m]	Boolean GetStandardValuesExclusive()
+ [m]	Boolean GetStandardValuesExclusive(ITypeDescriptorContext)
+ [m]	Boolean GetStandardValuesSupported()
+ [m]	Boolean GetStandardValuesSupported(ITypeDescriptorContext)
+ [m]	Boolean IsValid(ITypeDescriptorContext,Object)
+ [m]	Boolean IsValid(Object)
+ [m]	PropertyDescriptorCollection SortProperties(PropertyDescriptorCollection,String[])

f [t] System.ComponentModel.TypeConverterAttribute
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(Type)
+ [m]	String get_ConverterTypeName()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()

f [t] System.ComponentModel.TypeDescriptionProvider
+ [m]	Void .ctor()
+ [m]	Void .ctor(TypeDescriptionProvider)
+ [m]	Object CreateInstance(IServiceProvider,Type,Type[],Object[])
+ [m]	IDictionary GetCache(Object)
+ [m]	ICustomTypeDescriptor GetExtendedTypeDescriptor(Object)
+ [m]	IExtenderProvider[] GetExtenderProviders(Object)
+ [m]	String GetFullComponentName(Object)
+ [m]	Type GetReflectionType(Object)
+ [m]	Type GetReflectionType(Type)
+ [m]	Type GetReflectionType(Type,Object)
+ [m]	Type GetRuntimeType(Type)
+ [m]	ICustomTypeDescriptor GetTypeDescriptor(Object)
+ [m]	ICustomTypeDescriptor GetTypeDescriptor(Type)
+ [m]	ICustomTypeDescriptor GetTypeDescriptor(Type,Object)
+ [m]	Boolean IsSupportedType(Type)

f [t] System.ComponentModel.TypeDescriptionProviderAttribute
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(Type)
+ [m]	String get_TypeName()

f [t] System.ComponentModel.TypeDescriptor
+ [m]	Void .ctor()
+ [m]	Type get_InterfaceType()
+ [m]	Void add_Refreshed(RefreshEventHandler)
+ [m]	Void remove_Refreshed(RefreshEventHandler)
+ [m]	TypeDescriptionProvider AddAttributes(Object,Attribute[])
+ [m]	TypeDescriptionProvider AddAttributes(Type,Attribute[])
+ [m]	Void AddEditorTable(Type,Hashtable)
+ [m]	Void AddProvider(TypeDescriptionProvider,Object)
+ [m]	Void AddProvider(TypeDescriptionProvider,Type)
+ [m]	Void AddProviderTransparent(TypeDescriptionProvider,Object)
+ [m]	Void AddProviderTransparent(TypeDescriptionProvider,Type)
+ [m]	Void CreateAssociation(Object,Object)
+ [m]	EventDescriptor CreateEvent(Type,EventDescriptor,Attribute[])
+ [m]	EventDescriptor CreateEvent(Type,String,Type,Attribute[])
+ [m]	Object CreateInstance(IServiceProvider,Type,Type[],Object[])
+ [m]	PropertyDescriptor CreateProperty(Type,PropertyDescriptor,Attribute[])
+ [m]	PropertyDescriptor CreateProperty(Type,String,Type,Attribute[])
+ [m]	Object GetAssociation(Type,Object)
+ [m]	AttributeCollection GetAttributes(Object)
+ [m]	AttributeCollection GetAttributes(Object,Boolean)
+ [m]	AttributeCollection GetAttributes(Type)
+ [m]	String GetClassName(Object)
+ [m]	String GetClassName(Object,Boolean)
+ [m]	String GetClassName(Type)
+ [m]	String GetComponentName(Object)
+ [m]	String GetComponentName(Object,Boolean)
+ [m]	TypeConverter GetConverter(Object)
+ [m]	TypeConverter GetConverter(Object,Boolean)
+ [m]	TypeConverter GetConverter(Type)
+ [m]	EventDescriptor GetDefaultEvent(Object)
+ [m]	EventDescriptor GetDefaultEvent(Object,Boolean)
+ [m]	EventDescriptor GetDefaultEvent(Type)
+ [m]	PropertyDescriptor GetDefaultProperty(Object)
+ [m]	PropertyDescriptor GetDefaultProperty(Object,Boolean)
+ [m]	PropertyDescriptor GetDefaultProperty(Type)
+ [m]	Object GetEditor(Object,Type)
+ [m]	Object GetEditor(Object,Type,Boolean)
+ [m]	Object GetEditor(Type,Type)
+ [m]	EventDescriptorCollection GetEvents(Object)
+ [m]	EventDescriptorCollection GetEvents(Object,Attribute[])
+ [m]	EventDescriptorCollection GetEvents(Object,Attribute[],Boolean)
+ [m]	EventDescriptorCollection GetEvents(Object,Boolean)
+ [m]	EventDescriptorCollection GetEvents(Type)
+ [m]	EventDescriptorCollection GetEvents(Type,Attribute[])
+ [m]	String GetFullComponentName(Object)
+ [m]	PropertyDescriptorCollection GetProperties(Object)
+ [m]	PropertyDescriptorCollection GetProperties(Object,Attribute[])
+ [m]	PropertyDescriptorCollection GetProperties(Object,Attribute[],Boolean)
+ [m]	PropertyDescriptorCollection GetProperties(Object,Boolean)
+ [m]	PropertyDescriptorCollection GetProperties(Type)
+ [m]	PropertyDescriptorCollection GetProperties(Type,Attribute[])
+ [m]	TypeDescriptionProvider GetProvider(Object)
+ [m]	TypeDescriptionProvider GetProvider(Type)
+ [m]	Type GetReflectionType(Object)
+ [m]	Type GetReflectionType(Type)
+ [m]	Void Refresh(Object)
+ [m]	Void Refresh(Assembly)
+ [m]	Void Refresh(Module)
+ [m]	Void Refresh(Type)
+ [m]	Void RemoveAssociation(Object,Object)
+ [m]	Void RemoveAssociations(Object)
+ [m]	Void RemoveProvider(TypeDescriptionProvider,Object)
+ [m]	Void RemoveProvider(TypeDescriptionProvider,Type)
+ [m]	Void RemoveProviderTransparent(TypeDescriptionProvider,Object)
+ [m]	Void RemoveProviderTransparent(TypeDescriptionProvider,Type)
+ [m]	Void SortDescriptorArray(IList)

f [t] System.ComponentModel.TypeListConverter
+ [m]	Void .ctor(Type[])
+ [m]	Boolean CanConvertFrom(ITypeDescriptorContext,Type)
+ [m]	Boolean CanConvertTo(ITypeDescriptorContext,Type)
+ [m]	Object ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
+ [m]	Object ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
+ [m]	StandardValuesCollection GetStandardValues(ITypeDescriptorContext)
+ [m]	Boolean GetStandardValuesExclusive(ITypeDescriptorContext)
+ [m]	Boolean GetStandardValuesSupported(ITypeDescriptorContext)

f [t] System.ComponentModel.UInt16Converter
+ [m]	Void .ctor()

f [t] System.ComponentModel.UInt32Converter
+ [m]	Void .ctor()

f [t] System.ComponentModel.UInt64Converter
+ [m]	Void .ctor()

---------------------------------------
+ [a] System.Console.dll
ref: ./netstandard/packages/System.Console/ref/netstandard1.3/System.Console.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Console.dll

f [t] System.Console
- [m]	ConsoleColor get_BackgroundColor()
- [m]	Void set_BackgroundColor(ConsoleColor)
- [m]	Void Beep()
- [m]	Void Beep(Int32,Int32)
- [m]	Int32 get_BufferHeight()
- [m]	Void set_BufferHeight(Int32)
- [m]	Int32 get_BufferWidth()
- [m]	Void set_BufferWidth(Int32)
- [m]	Boolean get_CapsLock()
- [m]	Void add_CancelKeyPress(ConsoleCancelEventHandler)
- [m]	Void remove_CancelKeyPress(ConsoleCancelEventHandler)
- [m]	Void Clear()
- [m]	Int32 get_CursorLeft()
- [m]	Void set_CursorLeft(Int32)
- [m]	Int32 get_CursorSize()
- [m]	Void set_CursorSize(Int32)
- [m]	Int32 get_CursorTop()
- [m]	Void set_CursorTop(Int32)
- [m]	Boolean get_CursorVisible()
- [m]	Void set_CursorVisible(Boolean)
+ [m]	TextWriter get_Error()
- [m]	ConsoleColor get_ForegroundColor()
- [m]	Void set_ForegroundColor(ConsoleColor)
+ [m]	Encoding get_InputEncoding()
+ [m]	Void set_InputEncoding(Encoding)
- [m]	Boolean get_IsErrorRedirected()
- [m]	Boolean get_IsInputRedirected()
- [m]	Boolean get_IsOutputRedirected()
+ [m]	TextReader get_In()
- [m]	Boolean get_KeyAvailable()
- [m]	Int32 get_LargestWindowWidth()
- [m]	Int32 get_LargestWindowHeight()
- [m]	Void MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32)
- [m]	Void MoveBufferArea(Int32,Int32,Int32,Int32,Int32,Int32,Char,ConsoleColor,ConsoleColor)
- [m]	Boolean get_NumberLock()
+ [m]	Stream OpenStandardError()
+ [m]	Stream OpenStandardInput()
+ [m]	Stream OpenStandardOutput()
+ [m]	TextWriter get_Out()
+ [m]	Encoding get_OutputEncoding()
+ [m]	Void set_OutputEncoding(Encoding)
+ [m]	Int32 Read()
- [m]	ConsoleKeyInfo ReadKey()
- [m]	ConsoleKeyInfo ReadKey(Boolean)
+ [m]	String ReadLine()
- [m]	Void ResetColor()
- [m]	Void SetBufferSize(Int32,Int32)
- [m]	Void SetCursorPosition(Int32,Int32)
+ [m]	Void SetError(TextWriter)
+ [m]	Void SetIn(TextReader)
+ [m]	Void SetOut(TextWriter)
- [m]	Void SetWindowPosition(Int32,Int32)
- [m]	Void SetWindowSize(Int32,Int32)
- [m]	String get_Title()
- [m]	Void set_Title(String)
- [m]	Boolean get_TreatControlCAsInput()
- [m]	Void set_TreatControlCAsInput(Boolean)
- [m]	Int32 get_WindowHeight()
- [m]	Void set_WindowHeight(Int32)
- [m]	Int32 get_WindowWidth()
- [m]	Void set_WindowWidth(Int32)
- [m]	Int32 get_WindowLeft()
- [m]	Void set_WindowLeft(Int32)
- [m]	Int32 get_WindowTop()
- [m]	Void set_WindowTop(Int32)
+ [m]	Void Write(Boolean)
+ [m]	Void Write(Char)
+ [m]	Void Write(Char[])
+ [m]	Void Write(Char[],Int32,Int32)
+ [m]	Void Write(Decimal)
+ [m]	Void Write(Double)
+ [m]	Void Write(Int32)
+ [m]	Void Write(Int64)
+ [m]	Void Write(Object)
+ [m]	Void Write(Single)
+ [m]	Void Write(String)
+ [m]	Void Write(String,Object)
+ [m]	Void Write(String,Object,Object)
+ [m]	Void Write(String,Object,Object,Object)
+ [m]	Void Write(String,Object[])
+ [m]	Void Write(UInt32)
+ [m]	Void Write(UInt64)
+ [m]	Void WriteLine()
+ [m]	Void WriteLine(Boolean)
+ [m]	Void WriteLine(Char)
+ [m]	Void WriteLine(Char[])
+ [m]	Void WriteLine(Char[],Int32,Int32)
+ [m]	Void WriteLine(Decimal)
+ [m]	Void WriteLine(Double)
+ [m]	Void WriteLine(Int32)
+ [m]	Void WriteLine(Int64)
+ [m]	Void WriteLine(Object)
+ [m]	Void WriteLine(Single)
+ [m]	Void WriteLine(String)
+ [m]	Void WriteLine(String,Object)
+ [m]	Void WriteLine(String,Object,Object)
+ [m]	Void WriteLine(String,Object,Object,Object)
+ [m]	Void WriteLine(String,Object[])
+ [m]	Void WriteLine(UInt32)
+ [m]	Void WriteLine(UInt64)

f [t] System.ConsoleCancelEventArgs
- [m]	Void .ctor()
+ [m]	Boolean get_Cancel()
+ [m]	Void set_Cancel(Boolean)
+ [m]	ConsoleSpecialKey get_SpecialKey()

f [t] System.ConsoleCancelEventHandler
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object,ConsoleCancelEventArgs)
+ [m]	IAsyncResult BeginInvoke(Object,ConsoleCancelEventArgs,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.ConsoleColor

f [t] System.ConsoleKeyInfo
+ [m]	Void .ctor(Char,ConsoleKey,Boolean,Boolean,Boolean)
+ [m]	Char get_KeyChar()
+ [m]	ConsoleKey get_Key()
+ [m]	ConsoleModifiers get_Modifiers()
+ [m]	Boolean Equals(ConsoleKeyInfo)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(ConsoleKeyInfo,ConsoleKeyInfo)
+ [m]	Boolean op_Inequality(ConsoleKeyInfo,ConsoleKeyInfo)

f [t] System.ConsoleKey

f [t] System.ConsoleModifiers

f [t] System.ConsoleSpecialKey

---------------------------------------
+ [a] System.Data.Common.dll
ref: ./netstandard/packages/System.Data.Common/ref/netstandard1.2/System.Data.Common.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Data.Common.dll

f [t] System.DBNull
+ [m]	Void .ctor()
+ [m]	String ToString()
+ [m]	String ToString(IFormatProvider)

f [t] System.Data.CommandBehavior

f [t] System.Data.CommandType

f [t] System.Data.ConnectionState

f [t] System.Data.DataRowVersion

f [t] System.Data.DataTable
+ [m]	Void .ctor()

f [t] System.Data.DbType

f [t] System.Data.IDataParameter
+ [m]	DbType get_DbType()
+ [m]	Void set_DbType(DbType)
+ [m]	ParameterDirection get_Direction()
+ [m]	Void set_Direction(ParameterDirection)
+ [m]	Boolean get_IsNullable()
+ [m]	String get_ParameterName()
+ [m]	Void set_ParameterName(String)
+ [m]	String get_SourceColumn()
+ [m]	Void set_SourceColumn(String)
+ [m]	DataRowVersion get_SourceVersion()
+ [m]	Void set_SourceVersion(DataRowVersion)
+ [m]	Object get_Value()
+ [m]	Void set_Value(Object)

f [t] System.Data.IDataParameterCollection
+ [m]	Object get_Item(String)
+ [m]	Void set_Item(String,Object)
+ [m]	Boolean Contains(String)
+ [m]	Int32 IndexOf(String)
+ [m]	Void RemoveAt(String)

f [t] System.Data.IDataReader
+ [m]	Int32 get_Depth()
+ [m]	Boolean get_IsClosed()
+ [m]	Int32 get_RecordsAffected()
+ [m]	Void Close()
+ [m]	DataTable GetSchemaTable()
+ [m]	Boolean NextResult()
+ [m]	Boolean Read()

f [t] System.Data.IDataRecord
+ [m]	Int32 get_FieldCount()
+ [m]	Object get_Item(Int32)
+ [m]	Object get_Item(String)
+ [m]	Boolean GetBoolean(Int32)
+ [m]	Byte GetByte(Int32)
+ [m]	Int64 GetBytes(Int32,Int64,Byte[],Int32,Int32)
+ [m]	Char GetChar(Int32)
+ [m]	Int64 GetChars(Int32,Int64,Char[],Int32,Int32)
+ [m]	IDataReader GetData(Int32)
+ [m]	String GetDataTypeName(Int32)
+ [m]	DateTime GetDateTime(Int32)
+ [m]	Decimal GetDecimal(Int32)
+ [m]	Double GetDouble(Int32)
+ [m]	Type GetFieldType(Int32)
+ [m]	Single GetFloat(Int32)
+ [m]	Guid GetGuid(Int32)
+ [m]	Int16 GetInt16(Int32)
+ [m]	Int32 GetInt32(Int32)
+ [m]	Int64 GetInt64(Int32)
+ [m]	String GetName(Int32)
+ [m]	Int32 GetOrdinal(String)
+ [m]	String GetString(Int32)
+ [m]	Object GetValue(Int32)
+ [m]	Int32 GetValues(Object[])
+ [m]	Boolean IsDBNull(Int32)

f [t] System.Data.IDbCommand
+ [m]	String get_CommandText()
+ [m]	Void set_CommandText(String)
+ [m]	Int32 get_CommandTimeout()
+ [m]	Void set_CommandTimeout(Int32)
+ [m]	CommandType get_CommandType()
+ [m]	Void set_CommandType(CommandType)
+ [m]	IDbConnection get_Connection()
+ [m]	Void set_Connection(IDbConnection)
+ [m]	IDataParameterCollection get_Parameters()
+ [m]	IDbTransaction get_Transaction()
+ [m]	Void set_Transaction(IDbTransaction)
+ [m]	UpdateRowSource get_UpdatedRowSource()
+ [m]	Void set_UpdatedRowSource(UpdateRowSource)
+ [m]	Void Cancel()
+ [m]	IDbDataParameter CreateParameter()
+ [m]	Int32 ExecuteNonQuery()
+ [m]	IDataReader ExecuteReader()
+ [m]	IDataReader ExecuteReader(CommandBehavior)
+ [m]	Object ExecuteScalar()
+ [m]	Void Prepare()

f [t] System.Data.IDbConnection
+ [m]	String get_ConnectionString()
+ [m]	Void set_ConnectionString(String)
+ [m]	Int32 get_ConnectionTimeout()
+ [m]	String get_Database()
+ [m]	ConnectionState get_State()
+ [m]	IDbTransaction BeginTransaction()
+ [m]	IDbTransaction BeginTransaction(IsolationLevel)
+ [m]	Void ChangeDatabase(String)
+ [m]	Void Close()
+ [m]	IDbCommand CreateCommand()
+ [m]	Void Open()

f [t] System.Data.IDbDataParameter
+ [m]	Byte get_Precision()
+ [m]	Void set_Precision(Byte)
+ [m]	Byte get_Scale()
+ [m]	Void set_Scale(Byte)
+ [m]	Int32 get_Size()
+ [m]	Void set_Size(Int32)

f [t] System.Data.IDbTransaction
+ [m]	IDbConnection get_Connection()
+ [m]	IsolationLevel get_IsolationLevel()
+ [m]	Void Commit()
+ [m]	Void Rollback()

f [t] System.Data.IsolationLevel

f [t] System.Data.ParameterDirection

f [t] System.Data.StateChangeEventArgs
+ [m]	Void .ctor(ConnectionState,ConnectionState)
+ [m]	ConnectionState get_CurrentState()
+ [m]	ConnectionState get_OriginalState()

f [t] System.Data.StateChangeEventHandler
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object,StateChangeEventArgs)
+ [m]	IAsyncResult BeginInvoke(Object,StateChangeEventArgs,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Data.UpdateRowSource

f [t] System.Data.Common.DbCommand
+ [m]	Void .ctor()
+ [m]	String get_CommandText()
+ [m]	Void set_CommandText(String)
+ [m]	Int32 get_CommandTimeout()
+ [m]	Void set_CommandTimeout(Int32)
+ [m]	CommandType get_CommandType()
+ [m]	Void set_CommandType(CommandType)
+ [m]	DbConnection get_Connection()
+ [m]	Void set_Connection(DbConnection)
+ [m]	DbConnection get_DbConnection()
+ [m]	Void set_DbConnection(DbConnection)
+ [m]	DbParameterCollection get_DbParameterCollection()
+ [m]	DbTransaction get_DbTransaction()
+ [m]	Void set_DbTransaction(DbTransaction)
+ [m]	Boolean get_DesignTimeVisible()
+ [m]	Void set_DesignTimeVisible(Boolean)
+ [m]	DbParameterCollection get_Parameters()
+ [m]	IDbConnection System.Data.IDbCommand.get_Connection()
+ [m]	Void System.Data.IDbCommand.set_Connection(IDbConnection)
+ [m]	IDataParameterCollection System.Data.IDbCommand.get_Parameters()
+ [m]	IDbTransaction System.Data.IDbCommand.get_Transaction()
+ [m]	Void System.Data.IDbCommand.set_Transaction(IDbTransaction)
+ [m]	DbTransaction get_Transaction()
+ [m]	Void set_Transaction(DbTransaction)
+ [m]	UpdateRowSource get_UpdatedRowSource()
+ [m]	Void set_UpdatedRowSource(UpdateRowSource)
+ [m]	Void Cancel()
+ [m]	DbParameter CreateDbParameter()
+ [m]	DbParameter CreateParameter()
+ [m]	DbDataReader ExecuteDbDataReader(CommandBehavior)
+ [m]	Task`1 ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
+ [m]	Int32 ExecuteNonQuery()
+ [m]	Task`1 ExecuteNonQueryAsync()
+ [m]	Task`1 ExecuteNonQueryAsync(CancellationToken)
+ [m]	DbDataReader ExecuteReader()
+ [m]	DbDataReader ExecuteReader(CommandBehavior)
+ [m]	Task`1 ExecuteReaderAsync()
+ [m]	Task`1 ExecuteReaderAsync(CommandBehavior)
+ [m]	Task`1 ExecuteReaderAsync(CommandBehavior,CancellationToken)
+ [m]	Task`1 ExecuteReaderAsync(CancellationToken)
+ [m]	Object ExecuteScalar()
+ [m]	Task`1 ExecuteScalarAsync()
+ [m]	Task`1 ExecuteScalarAsync(CancellationToken)
+ [m]	Void Prepare()
+ [m]	IDbDataParameter System.Data.IDbCommand.CreateParameter()
+ [m]	IDataReader System.Data.IDbCommand.ExecuteReader()
+ [m]	IDataReader System.Data.IDbCommand.ExecuteReader(CommandBehavior)
- [m]	Void Dispose()
- [m]	Void Dispose(Boolean)

f [t] System.Data.Common.DbConnection
+ [m]	Void .ctor()
+ [m]	String get_ConnectionString()
+ [m]	Void set_ConnectionString(String)
+ [m]	Int32 get_ConnectionTimeout()
+ [m]	String get_Database()
+ [m]	String get_DataSource()
+ [m]	String get_ServerVersion()
+ [m]	ConnectionState get_State()
+ [m]	Void add_StateChange(StateChangeEventHandler)
+ [m]	Void remove_StateChange(StateChangeEventHandler)
+ [m]	DbTransaction BeginDbTransaction(IsolationLevel)
+ [m]	DbTransaction BeginTransaction()
+ [m]	DbTransaction BeginTransaction(IsolationLevel)
+ [m]	Void ChangeDatabase(String)
+ [m]	Void Close()
+ [m]	DbCommand CreateCommand()
+ [m]	DbCommand CreateDbCommand()
+ [m]	Void OnStateChange(StateChangeEventArgs)
+ [m]	Void Open()
+ [m]	Task OpenAsync()
+ [m]	Task OpenAsync(CancellationToken)
+ [m]	IDbTransaction System.Data.IDbConnection.BeginTransaction()
+ [m]	IDbTransaction System.Data.IDbConnection.BeginTransaction(IsolationLevel)
+ [m]	IDbCommand System.Data.IDbConnection.CreateCommand()
- [m]	Void Dispose()
- [m]	Void Dispose(Boolean)

f [t] System.Data.Common.DbConnectionStringBuilder
+ [m]	Void .ctor()
+ [m]	String get_ConnectionString()
+ [m]	Void set_ConnectionString(String)
+ [m]	Int32 get_Count()
+ [m]	Object get_Item(String)
+ [m]	Void set_Item(String,Object)
+ [m]	ICollection get_Keys()
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
- [m]	Boolean System.Collections.IDictionary.get_IsReadOnly()
+ [m]	Object System.Collections.IDictionary.get_Item(Object)
+ [m]	Void System.Collections.IDictionary.set_Item(Object,Object)
+ [m]	ICollection get_Values()
+ [m]	Void Add(String,Object)
+ [m]	Void AppendKeyValuePair(StringBuilder,String,String)
+ [m]	Void Clear()
+ [m]	Boolean ContainsKey(String)
+ [m]	Boolean EquivalentTo(DbConnectionStringBuilder)
+ [m]	Boolean Remove(String)
+ [m]	Boolean ShouldSerialize(String)
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
+ [m]	Void System.Collections.IDictionary.Add(Object,Object)
+ [m]	Boolean System.Collections.IDictionary.Contains(Object)
+ [m]	IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
+ [m]	Void System.Collections.IDictionary.Remove(Object)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	String ToString()
+ [m]	Boolean TryGetValue(String,Object&)
- [m]	Boolean System.Collections.IDictionary.get_IsFixedSize()

f [t] System.Data.Common.DbDataReader
+ [m]	Void .ctor()
+ [m]	Int32 get_Depth()
+ [m]	Int32 get_FieldCount()
+ [m]	Boolean get_HasRows()
+ [m]	Boolean get_IsClosed()
+ [m]	Object get_Item(Int32)
+ [m]	Object get_Item(String)
+ [m]	Int32 get_RecordsAffected()
+ [m]	Int32 get_VisibleFieldCount()
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Boolean GetBoolean(Int32)
+ [m]	Byte GetByte(Int32)
+ [m]	Int64 GetBytes(Int32,Int64,Byte[],Int32,Int32)
+ [m]	Char GetChar(Int32)
+ [m]	Int64 GetChars(Int32,Int64,Char[],Int32,Int32)
+ [m]	DbDataReader GetData(Int32)
+ [m]	String GetDataTypeName(Int32)
+ [m]	DateTime GetDateTime(Int32)
+ [m]	DbDataReader GetDbDataReader(Int32)
+ [m]	Decimal GetDecimal(Int32)
+ [m]	Double GetDouble(Int32)
+ [m]	IEnumerator GetEnumerator()
+ [m]	Type GetFieldType(Int32)
+ [m]	T GetFieldValue(Int32)
+ [m]	Task`1 GetFieldValueAsync(Int32)
+ [m]	Task`1 GetFieldValueAsync(Int32,CancellationToken)
+ [m]	Single GetFloat(Int32)
+ [m]	Guid GetGuid(Int32)
+ [m]	Int16 GetInt16(Int32)
+ [m]	Int32 GetInt32(Int32)
+ [m]	Int64 GetInt64(Int32)
+ [m]	String GetName(Int32)
+ [m]	Int32 GetOrdinal(String)
+ [m]	Type GetProviderSpecificFieldType(Int32)
+ [m]	Object GetProviderSpecificValue(Int32)
+ [m]	Int32 GetProviderSpecificValues(Object[])
+ [m]	Stream GetStream(Int32)
+ [m]	String GetString(Int32)
+ [m]	TextReader GetTextReader(Int32)
+ [m]	Object GetValue(Int32)
+ [m]	Int32 GetValues(Object[])
+ [m]	Boolean IsDBNull(Int32)
+ [m]	Task`1 IsDBNullAsync(Int32)
+ [m]	Task`1 IsDBNullAsync(Int32,CancellationToken)
+ [m]	Boolean NextResult()
+ [m]	Task`1 NextResultAsync()
+ [m]	Task`1 NextResultAsync(CancellationToken)
+ [m]	Boolean Read()
+ [m]	Task`1 ReadAsync()
+ [m]	Task`1 ReadAsync(CancellationToken)
+ [m]	IDataReader System.Data.IDataRecord.GetData(Int32)
- [m]	Void System.Data.IDataReader.Close()
- [m]	DataTable System.Data.IDataReader.GetSchemaTable()

f [t] System.Data.Common.DbDataRecord
+ [m]	Void .ctor()
+ [m]	Int32 get_FieldCount()
+ [m]	Object get_Item(Int32)
+ [m]	Object get_Item(String)
+ [m]	Boolean GetBoolean(Int32)
+ [m]	Byte GetByte(Int32)
+ [m]	Int64 GetBytes(Int32,Int64,Byte[],Int32,Int32)
+ [m]	Char GetChar(Int32)
+ [m]	Int64 GetChars(Int32,Int64,Char[],Int32,Int32)
+ [m]	IDataReader GetData(Int32)
+ [m]	String GetDataTypeName(Int32)
+ [m]	DateTime GetDateTime(Int32)
+ [m]	DbDataReader GetDbDataReader(Int32)
+ [m]	Decimal GetDecimal(Int32)
+ [m]	Double GetDouble(Int32)
+ [m]	Type GetFieldType(Int32)
+ [m]	Single GetFloat(Int32)
+ [m]	Guid GetGuid(Int32)
+ [m]	Int16 GetInt16(Int32)
+ [m]	Int32 GetInt32(Int32)
+ [m]	Int64 GetInt64(Int32)
+ [m]	String GetName(Int32)
+ [m]	Int32 GetOrdinal(String)
+ [m]	String GetString(Int32)
+ [m]	Object GetValue(Int32)
+ [m]	Int32 GetValues(Object[])
+ [m]	Boolean IsDBNull(Int32)

f [t] System.Data.Common.DbEnumerator
+ [m]	Void .ctor(IDataReader,Boolean)
+ [m]	Object get_Current()
+ [m]	Boolean MoveNext()
+ [m]	Void Reset()

f [t] System.Data.Common.DbException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Data.Common.DbParameter
+ [m]	Void .ctor()
+ [m]	DbType get_DbType()
+ [m]	Void set_DbType(DbType)
+ [m]	ParameterDirection get_Direction()
+ [m]	Void set_Direction(ParameterDirection)
+ [m]	Boolean get_IsNullable()
+ [m]	Void set_IsNullable(Boolean)
+ [m]	String get_ParameterName()
+ [m]	Void set_ParameterName(String)
+ [m]	Byte get_Precision()
+ [m]	Void set_Precision(Byte)
+ [m]	Byte get_Scale()
+ [m]	Void set_Scale(Byte)
+ [m]	Int32 get_Size()
+ [m]	Void set_Size(Int32)
+ [m]	String get_SourceColumn()
+ [m]	Void set_SourceColumn(String)
+ [m]	Boolean get_SourceColumnNullMapping()
+ [m]	Void set_SourceColumnNullMapping(Boolean)
+ [m]	Byte System.Data.IDbDataParameter.get_Precision()
+ [m]	Void System.Data.IDbDataParameter.set_Precision(Byte)
+ [m]	Byte System.Data.IDbDataParameter.get_Scale()
+ [m]	Void System.Data.IDbDataParameter.set_Scale(Byte)
+ [m]	Object get_Value()
+ [m]	Void set_Value(Object)
- [m]	DataRowVersion System.Data.IDataParameter.get_SourceVersion()
- [m]	Void System.Data.IDataParameter.set_SourceVersion(DataRowVersion)
+ [m]	Void ResetDbType()

f [t] System.Data.Common.DbParameterCollection
+ [m]	Void .ctor()
+ [m]	Int32 get_Count()
+ [m]	DbParameter get_Item(Int32)
+ [m]	Void set_Item(Int32,DbParameter)
+ [m]	DbParameter get_Item(String)
+ [m]	Void set_Item(String,DbParameter)
+ [m]	Object get_SyncRoot()
+ [m]	Object System.Collections.IList.get_Item(Int32)
+ [m]	Void System.Collections.IList.set_Item(Int32,Object)
+ [m]	Object System.Data.IDataParameterCollection.get_Item(String)
+ [m]	Void System.Data.IDataParameterCollection.set_Item(String,Object)
+ [m]	Int32 Add(Object)
+ [m]	Void AddRange(Array)
+ [m]	Void Clear()
+ [m]	Boolean Contains(Object)
+ [m]	Boolean Contains(String)
+ [m]	Void CopyTo(Array,Int32)
+ [m]	IEnumerator GetEnumerator()
+ [m]	DbParameter GetParameter(Int32)
+ [m]	DbParameter GetParameter(String)
+ [m]	Int32 IndexOf(Object)
+ [m]	Int32 IndexOf(String)
+ [m]	Void Insert(Int32,Object)
+ [m]	Void Remove(Object)
+ [m]	Void RemoveAt(Int32)
+ [m]	Void RemoveAt(String)
+ [m]	Void SetParameter(Int32,DbParameter)
+ [m]	Void SetParameter(String,DbParameter)
- [m]	Boolean System.Collections.IList.get_IsFixedSize()
- [m]	Boolean System.Collections.IList.get_IsReadOnly()
- [m]	Boolean System.Collections.ICollection.get_IsSynchronized()

f [t] System.Data.Common.DbProviderFactory
+ [m]	Void .ctor()
+ [m]	DbCommand CreateCommand()
+ [m]	DbConnection CreateConnection()
+ [m]	DbConnectionStringBuilder CreateConnectionStringBuilder()
+ [m]	DbParameter CreateParameter()

f [t] System.Data.Common.DbTransaction
+ [m]	Void .ctor()
+ [m]	DbConnection get_Connection()
+ [m]	DbConnection get_DbConnection()
+ [m]	IsolationLevel get_IsolationLevel()
+ [m]	IDbConnection System.Data.IDbTransaction.get_Connection()
+ [m]	Void Commit()
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Void Rollback()

+ [t] System.Data.Common.DbColumn
+ [m]	Nullable`1 get_AllowDBNull()
+ [m]	Void set_AllowDBNull(Nullable`1)
+ [m]	String get_BaseCatalogName()
+ [m]	Void set_BaseCatalogName(String)
+ [m]	String get_BaseColumnName()
+ [m]	Void set_BaseColumnName(String)
+ [m]	String get_BaseSchemaName()
+ [m]	Void set_BaseSchemaName(String)
+ [m]	String get_BaseServerName()
+ [m]	Void set_BaseServerName(String)
+ [m]	String get_BaseTableName()
+ [m]	Void set_BaseTableName(String)
+ [m]	String get_ColumnName()
+ [m]	Void set_ColumnName(String)
+ [m]	Nullable`1 get_ColumnOrdinal()
+ [m]	Void set_ColumnOrdinal(Nullable`1)
+ [m]	Nullable`1 get_ColumnSize()
+ [m]	Void set_ColumnSize(Nullable`1)
+ [m]	Nullable`1 get_IsAliased()
+ [m]	Void set_IsAliased(Nullable`1)
+ [m]	Nullable`1 get_IsAutoIncrement()
+ [m]	Void set_IsAutoIncrement(Nullable`1)
+ [m]	Nullable`1 get_IsExpression()
+ [m]	Void set_IsExpression(Nullable`1)
+ [m]	Nullable`1 get_IsHidden()
+ [m]	Void set_IsHidden(Nullable`1)
+ [m]	Nullable`1 get_IsIdentity()
+ [m]	Void set_IsIdentity(Nullable`1)
+ [m]	Nullable`1 get_IsKey()
+ [m]	Void set_IsKey(Nullable`1)
+ [m]	Nullable`1 get_IsLong()
+ [m]	Void set_IsLong(Nullable`1)
+ [m]	Nullable`1 get_IsReadOnly()
+ [m]	Void set_IsReadOnly(Nullable`1)
+ [m]	Nullable`1 get_IsUnique()
+ [m]	Void set_IsUnique(Nullable`1)
+ [m]	Nullable`1 get_NumericPrecision()
+ [m]	Void set_NumericPrecision(Nullable`1)
+ [m]	Nullable`1 get_NumericScale()
+ [m]	Void set_NumericScale(Nullable`1)
+ [m]	String get_UdtAssemblyQualifiedName()
+ [m]	Void set_UdtAssemblyQualifiedName(String)
+ [m]	Type get_DataType()
+ [m]	Void set_DataType(Type)
+ [m]	String get_DataTypeName()
+ [m]	Void set_DataTypeName(String)
! [m]	Object get_Item(String)
+ [m]	Void .ctor()

+ [t] System.Data.Common.DbDataReaderExtensions
+ [m]	ReadOnlyCollection`1 GetColumnSchema(DbDataReader)
+ [m]	Boolean CanGetColumnSchema(DbDataReader)

+ [t] System.Data.Common.IDbColumnSchemaGenerator
+ [m]	ReadOnlyCollection`1 GetColumnSchema()

---------------------------------------
+ [a] System.Data.SqlClient.dll
ref: ./netstandard/packages/System.Data.SqlClient/ref/netstandard1.3/System.Data.SqlClient.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Data.SqlClient.dll

f [t] System.Data.SqlDbType

f [t] System.Data.StatementCompletedEventArgs
+ [m]	Void .ctor(Int32)
+ [m]	Int32 get_RecordCount()

f [t] System.Data.StatementCompletedEventHandler
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object,StatementCompletedEventArgs)
+ [m]	IAsyncResult BeginInvoke(Object,StatementCompletedEventArgs,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Data.SqlTypes.INullable
+ [m]	Boolean get_IsNull()

f [t] System.Data.SqlTypes.SqlBinary
+ [m]	Void .ctor(Byte[])
+ [m]	Boolean get_IsNull()
+ [m]	Byte get_Item(Int32)
+ [m]	Int32 get_Length()
+ [m]	Byte[] get_Value()
+ [m]	SqlBinary Add(SqlBinary,SqlBinary)
+ [m]	Int32 CompareTo(SqlBinary)
+ [m]	Int32 CompareTo(Object)
+ [m]	SqlBinary Concat(SqlBinary,SqlBinary)
+ [m]	SqlBoolean Equals(SqlBinary,SqlBinary)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	SqlBoolean GreaterThan(SqlBinary,SqlBinary)
+ [m]	SqlBoolean GreaterThanOrEqual(SqlBinary,SqlBinary)
+ [m]	SqlBoolean LessThan(SqlBinary,SqlBinary)
+ [m]	SqlBoolean LessThanOrEqual(SqlBinary,SqlBinary)
+ [m]	SqlBoolean NotEquals(SqlBinary,SqlBinary)
+ [m]	SqlBinary op_Addition(SqlBinary,SqlBinary)
+ [m]	SqlBoolean op_Equality(SqlBinary,SqlBinary)
+ [m]	Byte[] op_Explicit(SqlBinary)
+ [m]	SqlBinary op_Explicit(SqlGuid)
+ [m]	SqlBoolean op_GreaterThan(SqlBinary,SqlBinary)
+ [m]	SqlBoolean op_GreaterThanOrEqual(SqlBinary,SqlBinary)
+ [m]	SqlBinary op_Implicit(Byte[])
+ [m]	SqlBoolean op_Inequality(SqlBinary,SqlBinary)
+ [m]	SqlBoolean op_LessThan(SqlBinary,SqlBinary)
+ [m]	SqlBoolean op_LessThanOrEqual(SqlBinary,SqlBinary)
+ [m]	SqlGuid ToSqlGuid()
+ [m]	String ToString()

f [t] System.Data.SqlTypes.SqlBoolean
+ [m]	Void .ctor(Boolean)
+ [m]	Void .ctor(Int32)
+ [m]	Byte get_ByteValue()
+ [m]	Boolean get_IsFalse()
+ [m]	Boolean get_IsNull()
+ [m]	Boolean get_IsTrue()
+ [m]	Boolean get_Value()
+ [m]	SqlBoolean And(SqlBoolean,SqlBoolean)
+ [m]	Int32 CompareTo(SqlBoolean)
+ [m]	Int32 CompareTo(Object)
+ [m]	SqlBoolean Equals(SqlBoolean,SqlBoolean)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	SqlBoolean GreaterThan(SqlBoolean,SqlBoolean)
+ [m]	SqlBoolean GreaterThanOrEquals(SqlBoolean,SqlBoolean)
+ [m]	SqlBoolean LessThan(SqlBoolean,SqlBoolean)
+ [m]	SqlBoolean LessThanOrEquals(SqlBoolean,SqlBoolean)
+ [m]	SqlBoolean NotEquals(SqlBoolean,SqlBoolean)
+ [m]	SqlBoolean OnesComplement(SqlBoolean)
+ [m]	SqlBoolean op_BitwiseAnd(SqlBoolean,SqlBoolean)
+ [m]	SqlBoolean op_BitwiseOr(SqlBoolean,SqlBoolean)
+ [m]	SqlBoolean op_Equality(SqlBoolean,SqlBoolean)
+ [m]	SqlBoolean op_ExclusiveOr(SqlBoolean,SqlBoolean)
+ [m]	Boolean op_Explicit(SqlBoolean)
+ [m]	SqlBoolean op_Explicit(SqlByte)
+ [m]	SqlBoolean op_Explicit(SqlDecimal)
+ [m]	SqlBoolean op_Explicit(SqlDouble)
+ [m]	SqlBoolean op_Explicit(SqlInt16)
+ [m]	SqlBoolean op_Explicit(SqlInt32)
+ [m]	SqlBoolean op_Explicit(SqlInt64)
+ [m]	SqlBoolean op_Explicit(SqlMoney)
+ [m]	SqlBoolean op_Explicit(SqlSingle)
+ [m]	SqlBoolean op_Explicit(SqlString)
+ [m]	Boolean op_False(SqlBoolean)
+ [m]	SqlBoolean op_GreaterThan(SqlBoolean,SqlBoolean)
+ [m]	SqlBoolean op_GreaterThanOrEqual(SqlBoolean,SqlBoolean)
+ [m]	SqlBoolean op_Implicit(Boolean)
+ [m]	SqlBoolean op_Inequality(SqlBoolean,SqlBoolean)
+ [m]	SqlBoolean op_LessThan(SqlBoolean,SqlBoolean)
+ [m]	SqlBoolean op_LessThanOrEqual(SqlBoolean,SqlBoolean)
+ [m]	SqlBoolean op_LogicalNot(SqlBoolean)
+ [m]	SqlBoolean op_OnesComplement(SqlBoolean)
+ [m]	Boolean op_True(SqlBoolean)
+ [m]	SqlBoolean Or(SqlBoolean,SqlBoolean)
+ [m]	SqlBoolean Parse(String)
+ [m]	SqlByte ToSqlByte()
+ [m]	SqlDecimal ToSqlDecimal()
+ [m]	SqlDouble ToSqlDouble()
+ [m]	SqlInt16 ToSqlInt16()
+ [m]	SqlInt32 ToSqlInt32()
+ [m]	SqlInt64 ToSqlInt64()
+ [m]	SqlMoney ToSqlMoney()
+ [m]	SqlSingle ToSqlSingle()
+ [m]	SqlString ToSqlString()
+ [m]	String ToString()
+ [m]	SqlBoolean Xor(SqlBoolean,SqlBoolean)

f [t] System.Data.SqlTypes.SqlByte
+ [m]	Void .ctor(Byte)
+ [m]	Boolean get_IsNull()
+ [m]	Byte get_Value()
+ [m]	SqlByte Add(SqlByte,SqlByte)
+ [m]	SqlByte BitwiseAnd(SqlByte,SqlByte)
+ [m]	SqlByte BitwiseOr(SqlByte,SqlByte)
+ [m]	Int32 CompareTo(SqlByte)
+ [m]	Int32 CompareTo(Object)
+ [m]	SqlByte Divide(SqlByte,SqlByte)
+ [m]	SqlBoolean Equals(SqlByte,SqlByte)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	SqlBoolean GreaterThan(SqlByte,SqlByte)
+ [m]	SqlBoolean GreaterThanOrEqual(SqlByte,SqlByte)
+ [m]	SqlBoolean LessThan(SqlByte,SqlByte)
+ [m]	SqlBoolean LessThanOrEqual(SqlByte,SqlByte)
+ [m]	SqlByte Mod(SqlByte,SqlByte)
+ [m]	SqlByte Modulus(SqlByte,SqlByte)
+ [m]	SqlByte Multiply(SqlByte,SqlByte)
+ [m]	SqlBoolean NotEquals(SqlByte,SqlByte)
+ [m]	SqlByte OnesComplement(SqlByte)
+ [m]	SqlByte op_Addition(SqlByte,SqlByte)
+ [m]	SqlByte op_BitwiseAnd(SqlByte,SqlByte)
+ [m]	SqlByte op_BitwiseOr(SqlByte,SqlByte)
+ [m]	SqlByte op_Division(SqlByte,SqlByte)
+ [m]	SqlBoolean op_Equality(SqlByte,SqlByte)
+ [m]	SqlByte op_ExclusiveOr(SqlByte,SqlByte)
+ [m]	SqlByte op_Explicit(SqlBoolean)
+ [m]	Byte op_Explicit(SqlByte)
+ [m]	SqlByte op_Explicit(SqlDecimal)
+ [m]	SqlByte op_Explicit(SqlDouble)
+ [m]	SqlByte op_Explicit(SqlInt16)
+ [m]	SqlByte op_Explicit(SqlInt32)
+ [m]	SqlByte op_Explicit(SqlInt64)
+ [m]	SqlByte op_Explicit(SqlMoney)
+ [m]	SqlByte op_Explicit(SqlSingle)
+ [m]	SqlByte op_Explicit(SqlString)
+ [m]	SqlBoolean op_GreaterThan(SqlByte,SqlByte)
+ [m]	SqlBoolean op_GreaterThanOrEqual(SqlByte,SqlByte)
+ [m]	SqlByte op_Implicit(Byte)
+ [m]	SqlBoolean op_Inequality(SqlByte,SqlByte)
+ [m]	SqlBoolean op_LessThan(SqlByte,SqlByte)
+ [m]	SqlBoolean op_LessThanOrEqual(SqlByte,SqlByte)
+ [m]	SqlByte op_Modulus(SqlByte,SqlByte)
+ [m]	SqlByte op_Multiply(SqlByte,SqlByte)
+ [m]	SqlByte op_OnesComplement(SqlByte)
+ [m]	SqlByte op_Subtraction(SqlByte,SqlByte)
+ [m]	SqlByte Parse(String)
+ [m]	SqlByte Subtract(SqlByte,SqlByte)
+ [m]	SqlBoolean ToSqlBoolean()
+ [m]	SqlDecimal ToSqlDecimal()
+ [m]	SqlDouble ToSqlDouble()
+ [m]	SqlInt16 ToSqlInt16()
+ [m]	SqlInt32 ToSqlInt32()
+ [m]	SqlInt64 ToSqlInt64()
+ [m]	SqlMoney ToSqlMoney()
+ [m]	SqlSingle ToSqlSingle()
+ [m]	SqlString ToSqlString()
+ [m]	String ToString()
+ [m]	SqlByte Xor(SqlByte,SqlByte)

f [t] System.Data.SqlTypes.SqlBytes
+ [m]	Void .ctor()
+ [m]	Void .ctor(Byte[])
+ [m]	Void .ctor(SqlBinary)
+ [m]	Void .ctor(Stream)
+ [m]	Byte[] get_Buffer()
+ [m]	Boolean get_IsNull()
+ [m]	Byte get_Item(Int64)
+ [m]	Void set_Item(Int64,Byte)
+ [m]	Int64 get_Length()
+ [m]	Int64 get_MaxLength()
+ [m]	SqlBytes get_Null()
+ [m]	Stream get_Stream()
+ [m]	Void set_Stream(Stream)
+ [m]	Byte[] get_Value()
+ [m]	SqlBytes op_Explicit(SqlBinary)
+ [m]	SqlBinary op_Explicit(SqlBytes)
+ [m]	Int64 Read(Int64,Byte[],Int32,Int32)
+ [m]	Void SetLength(Int64)
+ [m]	Void SetNull()
+ [m]	SqlBinary ToSqlBinary()
+ [m]	Void Write(Int64,Byte[],Int32,Int32)

f [t] System.Data.SqlTypes.SqlChars
+ [m]	Void .ctor()
+ [m]	Void .ctor(Char[])
+ [m]	Void .ctor(SqlString)
+ [m]	Char[] get_Buffer()
+ [m]	Boolean get_IsNull()
+ [m]	Char get_Item(Int64)
+ [m]	Void set_Item(Int64,Char)
+ [m]	Int64 get_Length()
+ [m]	Int64 get_MaxLength()
+ [m]	SqlChars get_Null()
+ [m]	Char[] get_Value()
+ [m]	SqlString op_Explicit(SqlChars)
+ [m]	SqlChars op_Explicit(SqlString)
+ [m]	Int64 Read(Int64,Char[],Int32,Int32)
+ [m]	Void SetLength(Int64)
+ [m]	Void SetNull()
+ [m]	SqlString ToSqlString()
+ [m]	Void Write(Int64,Char[],Int32,Int32)

f [t] System.Data.SqlTypes.SqlCompareOptions

f [t] System.Data.SqlTypes.SqlDateTime
+ [m]	Void .ctor(DateTime)
+ [m]	Void .ctor(Int32,Int32)
+ [m]	Void .ctor(Int32,Int32,Int32)
+ [m]	Void .ctor(Int32,Int32,Int32,Int32,Int32,Int32)
+ [m]	Void .ctor(Int32,Int32,Int32,Int32,Int32,Int32,Double)
+ [m]	Void .ctor(Int32,Int32,Int32,Int32,Int32,Int32,Int32)
+ [m]	Int32 get_DayTicks()
+ [m]	Boolean get_IsNull()
+ [m]	Int32 get_TimeTicks()
+ [m]	DateTime get_Value()
+ [m]	SqlDateTime Add(SqlDateTime,TimeSpan)
+ [m]	Int32 CompareTo(SqlDateTime)
+ [m]	Int32 CompareTo(Object)
+ [m]	SqlBoolean Equals(SqlDateTime,SqlDateTime)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	SqlBoolean GreaterThan(SqlDateTime,SqlDateTime)
+ [m]	SqlBoolean GreaterThanOrEqual(SqlDateTime,SqlDateTime)
+ [m]	SqlBoolean LessThan(SqlDateTime,SqlDateTime)
+ [m]	SqlBoolean LessThanOrEqual(SqlDateTime,SqlDateTime)
+ [m]	SqlBoolean NotEquals(SqlDateTime,SqlDateTime)
+ [m]	SqlDateTime op_Addition(SqlDateTime,TimeSpan)
+ [m]	SqlBoolean op_Equality(SqlDateTime,SqlDateTime)
+ [m]	DateTime op_Explicit(SqlDateTime)
+ [m]	SqlDateTime op_Explicit(SqlString)
+ [m]	SqlBoolean op_GreaterThan(SqlDateTime,SqlDateTime)
+ [m]	SqlBoolean op_GreaterThanOrEqual(SqlDateTime,SqlDateTime)
+ [m]	SqlDateTime op_Implicit(DateTime)
+ [m]	SqlBoolean op_Inequality(SqlDateTime,SqlDateTime)
+ [m]	SqlBoolean op_LessThan(SqlDateTime,SqlDateTime)
+ [m]	SqlBoolean op_LessThanOrEqual(SqlDateTime,SqlDateTime)
+ [m]	SqlDateTime op_Subtraction(SqlDateTime,TimeSpan)
+ [m]	SqlDateTime Parse(String)
+ [m]	SqlDateTime Subtract(SqlDateTime,TimeSpan)
+ [m]	SqlString ToSqlString()
+ [m]	String ToString()

f [t] System.Data.SqlTypes.SqlDecimal
+ [m]	Void .ctor(Byte,Byte,Boolean,Int32,Int32,Int32,Int32)
+ [m]	Void .ctor(Byte,Byte,Boolean,Int32[])
+ [m]	Void .ctor(Decimal)
+ [m]	Void .ctor(Double)
+ [m]	Void .ctor(Int32)
+ [m]	Void .ctor(Int64)
+ [m]	Byte[] get_BinData()
+ [m]	Int32[] get_Data()
+ [m]	Boolean get_IsNull()
+ [m]	Boolean get_IsPositive()
+ [m]	Byte get_Precision()
+ [m]	Byte get_Scale()
+ [m]	Decimal get_Value()
+ [m]	SqlDecimal Abs(SqlDecimal)
+ [m]	SqlDecimal Add(SqlDecimal,SqlDecimal)
+ [m]	SqlDecimal AdjustScale(SqlDecimal,Int32,Boolean)
+ [m]	SqlDecimal Ceiling(SqlDecimal)
+ [m]	Int32 CompareTo(SqlDecimal)
+ [m]	Int32 CompareTo(Object)
+ [m]	SqlDecimal ConvertToPrecScale(SqlDecimal,Int32,Int32)
+ [m]	SqlDecimal Divide(SqlDecimal,SqlDecimal)
+ [m]	SqlBoolean Equals(SqlDecimal,SqlDecimal)
+ [m]	Boolean Equals(Object)
+ [m]	SqlDecimal Floor(SqlDecimal)
+ [m]	Int32 GetHashCode()
+ [m]	SqlBoolean GreaterThan(SqlDecimal,SqlDecimal)
+ [m]	SqlBoolean GreaterThanOrEqual(SqlDecimal,SqlDecimal)
+ [m]	SqlBoolean LessThan(SqlDecimal,SqlDecimal)
+ [m]	SqlBoolean LessThanOrEqual(SqlDecimal,SqlDecimal)
+ [m]	SqlDecimal Multiply(SqlDecimal,SqlDecimal)
+ [m]	SqlBoolean NotEquals(SqlDecimal,SqlDecimal)
+ [m]	SqlDecimal op_Addition(SqlDecimal,SqlDecimal)
+ [m]	SqlDecimal op_Division(SqlDecimal,SqlDecimal)
+ [m]	SqlBoolean op_Equality(SqlDecimal,SqlDecimal)
+ [m]	SqlDecimal op_Explicit(SqlBoolean)
+ [m]	Decimal op_Explicit(SqlDecimal)
+ [m]	SqlDecimal op_Explicit(SqlDouble)
+ [m]	SqlDecimal op_Explicit(SqlSingle)
+ [m]	SqlDecimal op_Explicit(SqlString)
+ [m]	SqlDecimal op_Explicit(Double)
+ [m]	SqlBoolean op_GreaterThan(SqlDecimal,SqlDecimal)
+ [m]	SqlBoolean op_GreaterThanOrEqual(SqlDecimal,SqlDecimal)
+ [m]	SqlDecimal op_Implicit(SqlByte)
+ [m]	SqlDecimal op_Implicit(SqlInt16)
+ [m]	SqlDecimal op_Implicit(SqlInt32)
+ [m]	SqlDecimal op_Implicit(SqlInt64)
+ [m]	SqlDecimal op_Implicit(SqlMoney)
+ [m]	SqlDecimal op_Implicit(Decimal)
+ [m]	SqlDecimal op_Implicit(Int64)
+ [m]	SqlBoolean op_Inequality(SqlDecimal,SqlDecimal)
+ [m]	SqlBoolean op_LessThan(SqlDecimal,SqlDecimal)
+ [m]	SqlBoolean op_LessThanOrEqual(SqlDecimal,SqlDecimal)
+ [m]	SqlDecimal op_Multiply(SqlDecimal,SqlDecimal)
+ [m]	SqlDecimal op_Subtraction(SqlDecimal,SqlDecimal)
+ [m]	SqlDecimal op_UnaryNegation(SqlDecimal)
+ [m]	SqlDecimal Parse(String)
+ [m]	SqlDecimal Power(SqlDecimal,Double)
+ [m]	SqlDecimal Round(SqlDecimal,Int32)
+ [m]	SqlInt32 Sign(SqlDecimal)
+ [m]	SqlDecimal Subtract(SqlDecimal,SqlDecimal)
+ [m]	Double ToDouble()
+ [m]	SqlBoolean ToSqlBoolean()
+ [m]	SqlByte ToSqlByte()
+ [m]	SqlDouble ToSqlDouble()
+ [m]	SqlInt16 ToSqlInt16()
+ [m]	SqlInt32 ToSqlInt32()
+ [m]	SqlInt64 ToSqlInt64()
+ [m]	SqlMoney ToSqlMoney()
+ [m]	SqlSingle ToSqlSingle()
+ [m]	SqlString ToSqlString()
+ [m]	String ToString()
+ [m]	SqlDecimal Truncate(SqlDecimal,Int32)

f [t] System.Data.SqlTypes.SqlDouble
+ [m]	Void .ctor(Double)
+ [m]	Boolean get_IsNull()
+ [m]	Double get_Value()
+ [m]	SqlDouble Add(SqlDouble,SqlDouble)
+ [m]	Int32 CompareTo(SqlDouble)
+ [m]	Int32 CompareTo(Object)
+ [m]	SqlDouble Divide(SqlDouble,SqlDouble)
+ [m]	SqlBoolean Equals(SqlDouble,SqlDouble)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	SqlBoolean GreaterThan(SqlDouble,SqlDouble)
+ [m]	SqlBoolean GreaterThanOrEqual(SqlDouble,SqlDouble)
+ [m]	SqlBoolean LessThan(SqlDouble,SqlDouble)
+ [m]	SqlBoolean LessThanOrEqual(SqlDouble,SqlDouble)
+ [m]	SqlDouble Multiply(SqlDouble,SqlDouble)
+ [m]	SqlBoolean NotEquals(SqlDouble,SqlDouble)
+ [m]	SqlDouble op_Addition(SqlDouble,SqlDouble)
+ [m]	SqlDouble op_Division(SqlDouble,SqlDouble)
+ [m]	SqlBoolean op_Equality(SqlDouble,SqlDouble)
+ [m]	SqlDouble op_Explicit(SqlBoolean)
+ [m]	Double op_Explicit(SqlDouble)
+ [m]	SqlDouble op_Explicit(SqlString)
+ [m]	SqlBoolean op_GreaterThan(SqlDouble,SqlDouble)
+ [m]	SqlBoolean op_GreaterThanOrEqual(SqlDouble,SqlDouble)
+ [m]	SqlDouble op_Implicit(SqlByte)
+ [m]	SqlDouble op_Implicit(SqlDecimal)
+ [m]	SqlDouble op_Implicit(SqlInt16)
+ [m]	SqlDouble op_Implicit(SqlInt32)
+ [m]	SqlDouble op_Implicit(SqlInt64)
+ [m]	SqlDouble op_Implicit(SqlMoney)
+ [m]	SqlDouble op_Implicit(SqlSingle)
+ [m]	SqlDouble op_Implicit(Double)
+ [m]	SqlBoolean op_Inequality(SqlDouble,SqlDouble)
+ [m]	SqlBoolean op_LessThan(SqlDouble,SqlDouble)
+ [m]	SqlBoolean op_LessThanOrEqual(SqlDouble,SqlDouble)
+ [m]	SqlDouble op_Multiply(SqlDouble,SqlDouble)
+ [m]	SqlDouble op_Subtraction(SqlDouble,SqlDouble)
+ [m]	SqlDouble op_UnaryNegation(SqlDouble)
+ [m]	SqlDouble Parse(String)
+ [m]	SqlDouble Subtract(SqlDouble,SqlDouble)
+ [m]	SqlBoolean ToSqlBoolean()
+ [m]	SqlByte ToSqlByte()
+ [m]	SqlDecimal ToSqlDecimal()
+ [m]	SqlInt16 ToSqlInt16()
+ [m]	SqlInt32 ToSqlInt32()
+ [m]	SqlInt64 ToSqlInt64()
+ [m]	SqlMoney ToSqlMoney()
+ [m]	SqlSingle ToSqlSingle()
+ [m]	SqlString ToSqlString()
+ [m]	String ToString()

f [t] System.Data.SqlTypes.SqlGuid
+ [m]	Void .ctor(Byte[])
+ [m]	Void .ctor(Guid)
+ [m]	Void .ctor(Int32,Int16,Int16,Byte,Byte,Byte,Byte,Byte,Byte,Byte,Byte)
+ [m]	Void .ctor(String)
+ [m]	Boolean get_IsNull()
+ [m]	Guid get_Value()
+ [m]	Int32 CompareTo(SqlGuid)
+ [m]	Int32 CompareTo(Object)
+ [m]	SqlBoolean Equals(SqlGuid,SqlGuid)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	SqlBoolean GreaterThan(SqlGuid,SqlGuid)
+ [m]	SqlBoolean GreaterThanOrEqual(SqlGuid,SqlGuid)
+ [m]	SqlBoolean LessThan(SqlGuid,SqlGuid)
+ [m]	SqlBoolean LessThanOrEqual(SqlGuid,SqlGuid)
+ [m]	SqlBoolean NotEquals(SqlGuid,SqlGuid)
+ [m]	SqlBoolean op_Equality(SqlGuid,SqlGuid)
+ [m]	SqlGuid op_Explicit(SqlBinary)
+ [m]	Guid op_Explicit(SqlGuid)
+ [m]	SqlGuid op_Explicit(SqlString)
+ [m]	SqlBoolean op_GreaterThan(SqlGuid,SqlGuid)
+ [m]	SqlBoolean op_GreaterThanOrEqual(SqlGuid,SqlGuid)
+ [m]	SqlGuid op_Implicit(Guid)
+ [m]	SqlBoolean op_Inequality(SqlGuid,SqlGuid)
+ [m]	SqlBoolean op_LessThan(SqlGuid,SqlGuid)
+ [m]	SqlBoolean op_LessThanOrEqual(SqlGuid,SqlGuid)
+ [m]	SqlGuid Parse(String)
+ [m]	Byte[] ToByteArray()
+ [m]	SqlBinary ToSqlBinary()
+ [m]	SqlString ToSqlString()
+ [m]	String ToString()

f [t] System.Data.SqlTypes.SqlInt16
+ [m]	Void .ctor(Int16)
+ [m]	Boolean get_IsNull()
+ [m]	Int16 get_Value()
+ [m]	SqlInt16 Add(SqlInt16,SqlInt16)
+ [m]	SqlInt16 BitwiseAnd(SqlInt16,SqlInt16)
+ [m]	SqlInt16 BitwiseOr(SqlInt16,SqlInt16)
+ [m]	Int32 CompareTo(SqlInt16)
+ [m]	Int32 CompareTo(Object)
+ [m]	SqlInt16 Divide(SqlInt16,SqlInt16)
+ [m]	SqlBoolean Equals(SqlInt16,SqlInt16)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	SqlBoolean GreaterThan(SqlInt16,SqlInt16)
+ [m]	SqlBoolean GreaterThanOrEqual(SqlInt16,SqlInt16)
+ [m]	SqlBoolean LessThan(SqlInt16,SqlInt16)
+ [m]	SqlBoolean LessThanOrEqual(SqlInt16,SqlInt16)
+ [m]	SqlInt16 Mod(SqlInt16,SqlInt16)
+ [m]	SqlInt16 Modulus(SqlInt16,SqlInt16)
+ [m]	SqlInt16 Multiply(SqlInt16,SqlInt16)
+ [m]	SqlBoolean NotEquals(SqlInt16,SqlInt16)
+ [m]	SqlInt16 OnesComplement(SqlInt16)
+ [m]	SqlInt16 op_Addition(SqlInt16,SqlInt16)
+ [m]	SqlInt16 op_BitwiseAnd(SqlInt16,SqlInt16)
+ [m]	SqlInt16 op_BitwiseOr(SqlInt16,SqlInt16)
+ [m]	SqlInt16 op_Division(SqlInt16,SqlInt16)
+ [m]	SqlBoolean op_Equality(SqlInt16,SqlInt16)
+ [m]	SqlInt16 op_ExclusiveOr(SqlInt16,SqlInt16)
+ [m]	SqlInt16 op_Explicit(SqlBoolean)
+ [m]	SqlInt16 op_Explicit(SqlDecimal)
+ [m]	SqlInt16 op_Explicit(SqlDouble)
+ [m]	Int16 op_Explicit(SqlInt16)
+ [m]	SqlInt16 op_Explicit(SqlInt32)
+ [m]	SqlInt16 op_Explicit(SqlInt64)
+ [m]	SqlInt16 op_Explicit(SqlMoney)
+ [m]	SqlInt16 op_Explicit(SqlSingle)
+ [m]	SqlInt16 op_Explicit(SqlString)
+ [m]	SqlBoolean op_GreaterThan(SqlInt16,SqlInt16)
+ [m]	SqlBoolean op_GreaterThanOrEqual(SqlInt16,SqlInt16)
+ [m]	SqlInt16 op_Implicit(SqlByte)
+ [m]	SqlInt16 op_Implicit(Int16)
+ [m]	SqlBoolean op_Inequality(SqlInt16,SqlInt16)
+ [m]	SqlBoolean op_LessThan(SqlInt16,SqlInt16)
+ [m]	SqlBoolean op_LessThanOrEqual(SqlInt16,SqlInt16)
+ [m]	SqlInt16 op_Modulus(SqlInt16,SqlInt16)
+ [m]	SqlInt16 op_Multiply(SqlInt16,SqlInt16)
+ [m]	SqlInt16 op_OnesComplement(SqlInt16)
+ [m]	SqlInt16 op_Subtraction(SqlInt16,SqlInt16)
+ [m]	SqlInt16 op_UnaryNegation(SqlInt16)
+ [m]	SqlInt16 Parse(String)
+ [m]	SqlInt16 Subtract(SqlInt16,SqlInt16)
+ [m]	SqlBoolean ToSqlBoolean()
+ [m]	SqlByte ToSqlByte()
+ [m]	SqlDecimal ToSqlDecimal()
+ [m]	SqlDouble ToSqlDouble()
+ [m]	SqlInt32 ToSqlInt32()
+ [m]	SqlInt64 ToSqlInt64()
+ [m]	SqlMoney ToSqlMoney()
+ [m]	SqlSingle ToSqlSingle()
+ [m]	SqlString ToSqlString()
+ [m]	String ToString()
+ [m]	SqlInt16 Xor(SqlInt16,SqlInt16)

f [t] System.Data.SqlTypes.SqlInt32
+ [m]	Void .ctor(Int32)
+ [m]	Boolean get_IsNull()
+ [m]	Int32 get_Value()
+ [m]	SqlInt32 Add(SqlInt32,SqlInt32)
+ [m]	SqlInt32 BitwiseAnd(SqlInt32,SqlInt32)
+ [m]	SqlInt32 BitwiseOr(SqlInt32,SqlInt32)
+ [m]	Int32 CompareTo(SqlInt32)
+ [m]	Int32 CompareTo(Object)
+ [m]	SqlInt32 Divide(SqlInt32,SqlInt32)
+ [m]	SqlBoolean Equals(SqlInt32,SqlInt32)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	SqlBoolean GreaterThan(SqlInt32,SqlInt32)
+ [m]	SqlBoolean GreaterThanOrEqual(SqlInt32,SqlInt32)
+ [m]	SqlBoolean LessThan(SqlInt32,SqlInt32)
+ [m]	SqlBoolean LessThanOrEqual(SqlInt32,SqlInt32)
+ [m]	SqlInt32 Mod(SqlInt32,SqlInt32)
+ [m]	SqlInt32 Modulus(SqlInt32,SqlInt32)
+ [m]	SqlInt32 Multiply(SqlInt32,SqlInt32)
+ [m]	SqlBoolean NotEquals(SqlInt32,SqlInt32)
+ [m]	SqlInt32 OnesComplement(SqlInt32)
+ [m]	SqlInt32 op_Addition(SqlInt32,SqlInt32)
+ [m]	SqlInt32 op_BitwiseAnd(SqlInt32,SqlInt32)
+ [m]	SqlInt32 op_BitwiseOr(SqlInt32,SqlInt32)
+ [m]	SqlInt32 op_Division(SqlInt32,SqlInt32)
+ [m]	SqlBoolean op_Equality(SqlInt32,SqlInt32)
+ [m]	SqlInt32 op_ExclusiveOr(SqlInt32,SqlInt32)
+ [m]	SqlInt32 op_Explicit(SqlBoolean)
+ [m]	SqlInt32 op_Explicit(SqlDecimal)
+ [m]	SqlInt32 op_Explicit(SqlDouble)
+ [m]	Int32 op_Explicit(SqlInt32)
+ [m]	SqlInt32 op_Explicit(SqlInt64)
+ [m]	SqlInt32 op_Explicit(SqlMoney)
+ [m]	SqlInt32 op_Explicit(SqlSingle)
+ [m]	SqlInt32 op_Explicit(SqlString)
+ [m]	SqlBoolean op_GreaterThan(SqlInt32,SqlInt32)
+ [m]	SqlBoolean op_GreaterThanOrEqual(SqlInt32,SqlInt32)
+ [m]	SqlInt32 op_Implicit(SqlByte)
+ [m]	SqlInt32 op_Implicit(SqlInt16)
+ [m]	SqlInt32 op_Implicit(Int32)
+ [m]	SqlBoolean op_Inequality(SqlInt32,SqlInt32)
+ [m]	SqlBoolean op_LessThan(SqlInt32,SqlInt32)
+ [m]	SqlBoolean op_LessThanOrEqual(SqlInt32,SqlInt32)
+ [m]	SqlInt32 op_Modulus(SqlInt32,SqlInt32)
+ [m]	SqlInt32 op_Multiply(SqlInt32,SqlInt32)
+ [m]	SqlInt32 op_OnesComplement(SqlInt32)
+ [m]	SqlInt32 op_Subtraction(SqlInt32,SqlInt32)
+ [m]	SqlInt32 op_UnaryNegation(SqlInt32)
+ [m]	SqlInt32 Parse(String)
+ [m]	SqlInt32 Subtract(SqlInt32,SqlInt32)
+ [m]	SqlBoolean ToSqlBoolean()
+ [m]	SqlByte ToSqlByte()
+ [m]	SqlDecimal ToSqlDecimal()
+ [m]	SqlDouble ToSqlDouble()
+ [m]	SqlInt16 ToSqlInt16()
+ [m]	SqlInt64 ToSqlInt64()
+ [m]	SqlMoney ToSqlMoney()
+ [m]	SqlSingle ToSqlSingle()
+ [m]	SqlString ToSqlString()
+ [m]	String ToString()
+ [m]	SqlInt32 Xor(SqlInt32,SqlInt32)

f [t] System.Data.SqlTypes.SqlInt64
+ [m]	Void .ctor(Int64)
+ [m]	Boolean get_IsNull()
+ [m]	Int64 get_Value()
+ [m]	SqlInt64 Add(SqlInt64,SqlInt64)
+ [m]	SqlInt64 BitwiseAnd(SqlInt64,SqlInt64)
+ [m]	SqlInt64 BitwiseOr(SqlInt64,SqlInt64)
+ [m]	Int32 CompareTo(SqlInt64)
+ [m]	Int32 CompareTo(Object)
+ [m]	SqlInt64 Divide(SqlInt64,SqlInt64)
+ [m]	SqlBoolean Equals(SqlInt64,SqlInt64)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	SqlBoolean GreaterThan(SqlInt64,SqlInt64)
+ [m]	SqlBoolean GreaterThanOrEqual(SqlInt64,SqlInt64)
+ [m]	SqlBoolean LessThan(SqlInt64,SqlInt64)
+ [m]	SqlBoolean LessThanOrEqual(SqlInt64,SqlInt64)
+ [m]	SqlInt64 Mod(SqlInt64,SqlInt64)
+ [m]	SqlInt64 Modulus(SqlInt64,SqlInt64)
+ [m]	SqlInt64 Multiply(SqlInt64,SqlInt64)
+ [m]	SqlBoolean NotEquals(SqlInt64,SqlInt64)
+ [m]	SqlInt64 OnesComplement(SqlInt64)
+ [m]	SqlInt64 op_Addition(SqlInt64,SqlInt64)
+ [m]	SqlInt64 op_BitwiseAnd(SqlInt64,SqlInt64)
+ [m]	SqlInt64 op_BitwiseOr(SqlInt64,SqlInt64)
+ [m]	SqlInt64 op_Division(SqlInt64,SqlInt64)
+ [m]	SqlBoolean op_Equality(SqlInt64,SqlInt64)
+ [m]	SqlInt64 op_ExclusiveOr(SqlInt64,SqlInt64)
+ [m]	SqlInt64 op_Explicit(SqlBoolean)
+ [m]	SqlInt64 op_Explicit(SqlDecimal)
+ [m]	SqlInt64 op_Explicit(SqlDouble)
+ [m]	Int64 op_Explicit(SqlInt64)
+ [m]	SqlInt64 op_Explicit(SqlMoney)
+ [m]	SqlInt64 op_Explicit(SqlSingle)
+ [m]	SqlInt64 op_Explicit(SqlString)
+ [m]	SqlBoolean op_GreaterThan(SqlInt64,SqlInt64)
+ [m]	SqlBoolean op_GreaterThanOrEqual(SqlInt64,SqlInt64)
+ [m]	SqlInt64 op_Implicit(SqlByte)
+ [m]	SqlInt64 op_Implicit(SqlInt16)
+ [m]	SqlInt64 op_Implicit(SqlInt32)
+ [m]	SqlInt64 op_Implicit(Int64)
+ [m]	SqlBoolean op_Inequality(SqlInt64,SqlInt64)
+ [m]	SqlBoolean op_LessThan(SqlInt64,SqlInt64)
+ [m]	SqlBoolean op_LessThanOrEqual(SqlInt64,SqlInt64)
+ [m]	SqlInt64 op_Modulus(SqlInt64,SqlInt64)
+ [m]	SqlInt64 op_Multiply(SqlInt64,SqlInt64)
+ [m]	SqlInt64 op_OnesComplement(SqlInt64)
+ [m]	SqlInt64 op_Subtraction(SqlInt64,SqlInt64)
+ [m]	SqlInt64 op_UnaryNegation(SqlInt64)
+ [m]	SqlInt64 Parse(String)
+ [m]	SqlInt64 Subtract(SqlInt64,SqlInt64)
+ [m]	SqlBoolean ToSqlBoolean()
+ [m]	SqlByte ToSqlByte()
+ [m]	SqlDecimal ToSqlDecimal()
+ [m]	SqlDouble ToSqlDouble()
+ [m]	SqlInt16 ToSqlInt16()
+ [m]	SqlInt32 ToSqlInt32()
+ [m]	SqlMoney ToSqlMoney()
+ [m]	SqlSingle ToSqlSingle()
+ [m]	SqlString ToSqlString()
+ [m]	String ToString()
+ [m]	SqlInt64 Xor(SqlInt64,SqlInt64)

f [t] System.Data.SqlTypes.SqlMoney
+ [m]	Void .ctor(Decimal)
+ [m]	Void .ctor(Double)
+ [m]	Void .ctor(Int32)
+ [m]	Void .ctor(Int64)
+ [m]	Boolean get_IsNull()
+ [m]	Decimal get_Value()
+ [m]	SqlMoney Add(SqlMoney,SqlMoney)
+ [m]	Int32 CompareTo(SqlMoney)
+ [m]	Int32 CompareTo(Object)
+ [m]	SqlMoney Divide(SqlMoney,SqlMoney)
+ [m]	SqlBoolean Equals(SqlMoney,SqlMoney)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	SqlBoolean GreaterThan(SqlMoney,SqlMoney)
+ [m]	SqlBoolean GreaterThanOrEqual(SqlMoney,SqlMoney)
+ [m]	SqlBoolean LessThan(SqlMoney,SqlMoney)
+ [m]	SqlBoolean LessThanOrEqual(SqlMoney,SqlMoney)
+ [m]	SqlMoney Multiply(SqlMoney,SqlMoney)
+ [m]	SqlBoolean NotEquals(SqlMoney,SqlMoney)
+ [m]	SqlMoney op_Addition(SqlMoney,SqlMoney)
+ [m]	SqlMoney op_Division(SqlMoney,SqlMoney)
+ [m]	SqlBoolean op_Equality(SqlMoney,SqlMoney)
+ [m]	SqlMoney op_Explicit(SqlBoolean)
+ [m]	SqlMoney op_Explicit(SqlDecimal)
+ [m]	SqlMoney op_Explicit(SqlDouble)
+ [m]	Decimal op_Explicit(SqlMoney)
+ [m]	SqlMoney op_Explicit(SqlSingle)
+ [m]	SqlMoney op_Explicit(SqlString)
+ [m]	SqlMoney op_Explicit(Double)
+ [m]	SqlBoolean op_GreaterThan(SqlMoney,SqlMoney)
+ [m]	SqlBoolean op_GreaterThanOrEqual(SqlMoney,SqlMoney)
+ [m]	SqlMoney op_Implicit(SqlByte)
+ [m]	SqlMoney op_Implicit(SqlInt16)
+ [m]	SqlMoney op_Implicit(SqlInt32)
+ [m]	SqlMoney op_Implicit(SqlInt64)
+ [m]	SqlMoney op_Implicit(Decimal)
+ [m]	SqlMoney op_Implicit(Int64)
+ [m]	SqlBoolean op_Inequality(SqlMoney,SqlMoney)
+ [m]	SqlBoolean op_LessThan(SqlMoney,SqlMoney)
+ [m]	SqlBoolean op_LessThanOrEqual(SqlMoney,SqlMoney)
+ [m]	SqlMoney op_Multiply(SqlMoney,SqlMoney)
+ [m]	SqlMoney op_Subtraction(SqlMoney,SqlMoney)
+ [m]	SqlMoney op_UnaryNegation(SqlMoney)
+ [m]	SqlMoney Parse(String)
+ [m]	SqlMoney Subtract(SqlMoney,SqlMoney)
+ [m]	Decimal ToDecimal()
+ [m]	Double ToDouble()
+ [m]	Int32 ToInt32()
+ [m]	Int64 ToInt64()
+ [m]	SqlBoolean ToSqlBoolean()
+ [m]	SqlByte ToSqlByte()
+ [m]	SqlDecimal ToSqlDecimal()
+ [m]	SqlDouble ToSqlDouble()
+ [m]	SqlInt16 ToSqlInt16()
+ [m]	SqlInt32 ToSqlInt32()
+ [m]	SqlInt64 ToSqlInt64()
+ [m]	SqlSingle ToSqlSingle()
+ [m]	SqlString ToSqlString()
+ [m]	String ToString()

f [t] System.Data.SqlTypes.SqlNullValueException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Data.SqlTypes.SqlSingle
+ [m]	Void .ctor(Double)
+ [m]	Void .ctor(Single)
+ [m]	Boolean get_IsNull()
+ [m]	Single get_Value()
+ [m]	SqlSingle Add(SqlSingle,SqlSingle)
+ [m]	Int32 CompareTo(SqlSingle)
+ [m]	Int32 CompareTo(Object)
+ [m]	SqlSingle Divide(SqlSingle,SqlSingle)
+ [m]	SqlBoolean Equals(SqlSingle,SqlSingle)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	SqlBoolean GreaterThan(SqlSingle,SqlSingle)
+ [m]	SqlBoolean GreaterThanOrEqual(SqlSingle,SqlSingle)
+ [m]	SqlBoolean LessThan(SqlSingle,SqlSingle)
+ [m]	SqlBoolean LessThanOrEqual(SqlSingle,SqlSingle)
+ [m]	SqlSingle Multiply(SqlSingle,SqlSingle)
+ [m]	SqlBoolean NotEquals(SqlSingle,SqlSingle)
+ [m]	SqlSingle op_Addition(SqlSingle,SqlSingle)
+ [m]	SqlSingle op_Division(SqlSingle,SqlSingle)
+ [m]	SqlBoolean op_Equality(SqlSingle,SqlSingle)
+ [m]	SqlSingle op_Explicit(SqlBoolean)
+ [m]	SqlSingle op_Explicit(SqlDouble)
+ [m]	Single op_Explicit(SqlSingle)
+ [m]	SqlSingle op_Explicit(SqlString)
+ [m]	SqlBoolean op_GreaterThan(SqlSingle,SqlSingle)
+ [m]	SqlBoolean op_GreaterThanOrEqual(SqlSingle,SqlSingle)
+ [m]	SqlSingle op_Implicit(SqlByte)
+ [m]	SqlSingle op_Implicit(SqlDecimal)
+ [m]	SqlSingle op_Implicit(SqlInt16)
+ [m]	SqlSingle op_Implicit(SqlInt32)
+ [m]	SqlSingle op_Implicit(SqlInt64)
+ [m]	SqlSingle op_Implicit(SqlMoney)
+ [m]	SqlSingle op_Implicit(Single)
+ [m]	SqlBoolean op_Inequality(SqlSingle,SqlSingle)
+ [m]	SqlBoolean op_LessThan(SqlSingle,SqlSingle)
+ [m]	SqlBoolean op_LessThanOrEqual(SqlSingle,SqlSingle)
+ [m]	SqlSingle op_Multiply(SqlSingle,SqlSingle)
+ [m]	SqlSingle op_Subtraction(SqlSingle,SqlSingle)
+ [m]	SqlSingle op_UnaryNegation(SqlSingle)
+ [m]	SqlSingle Parse(String)
+ [m]	SqlSingle Subtract(SqlSingle,SqlSingle)
+ [m]	SqlBoolean ToSqlBoolean()
+ [m]	SqlByte ToSqlByte()
+ [m]	SqlDecimal ToSqlDecimal()
+ [m]	SqlDouble ToSqlDouble()
+ [m]	SqlInt16 ToSqlInt16()
+ [m]	SqlInt32 ToSqlInt32()
+ [m]	SqlInt64 ToSqlInt64()
+ [m]	SqlMoney ToSqlMoney()
+ [m]	SqlString ToSqlString()
+ [m]	String ToString()

f [t] System.Data.SqlTypes.SqlString
+ [m]	Void .ctor(Int32,SqlCompareOptions,Byte[])
+ [m]	Void .ctor(Int32,SqlCompareOptions,Byte[],Boolean)
+ [m]	Void .ctor(Int32,SqlCompareOptions,Byte[],Int32,Int32)
+ [m]	Void .ctor(Int32,SqlCompareOptions,Byte[],Int32,Int32,Boolean)
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Int32)
+ [m]	Void .ctor(String,Int32,SqlCompareOptions)
+ [m]	CompareInfo get_CompareInfo()
+ [m]	CultureInfo get_CultureInfo()
+ [m]	Boolean get_IsNull()
+ [m]	Int32 get_LCID()
+ [m]	SqlCompareOptions get_SqlCompareOptions()
+ [m]	String get_Value()
+ [m]	SqlString Add(SqlString,SqlString)
+ [m]	SqlString Clone()
+ [m]	CompareOptions CompareOptionsFromSqlCompareOptions(SqlCompareOptions)
+ [m]	Int32 CompareTo(SqlString)
+ [m]	Int32 CompareTo(Object)
+ [m]	SqlString Concat(SqlString,SqlString)
+ [m]	SqlBoolean Equals(SqlString,SqlString)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Byte[] GetNonUnicodeBytes()
+ [m]	Byte[] GetUnicodeBytes()
+ [m]	SqlBoolean GreaterThan(SqlString,SqlString)
+ [m]	SqlBoolean GreaterThanOrEqual(SqlString,SqlString)
+ [m]	SqlBoolean LessThan(SqlString,SqlString)
+ [m]	SqlBoolean LessThanOrEqual(SqlString,SqlString)
+ [m]	SqlBoolean NotEquals(SqlString,SqlString)
+ [m]	SqlString op_Addition(SqlString,SqlString)
+ [m]	SqlBoolean op_Equality(SqlString,SqlString)
+ [m]	SqlString op_Explicit(SqlBoolean)
+ [m]	SqlString op_Explicit(SqlByte)
+ [m]	SqlString op_Explicit(SqlDateTime)
+ [m]	SqlString op_Explicit(SqlDecimal)
+ [m]	SqlString op_Explicit(SqlDouble)
+ [m]	SqlString op_Explicit(SqlGuid)
+ [m]	SqlString op_Explicit(SqlInt16)
+ [m]	SqlString op_Explicit(SqlInt32)
+ [m]	SqlString op_Explicit(SqlInt64)
+ [m]	SqlString op_Explicit(SqlMoney)
+ [m]	SqlString op_Explicit(SqlSingle)
+ [m]	String op_Explicit(SqlString)
+ [m]	SqlBoolean op_GreaterThan(SqlString,SqlString)
+ [m]	SqlBoolean op_GreaterThanOrEqual(SqlString,SqlString)
+ [m]	SqlString op_Implicit(String)
+ [m]	SqlBoolean op_Inequality(SqlString,SqlString)
+ [m]	SqlBoolean op_LessThan(SqlString,SqlString)
+ [m]	SqlBoolean op_LessThanOrEqual(SqlString,SqlString)
+ [m]	SqlBoolean ToSqlBoolean()
+ [m]	SqlByte ToSqlByte()
+ [m]	SqlDateTime ToSqlDateTime()
+ [m]	SqlDecimal ToSqlDecimal()
+ [m]	SqlDouble ToSqlDouble()
+ [m]	SqlGuid ToSqlGuid()
+ [m]	SqlInt16 ToSqlInt16()
+ [m]	SqlInt32 ToSqlInt32()
+ [m]	SqlInt64 ToSqlInt64()
+ [m]	SqlMoney ToSqlMoney()
+ [m]	SqlSingle ToSqlSingle()
+ [m]	String ToString()

f [t] System.Data.SqlTypes.SqlTruncateException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Data.SqlTypes.SqlTypeException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Data.SqlTypes.SqlXml
+ [m]	Void .ctor()
+ [m]	Void .ctor(Stream)
+ [m]	Void .ctor(XmlReader)
+ [m]	Boolean get_IsNull()
+ [m]	SqlXml get_Null()
+ [m]	String get_Value()
+ [m]	XmlReader CreateReader()

f [t] System.Data.SqlClient.ApplicationIntent

f [t] System.Data.SqlClient.SortOrder

f [t] System.Data.SqlClient.SqlBulkCopy
+ [m]	Void .ctor(SqlConnection)
+ [m]	Void .ctor(SqlConnection,SqlBulkCopyOptions,SqlTransaction)
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,SqlBulkCopyOptions)
+ [m]	Int32 get_BatchSize()
+ [m]	Void set_BatchSize(Int32)
+ [m]	Int32 get_BulkCopyTimeout()
+ [m]	Void set_BulkCopyTimeout(Int32)
+ [m]	SqlBulkCopyColumnMappingCollection get_ColumnMappings()
+ [m]	String get_DestinationTableName()
+ [m]	Void set_DestinationTableName(String)
- [m]	Boolean get_EnableStreaming()
- [m]	Void set_EnableStreaming(Boolean)
+ [m]	Int32 get_NotifyAfter()
+ [m]	Void set_NotifyAfter(Int32)
+ [m]	Void add_SqlRowsCopied(SqlRowsCopiedEventHandler)
+ [m]	Void remove_SqlRowsCopied(SqlRowsCopiedEventHandler)
+ [m]	Void Close()
+ [m]	Void System.IDisposable.Dispose()
- [m]	Void WriteToServer(DbDataReader)
- [m]	Task WriteToServerAsync(DbDataReader)
- [m]	Task WriteToServerAsync(DbDataReader,CancellationToken)

f [t] System.Data.SqlClient.SqlBulkCopyColumnMapping
+ [m]	Void .ctor()
+ [m]	Void .ctor(Int32,Int32)
+ [m]	Void .ctor(Int32,String)
+ [m]	Void .ctor(String,Int32)
+ [m]	Void .ctor(String,String)
+ [m]	String get_DestinationColumn()
+ [m]	Void set_DestinationColumn(String)
+ [m]	Int32 get_DestinationOrdinal()
+ [m]	Void set_DestinationOrdinal(Int32)
+ [m]	String get_SourceColumn()
+ [m]	Void set_SourceColumn(String)
+ [m]	Int32 get_SourceOrdinal()
+ [m]	Void set_SourceOrdinal(Int32)

f [t] System.Data.SqlClient.SqlBulkCopyColumnMappingCollection
+ [m]	Void .ctor()
+ [m]	SqlBulkCopyColumnMapping get_Item(Int32)
+ [m]	SqlBulkCopyColumnMapping Add(SqlBulkCopyColumnMapping)
+ [m]	SqlBulkCopyColumnMapping Add(Int32,Int32)
+ [m]	SqlBulkCopyColumnMapping Add(Int32,String)
+ [m]	SqlBulkCopyColumnMapping Add(String,Int32)
+ [m]	SqlBulkCopyColumnMapping Add(String,String)
+ [m]	Boolean Contains(SqlBulkCopyColumnMapping)
+ [m]	Void CopyTo(SqlBulkCopyColumnMapping[],Int32)
+ [m]	Int32 IndexOf(SqlBulkCopyColumnMapping)
+ [m]	Void Insert(Int32,SqlBulkCopyColumnMapping)
+ [m]	Void Remove(SqlBulkCopyColumnMapping)
- [m]	Int32 get_Count()
- [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
- [m]	Object System.Collections.ICollection.get_SyncRoot()
- [m]	Boolean System.Collections.IList.get_IsFixedSize()
- [m]	Boolean System.Collections.IList.get_IsReadOnly()
- [m]	Object System.Collections.IList.get_Item(Int32)
- [m]	Void System.Collections.IList.set_Item(Int32,Object)
+ [m]	Void Clear()
- [m]	IEnumerator GetEnumerator()
+ [m]	Void RemoveAt(Int32)
- [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
- [m]	Int32 System.Collections.IList.Add(Object)
- [m]	Boolean System.Collections.IList.Contains(Object)
- [m]	Int32 System.Collections.IList.IndexOf(Object)
- [m]	Void System.Collections.IList.Insert(Int32,Object)
- [m]	Void System.Collections.IList.Remove(Object)

f [t] System.Data.SqlClient.SqlBulkCopyOptions

f [t] System.Data.SqlClient.SqlClientFactory
+ [m]	Void .ctor()
+ [m]	DbCommand CreateCommand()
+ [m]	DbConnection CreateConnection()
+ [m]	DbConnectionStringBuilder CreateConnectionStringBuilder()
+ [m]	DbParameter CreateParameter()

f [t] System.Data.SqlClient.SqlCommand
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,SqlConnection)
+ [m]	Void .ctor(String,SqlConnection,SqlTransaction)
+ [m]	String get_CommandText()
+ [m]	Void set_CommandText(String)
+ [m]	Int32 get_CommandTimeout()
+ [m]	Void set_CommandTimeout(Int32)
+ [m]	CommandType get_CommandType()
+ [m]	Void set_CommandType(CommandType)
+ [m]	SqlConnection get_Connection()
+ [m]	Void set_Connection(SqlConnection)
+ [m]	DbConnection get_DbConnection()
+ [m]	Void set_DbConnection(DbConnection)
+ [m]	DbParameterCollection get_DbParameterCollection()
+ [m]	DbTransaction get_DbTransaction()
+ [m]	Void set_DbTransaction(DbTransaction)
+ [m]	Boolean get_DesignTimeVisible()
+ [m]	Void set_DesignTimeVisible(Boolean)
+ [m]	SqlParameterCollection get_Parameters()
+ [m]	SqlTransaction get_Transaction()
+ [m]	Void set_Transaction(SqlTransaction)
+ [m]	UpdateRowSource get_UpdatedRowSource()
+ [m]	Void set_UpdatedRowSource(UpdateRowSource)
+ [m]	Void add_StatementCompleted(StatementCompletedEventHandler)
+ [m]	Void remove_StatementCompleted(StatementCompletedEventHandler)
+ [m]	Void Cancel()
+ [m]	DbParameter CreateDbParameter()
+ [m]	SqlParameter CreateParameter()
+ [m]	DbDataReader ExecuteDbDataReader(CommandBehavior)
- [m]	Task`1 ExecuteDbDataReaderAsync(CommandBehavior,CancellationToken)
+ [m]	Int32 ExecuteNonQuery()
- [m]	Task`1 ExecuteNonQueryAsync(CancellationToken)
+ [m]	SqlDataReader ExecuteReader()
+ [m]	SqlDataReader ExecuteReader(CommandBehavior)
- [m]	Task`1 ExecuteReaderAsync()
- [m]	Task`1 ExecuteReaderAsync(CommandBehavior)
- [m]	Task`1 ExecuteReaderAsync(CommandBehavior,CancellationToken)
- [m]	Task`1 ExecuteReaderAsync(CancellationToken)
+ [m]	Object ExecuteScalar()
- [m]	Task`1 ExecuteScalarAsync(CancellationToken)
+ [m]	XmlReader ExecuteXmlReader()
- [m]	Task`1 ExecuteXmlReaderAsync()
- [m]	Task`1 ExecuteXmlReaderAsync(CancellationToken)
+ [m]	Void Prepare()
+ [m]	Void Dispose(Boolean)

f [t] System.Data.SqlClient.SqlConnection
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
- [m]	Guid get_ClientConnectionId()
+ [m]	String get_ConnectionString()
+ [m]	Void set_ConnectionString(String)
+ [m]	Int32 get_ConnectionTimeout()
+ [m]	String get_Database()
+ [m]	String get_DataSource()
+ [m]	Boolean get_FireInfoMessageEventOnUserErrors()
+ [m]	Void set_FireInfoMessageEventOnUserErrors(Boolean)
+ [m]	Int32 get_PacketSize()
+ [m]	String get_ServerVersion()
+ [m]	ConnectionState get_State()
+ [m]	Boolean get_StatisticsEnabled()
+ [m]	Void set_StatisticsEnabled(Boolean)
+ [m]	String get_WorkstationId()
+ [m]	Void add_InfoMessage(SqlInfoMessageEventHandler)
+ [m]	Void remove_InfoMessage(SqlInfoMessageEventHandler)
+ [m]	DbTransaction BeginDbTransaction(IsolationLevel)
+ [m]	SqlTransaction BeginTransaction()
+ [m]	SqlTransaction BeginTransaction(IsolationLevel)
+ [m]	SqlTransaction BeginTransaction(IsolationLevel,String)
+ [m]	SqlTransaction BeginTransaction(String)
+ [m]	Void ChangeDatabase(String)
+ [m]	Void ClearAllPools()
+ [m]	Void ClearPool(SqlConnection)
+ [m]	Void Close()
+ [m]	SqlCommand CreateCommand()
+ [m]	DbCommand CreateDbCommand()
+ [m]	Void Open()
- [m]	Task OpenAsync(CancellationToken)
- [m]	Void ResetStatistics()
- [m]	IDictionary RetrieveStatistics()
+ [m]	Void Dispose(Boolean)

f [t] System.Data.SqlClient.SqlConnectionStringBuilder
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	ApplicationIntent get_ApplicationIntent()
+ [m]	Void set_ApplicationIntent(ApplicationIntent)
+ [m]	String get_ApplicationName()
+ [m]	Void set_ApplicationName(String)
+ [m]	String get_AttachDBFilename()
+ [m]	Void set_AttachDBFilename(String)
+ [m]	Int32 get_ConnectRetryCount()
+ [m]	Void set_ConnectRetryCount(Int32)
+ [m]	Int32 get_ConnectRetryInterval()
+ [m]	Void set_ConnectRetryInterval(Int32)
+ [m]	Int32 get_ConnectTimeout()
+ [m]	Void set_ConnectTimeout(Int32)
+ [m]	String get_CurrentLanguage()
+ [m]	Void set_CurrentLanguage(String)
+ [m]	String get_DataSource()
+ [m]	Void set_DataSource(String)
+ [m]	Boolean get_Encrypt()
+ [m]	Void set_Encrypt(Boolean)
+ [m]	String get_FailoverPartner()
+ [m]	Void set_FailoverPartner(String)
+ [m]	String get_InitialCatalog()
+ [m]	Void set_InitialCatalog(String)
+ [m]	Boolean get_IntegratedSecurity()
+ [m]	Void set_IntegratedSecurity(Boolean)
+ [m]	Object get_Item(String)
+ [m]	Void set_Item(String,Object)
+ [m]	ICollection get_Keys()
+ [m]	Int32 get_LoadBalanceTimeout()
+ [m]	Void set_LoadBalanceTimeout(Int32)
+ [m]	Int32 get_MaxPoolSize()
+ [m]	Void set_MaxPoolSize(Int32)
+ [m]	Int32 get_MinPoolSize()
+ [m]	Void set_MinPoolSize(Int32)
+ [m]	Boolean get_MultipleActiveResultSets()
+ [m]	Void set_MultipleActiveResultSets(Boolean)
+ [m]	Boolean get_MultiSubnetFailover()
+ [m]	Void set_MultiSubnetFailover(Boolean)
+ [m]	Int32 get_PacketSize()
+ [m]	Void set_PacketSize(Int32)
+ [m]	String get_Password()
+ [m]	Void set_Password(String)
+ [m]	Boolean get_PersistSecurityInfo()
+ [m]	Void set_PersistSecurityInfo(Boolean)
+ [m]	Boolean get_Pooling()
+ [m]	Void set_Pooling(Boolean)
+ [m]	Boolean get_Replication()
+ [m]	Void set_Replication(Boolean)
+ [m]	Boolean get_TrustServerCertificate()
+ [m]	Void set_TrustServerCertificate(Boolean)
+ [m]	String get_TypeSystemVersion()
+ [m]	Void set_TypeSystemVersion(String)
+ [m]	String get_UserID()
+ [m]	Void set_UserID(String)
+ [m]	Boolean get_UserInstance()
+ [m]	Void set_UserInstance(Boolean)
+ [m]	ICollection get_Values()
+ [m]	String get_WorkstationID()
+ [m]	Void set_WorkstationID(String)
+ [m]	Void Clear()
+ [m]	Boolean ContainsKey(String)
+ [m]	Boolean Remove(String)
+ [m]	Boolean ShouldSerialize(String)
+ [m]	Boolean TryGetValue(String,Object&)

f [t] System.Data.SqlClient.SqlDataReader
- [m]	Void .ctor()
+ [m]	SqlConnection get_Connection()
+ [m]	Int32 get_Depth()
+ [m]	Int32 get_FieldCount()
+ [m]	Boolean get_HasRows()
+ [m]	Boolean get_IsClosed()
+ [m]	Object get_Item(Int32)
+ [m]	Object get_Item(String)
+ [m]	Int32 get_RecordsAffected()
+ [m]	Int32 get_VisibleFieldCount()
+ [m]	Boolean GetBoolean(Int32)
+ [m]	Byte GetByte(Int32)
+ [m]	Int64 GetBytes(Int32,Int64,Byte[],Int32,Int32)
+ [m]	Char GetChar(Int32)
+ [m]	Int64 GetChars(Int32,Int64,Char[],Int32,Int32)
+ [m]	String GetDataTypeName(Int32)
+ [m]	DateTime GetDateTime(Int32)
! [m]	DateTimeOffset GetDateTimeOffset(Int32)
+ [m]	Decimal GetDecimal(Int32)
+ [m]	Double GetDouble(Int32)
+ [m]	IEnumerator GetEnumerator()
+ [m]	Type GetFieldType(Int32)
+ [m]	T GetFieldValue(Int32)
- [m]	Task`1 GetFieldValueAsync(Int32,CancellationToken)
+ [m]	Single GetFloat(Int32)
+ [m]	Guid GetGuid(Int32)
+ [m]	Int16 GetInt16(Int32)
+ [m]	Int32 GetInt32(Int32)
+ [m]	Int64 GetInt64(Int32)
+ [m]	String GetName(Int32)
+ [m]	Int32 GetOrdinal(String)
+ [m]	Type GetProviderSpecificFieldType(Int32)
+ [m]	Object GetProviderSpecificValue(Int32)
+ [m]	Int32 GetProviderSpecificValues(Object[])
+ [m]	SqlBinary GetSqlBinary(Int32)
+ [m]	SqlBoolean GetSqlBoolean(Int32)
+ [m]	SqlByte GetSqlByte(Int32)
+ [m]	SqlBytes GetSqlBytes(Int32)
! [m]	SqlChars GetSqlChars(Int32)
+ [m]	SqlDateTime GetSqlDateTime(Int32)
+ [m]	SqlDecimal GetSqlDecimal(Int32)
+ [m]	SqlDouble GetSqlDouble(Int32)
+ [m]	SqlGuid GetSqlGuid(Int32)
+ [m]	SqlInt16 GetSqlInt16(Int32)
+ [m]	SqlInt32 GetSqlInt32(Int32)
+ [m]	SqlInt64 GetSqlInt64(Int32)
+ [m]	SqlMoney GetSqlMoney(Int32)
+ [m]	SqlSingle GetSqlSingle(Int32)
+ [m]	SqlString GetSqlString(Int32)
+ [m]	Object GetSqlValue(Int32)
+ [m]	Int32 GetSqlValues(Object[])
+ [m]	SqlXml GetSqlXml(Int32)
- [m]	Stream GetStream(Int32)
+ [m]	String GetString(Int32)
- [m]	TextReader GetTextReader(Int32)
! [m]	TimeSpan GetTimeSpan(Int32)
+ [m]	Object GetValue(Int32)
+ [m]	Int32 GetValues(Object[])
! [m]	XmlReader GetXmlReader(Int32)
+ [m]	Boolean IsDBNull(Int32)
- [m]	Task`1 IsDBNullAsync(Int32,CancellationToken)
+ [m]	Boolean NextResult()
- [m]	Task`1 NextResultAsync(CancellationToken)
+ [m]	Boolean Read()
- [m]	Task`1 ReadAsync(CancellationToken)

f [t] System.Data.SqlClient.SqlError
- [m]	Void .ctor()
+ [m]	Byte get_Class()
+ [m]	Int32 get_LineNumber()
+ [m]	String get_Message()
+ [m]	Int32 get_Number()
+ [m]	String get_Procedure()
+ [m]	String get_Server()
+ [m]	String get_Source()
+ [m]	Byte get_State()
+ [m]	String ToString()

f [t] System.Data.SqlClient.SqlErrorCollection
+ [m]	Void .ctor()
+ [m]	Int32 get_Count()
+ [m]	SqlError get_Item(Int32)
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Void CopyTo(Array,Int32)
+ [m]	Void CopyTo(SqlError[],Int32)
+ [m]	IEnumerator GetEnumerator()

f [t] System.Data.SqlClient.SqlException
+ [m]	Void .ctor()
+ [m]	Byte get_Class()
- [m]	Guid get_ClientConnectionId()
+ [m]	SqlErrorCollection get_Errors()
+ [m]	Int32 get_LineNumber()
+ [m]	Int32 get_Number()
+ [m]	String get_Procedure()
+ [m]	String get_Server()
+ [m]	String get_Source()
+ [m]	Byte get_State()
- [m]	String ToString()

f [t] System.Data.SqlClient.SqlInfoMessageEventArgs
- [m]	Void .ctor()
+ [m]	SqlErrorCollection get_Errors()
+ [m]	String get_Message()
+ [m]	String get_Source()
+ [m]	String ToString()

f [t] System.Data.SqlClient.SqlInfoMessageEventHandler
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object,SqlInfoMessageEventArgs)
+ [m]	IAsyncResult BeginInvoke(Object,SqlInfoMessageEventArgs,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Data.SqlClient.SqlParameter
+ [m]	Void .ctor()
+ [m]	Void .ctor(String,SqlDbType)
+ [m]	Void .ctor(String,SqlDbType,Int32)
+ [m]	Void .ctor(String,SqlDbType,Int32,String)
+ [m]	Void .ctor(String,Object)
+ [m]	SqlCompareOptions get_CompareInfo()
+ [m]	Void set_CompareInfo(SqlCompareOptions)
+ [m]	DbType get_DbType()
+ [m]	Void set_DbType(DbType)
+ [m]	ParameterDirection get_Direction()
+ [m]	Void set_Direction(ParameterDirection)
+ [m]	Boolean get_IsNullable()
+ [m]	Void set_IsNullable(Boolean)
+ [m]	Int32 get_LocaleId()
+ [m]	Void set_LocaleId(Int32)
+ [m]	Int32 get_Offset()
+ [m]	Void set_Offset(Int32)
+ [m]	String get_ParameterName()
+ [m]	Void set_ParameterName(String)
+ [m]	Byte get_Precision()
+ [m]	Void set_Precision(Byte)
+ [m]	Byte get_Scale()
+ [m]	Void set_Scale(Byte)
+ [m]	Int32 get_Size()
+ [m]	Void set_Size(Int32)
+ [m]	String get_SourceColumn()
+ [m]	Void set_SourceColumn(String)
+ [m]	Boolean get_SourceColumnNullMapping()
+ [m]	Void set_SourceColumnNullMapping(Boolean)
+ [m]	SqlDbType get_SqlDbType()
+ [m]	Void set_SqlDbType(SqlDbType)
+ [m]	Object get_SqlValue()
+ [m]	Void set_SqlValue(Object)
- [m]	String get_TypeName()
- [m]	Void set_TypeName(String)
+ [m]	Object get_Value()
+ [m]	Void set_Value(Object)
+ [m]	String get_XmlSchemaCollectionDatabase()
+ [m]	Void set_XmlSchemaCollectionDatabase(String)
+ [m]	String get_XmlSchemaCollectionName()
+ [m]	Void set_XmlSchemaCollectionName(String)
+ [m]	String get_XmlSchemaCollectionOwningSchema()
+ [m]	Void set_XmlSchemaCollectionOwningSchema(String)
+ [m]	Void ResetDbType()
+ [m]	Void ResetSqlDbType()
+ [m]	String ToString()

f [t] System.Data.SqlClient.SqlParameterCollection
- [m]	Void .ctor()
+ [m]	Int32 get_Count()
+ [m]	SqlParameter get_Item(Int32)
+ [m]	Void set_Item(Int32,SqlParameter)
+ [m]	SqlParameter get_Item(String)
+ [m]	Void set_Item(String,SqlParameter)
+ [m]	Object get_SyncRoot()
+ [m]	SqlParameter Add(SqlParameter)
+ [m]	Int32 Add(Object)
+ [m]	SqlParameter Add(String,SqlDbType)
+ [m]	SqlParameter Add(String,SqlDbType,Int32)
+ [m]	Void AddRange(Array)
+ [m]	Void AddRange(SqlParameter[])
+ [m]	SqlParameter AddWithValue(String,Object)
+ [m]	Void Clear()
+ [m]	Boolean Contains(SqlParameter)
+ [m]	Boolean Contains(Object)
+ [m]	Boolean Contains(String)
+ [m]	Void CopyTo(Array,Int32)
+ [m]	Void CopyTo(SqlParameter[],Int32)
+ [m]	IEnumerator GetEnumerator()
+ [m]	DbParameter GetParameter(Int32)
+ [m]	DbParameter GetParameter(String)
+ [m]	Int32 IndexOf(SqlParameter)
+ [m]	Int32 IndexOf(Object)
+ [m]	Int32 IndexOf(String)
+ [m]	Void Insert(Int32,SqlParameter)
+ [m]	Void Insert(Int32,Object)
+ [m]	Void Remove(SqlParameter)
+ [m]	Void Remove(Object)
+ [m]	Void RemoveAt(Int32)
+ [m]	Void RemoveAt(String)
+ [m]	Void SetParameter(Int32,DbParameter)
+ [m]	Void SetParameter(String,DbParameter)

f [t] System.Data.SqlClient.SqlRowsCopiedEventArgs
+ [m]	Void .ctor(Int64)
+ [m]	Boolean get_Abort()
+ [m]	Void set_Abort(Boolean)
+ [m]	Int64 get_RowsCopied()

f [t] System.Data.SqlClient.SqlRowsCopiedEventHandler
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object,SqlRowsCopiedEventArgs)
+ [m]	IAsyncResult BeginInvoke(Object,SqlRowsCopiedEventArgs,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Data.SqlClient.SqlTransaction
- [m]	Void .ctor()
+ [m]	SqlConnection get_Connection()
+ [m]	DbConnection get_DbConnection()
+ [m]	IsolationLevel get_IsolationLevel()
+ [m]	Void Commit()
+ [m]	Void Dispose(Boolean)
+ [m]	Void Rollback()
+ [m]	Void Rollback(String)
+ [m]	Void Save(String)

f [t] Microsoft.SqlServer.Server.SqlDataRecord
- [m]	Void .ctor(SqlMetaData[])
! [m]	Int32 get_FieldCount()
! [m]	Object get_Item(Int32)
! [m]	Object get_Item(String)
! [m]	Boolean GetBoolean(Int32)
! [m]	Byte GetByte(Int32)
! [m]	Int64 GetBytes(Int32,Int64,Byte[],Int32,Int32)
! [m]	Char GetChar(Int32)
! [m]	Int64 GetChars(Int32,Int64,Char[],Int32,Int32)
! [m]	String GetDataTypeName(Int32)
! [m]	DateTime GetDateTime(Int32)
- [m]	DateTimeOffset GetDateTimeOffset(Int32)
! [m]	Decimal GetDecimal(Int32)
! [m]	Double GetDouble(Int32)
! [m]	Type GetFieldType(Int32)
! [m]	Single GetFloat(Int32)
! [m]	Guid GetGuid(Int32)
! [m]	Int16 GetInt16(Int32)
! [m]	Int32 GetInt32(Int32)
! [m]	Int64 GetInt64(Int32)
! [m]	String GetName(Int32)
! [m]	Int32 GetOrdinal(String)
- [m]	SqlBinary GetSqlBinary(Int32)
- [m]	SqlBoolean GetSqlBoolean(Int32)
- [m]	SqlByte GetSqlByte(Int32)
- [m]	SqlBytes GetSqlBytes(Int32)
- [m]	SqlChars GetSqlChars(Int32)
- [m]	SqlDateTime GetSqlDateTime(Int32)
- [m]	SqlDecimal GetSqlDecimal(Int32)
- [m]	SqlDouble GetSqlDouble(Int32)
- [m]	Type GetSqlFieldType(Int32)
- [m]	SqlGuid GetSqlGuid(Int32)
- [m]	SqlInt16 GetSqlInt16(Int32)
- [m]	SqlInt32 GetSqlInt32(Int32)
- [m]	SqlInt64 GetSqlInt64(Int32)
- [m]	SqlMetaData GetSqlMetaData(Int32)
- [m]	SqlMoney GetSqlMoney(Int32)
- [m]	SqlSingle GetSqlSingle(Int32)
- [m]	SqlString GetSqlString(Int32)
- [m]	Object GetSqlValue(Int32)
- [m]	Int32 GetSqlValues(Object[])
- [m]	SqlXml GetSqlXml(Int32)
! [m]	String GetString(Int32)
- [m]	TimeSpan GetTimeSpan(Int32)
! [m]	Object GetValue(Int32)
! [m]	Int32 GetValues(Object[])
! [m]	Boolean IsDBNull(Int32)
- [m]	Void SetBoolean(Int32,Boolean)
- [m]	Void SetByte(Int32,Byte)
- [m]	Void SetBytes(Int32,Int64,Byte[],Int32,Int32)
- [m]	Void SetChar(Int32,Char)
- [m]	Void SetChars(Int32,Int64,Char[],Int32,Int32)
- [m]	Void SetDateTime(Int32,DateTime)
- [m]	Void SetDateTimeOffset(Int32,DateTimeOffset)
- [m]	Void SetDBNull(Int32)
- [m]	Void SetDecimal(Int32,Decimal)
- [m]	Void SetDouble(Int32,Double)
- [m]	Void SetFloat(Int32,Single)
- [m]	Void SetGuid(Int32,Guid)
- [m]	Void SetInt16(Int32,Int16)
- [m]	Void SetInt32(Int32,Int32)
- [m]	Void SetInt64(Int32,Int64)
- [m]	Void SetSqlBinary(Int32,SqlBinary)
- [m]	Void SetSqlBoolean(Int32,SqlBoolean)
- [m]	Void SetSqlByte(Int32,SqlByte)
- [m]	Void SetSqlBytes(Int32,SqlBytes)
- [m]	Void SetSqlChars(Int32,SqlChars)
- [m]	Void SetSqlDateTime(Int32,SqlDateTime)
- [m]	Void SetSqlDecimal(Int32,SqlDecimal)
- [m]	Void SetSqlDouble(Int32,SqlDouble)
- [m]	Void SetSqlGuid(Int32,SqlGuid)
- [m]	Void SetSqlInt16(Int32,SqlInt16)
- [m]	Void SetSqlInt32(Int32,SqlInt32)
- [m]	Void SetSqlInt64(Int32,SqlInt64)
- [m]	Void SetSqlMoney(Int32,SqlMoney)
- [m]	Void SetSqlSingle(Int32,SqlSingle)
- [m]	Void SetSqlString(Int32,SqlString)
- [m]	Void SetSqlXml(Int32,SqlXml)
- [m]	Void SetString(Int32,String)
- [m]	Void SetTimeSpan(Int32,TimeSpan)
- [m]	Void SetValue(Int32,Object)
- [m]	Int32 SetValues(Object[])

f [t] Microsoft.SqlServer.Server.SqlMetaData
+ [m]	Void .ctor(String,SqlDbType)
- [m]	Void .ctor(String,SqlDbType,Boolean,Boolean,SortOrder,Int32)
+ [m]	Void .ctor(String,SqlDbType,Byte,Byte)
- [m]	Void .ctor(String,SqlDbType,Byte,Byte,Boolean,Boolean,SortOrder,Int32)
+ [m]	Void .ctor(String,SqlDbType,Int64)
- [m]	Void .ctor(String,SqlDbType,Int64,Boolean,Boolean,SortOrder,Int32)
+ [m]	Void .ctor(String,SqlDbType,Int64,Byte,Byte,Int64,SqlCompareOptions,Type)
- [m]	Void .ctor(String,SqlDbType,Int64,Byte,Byte,Int64,SqlCompareOptions,Type,Boolean,Boolean,SortOrder,Int32)
+ [m]	Void .ctor(String,SqlDbType,Int64,Int64,SqlCompareOptions)
- [m]	Void .ctor(String,SqlDbType,Int64,Int64,SqlCompareOptions,Boolean,Boolean,SortOrder,Int32)
+ [m]	Void .ctor(String,SqlDbType,String,String,String)
- [m]	Void .ctor(String,SqlDbType,String,String,String,Boolean,Boolean,SortOrder,Int32)
+ [m]	SqlCompareOptions get_CompareOptions()
- [m]	Boolean get_IsUniqueKey()
+ [m]	Int64 get_LocaleId()
+ [m]	Int64 get_Max()
+ [m]	Int64 get_MaxLength()
+ [m]	String get_Name()
+ [m]	Byte get_Precision()
+ [m]	Byte get_Scale()
- [m]	SortOrder get_SortOrder()
- [m]	Int32 get_SortOrdinal()
+ [m]	SqlDbType get_SqlDbType()
! [m]	String get_TypeName()
- [m]	Boolean get_UseServerDefault()
+ [m]	String get_XmlSchemaCollectionDatabase()
+ [m]	String get_XmlSchemaCollectionName()
+ [m]	String get_XmlSchemaCollectionOwningSchema()
+ [m]	Boolean Adjust(Boolean)
+ [m]	Byte Adjust(Byte)
+ [m]	Byte[] Adjust(Byte[])
+ [m]	Char Adjust(Char)
+ [m]	Char[] Adjust(Char[])
+ [m]	SqlBinary Adjust(SqlBinary)
+ [m]	SqlBoolean Adjust(SqlBoolean)
+ [m]	SqlByte Adjust(SqlByte)
+ [m]	SqlBytes Adjust(SqlBytes)
+ [m]	SqlChars Adjust(SqlChars)
+ [m]	SqlDateTime Adjust(SqlDateTime)
+ [m]	SqlDecimal Adjust(SqlDecimal)
+ [m]	SqlDouble Adjust(SqlDouble)
+ [m]	SqlGuid Adjust(SqlGuid)
+ [m]	SqlInt16 Adjust(SqlInt16)
+ [m]	SqlInt32 Adjust(SqlInt32)
+ [m]	SqlInt64 Adjust(SqlInt64)
+ [m]	SqlMoney Adjust(SqlMoney)
+ [m]	SqlSingle Adjust(SqlSingle)
+ [m]	SqlString Adjust(SqlString)
- [m]	SqlXml Adjust(SqlXml)
+ [m]	DateTime Adjust(DateTime)
- [m]	DateTimeOffset Adjust(DateTimeOffset)
+ [m]	Decimal Adjust(Decimal)
+ [m]	Double Adjust(Double)
+ [m]	Guid Adjust(Guid)
+ [m]	Int16 Adjust(Int16)
+ [m]	Int32 Adjust(Int32)
+ [m]	Int64 Adjust(Int64)
+ [m]	Object Adjust(Object)
+ [m]	Single Adjust(Single)
+ [m]	String Adjust(String)
- [m]	TimeSpan Adjust(TimeSpan)
+ [m]	SqlMetaData InferFromValue(Object,String)

---------------------------------------
+ [a] System.Diagnostics.Contracts.dll
ref: ./netstandard/packages/System.Diagnostics.Contracts/ref/netstandard1.0/System.Diagnostics.Contracts.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Diagnostics.Contracts.dll

f [t] System.Runtime.CompilerServices.ContractHelper
+ [m]	String RaiseContractFailedEvent(ContractFailureKind,String,String,Exception)
+ [m]	Void TriggerFailure(ContractFailureKind,String,String,String,Exception)

f [t] System.Diagnostics.Contracts.Contract
+ [m]	Void add_ContractFailed(EventHandler`1)
+ [m]	Void remove_ContractFailed(EventHandler`1)
+ [m]	Void Assert(Boolean)
+ [m]	Void Assert(Boolean,String)
+ [m]	Void Assume(Boolean)
+ [m]	Void Assume(Boolean,String)
+ [m]	Void EndContractBlock()
+ [m]	Void Ensures(Boolean)
+ [m]	Void Ensures(Boolean,String)
+ [m]	Void EnsuresOnThrow(Boolean)
+ [m]	Void EnsuresOnThrow(Boolean,String)
+ [m]	Boolean Exists(Int32,Int32,Predicate`1)
+ [m]	Boolean Exists(IEnumerable`1,Predicate`1)
+ [m]	Boolean ForAll(Int32,Int32,Predicate`1)
+ [m]	Boolean ForAll(IEnumerable`1,Predicate`1)
+ [m]	Void Invariant(Boolean)
+ [m]	Void Invariant(Boolean,String)
+ [m]	T OldValue(T)
+ [m]	Void Requires(Boolean)
+ [m]	Void Requires(Boolean,String)
+ [m]	Void Requires(Boolean)
+ [m]	Void Requires(Boolean,String)
+ [m]	T Result()
+ [m]	T ValueAtReturn(T&)

f [t] System.Diagnostics.Contracts.ContractAbbreviatorAttribute
+ [m]	Void .ctor()

f [t] System.Diagnostics.Contracts.ContractArgumentValidatorAttribute
+ [m]	Void .ctor()

f [t] System.Diagnostics.Contracts.ContractClassAttribute
+ [m]	Void .ctor(Type)
+ [m]	Type get_TypeContainingContracts()

f [t] System.Diagnostics.Contracts.ContractClassForAttribute
+ [m]	Void .ctor(Type)
+ [m]	Type get_TypeContractsAreFor()

f [t] System.Diagnostics.Contracts.ContractFailedEventArgs
+ [m]	Void .ctor(ContractFailureKind,String,String,Exception)
+ [m]	String get_Condition()
+ [m]	ContractFailureKind get_FailureKind()
+ [m]	Boolean get_Handled()
+ [m]	String get_Message()
+ [m]	Exception get_OriginalException()
+ [m]	Boolean get_Unwind()
+ [m]	Void SetHandled()
+ [m]	Void SetUnwind()

f [t] System.Diagnostics.Contracts.ContractFailureKind

f [t] System.Diagnostics.Contracts.ContractInvariantMethodAttribute
+ [m]	Void .ctor()

f [t] System.Diagnostics.Contracts.ContractOptionAttribute
+ [m]	Void .ctor(String,String,Boolean)
+ [m]	Void .ctor(String,String,String)
+ [m]	String get_Category()
+ [m]	Boolean get_Enabled()
+ [m]	String get_Setting()
+ [m]	String get_Value()

f [t] System.Diagnostics.Contracts.ContractPublicPropertyNameAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_Name()

f [t] System.Diagnostics.Contracts.ContractReferenceAssemblyAttribute
+ [m]	Void .ctor()

f [t] System.Diagnostics.Contracts.ContractRuntimeIgnoredAttribute
+ [m]	Void .ctor()

f [t] System.Diagnostics.Contracts.ContractVerificationAttribute
+ [m]	Void .ctor(Boolean)
+ [m]	Boolean get_Value()

f [t] System.Diagnostics.Contracts.PureAttribute
+ [m]	Void .ctor()

---------------------------------------
+ [a] System.Diagnostics.Debug.dll
ref: ./netstandard/packages/System.Diagnostics.Debug/ref/netstandard1.3/System.Diagnostics.Debug.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Diagnostics.Debug.dll

f [t] System.Diagnostics.Debug
+ [m]	Void Assert(Boolean)
+ [m]	Void Assert(Boolean,String)
+ [m]	Void Assert(Boolean,String,String)
+ [m]	Void Assert(Boolean,String,String,Object[])
+ [m]	Void Fail(String)
+ [m]	Void Fail(String,String)
+ [m]	Void Write(Object)
+ [m]	Void Write(Object,String)
+ [m]	Void Write(String)
+ [m]	Void Write(String,String)
+ [m]	Void WriteIf(Boolean,Object)
+ [m]	Void WriteIf(Boolean,Object,String)
+ [m]	Void WriteIf(Boolean,String)
+ [m]	Void WriteIf(Boolean,String,String)
+ [m]	Void WriteLine(Object)
+ [m]	Void WriteLine(Object,String)
+ [m]	Void WriteLine(String)
+ [m]	Void WriteLine(String,Object[])
+ [m]	Void WriteLine(String,String)
+ [m]	Void WriteLineIf(Boolean,Object)
+ [m]	Void WriteLineIf(Boolean,Object,String)
+ [m]	Void WriteLineIf(Boolean,String)
+ [m]	Void WriteLineIf(Boolean,String,String)

f [t] System.Diagnostics.Debugger
+ [m]	Boolean get_IsAttached()
+ [m]	Void Break()
! [m]	Boolean Launch()

f [t] System.Diagnostics.DebuggerBrowsableAttribute
+ [m]	Void .ctor(DebuggerBrowsableState)
+ [m]	DebuggerBrowsableState get_State()

f [t] System.Diagnostics.DebuggerBrowsableState

f [t] System.Diagnostics.DebuggerDisplayAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_Name()
+ [m]	Void set_Name(String)
+ [m]	Type get_Target()
+ [m]	Void set_Target(Type)
+ [m]	String get_TargetTypeName()
+ [m]	Void set_TargetTypeName(String)
+ [m]	String get_Type()
+ [m]	Void set_Type(String)
+ [m]	String get_Value()

f [t] System.Diagnostics.DebuggerHiddenAttribute
+ [m]	Void .ctor()

f [t] System.Diagnostics.DebuggerNonUserCodeAttribute
+ [m]	Void .ctor()

f [t] System.Diagnostics.DebuggerStepThroughAttribute
+ [m]	Void .ctor()

f [t] System.Diagnostics.DebuggerTypeProxyAttribute
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(Type)
+ [m]	String get_ProxyTypeName()
+ [m]	Type get_Target()
+ [m]	Void set_Target(Type)
+ [m]	String get_TargetTypeName()
+ [m]	Void set_TargetTypeName(String)

---------------------------------------
+ [a] System.Diagnostics.FileVersionInfo.dll
ref: ./netstandard/packages/System.Diagnostics.FileVersionInfo/ref/netstandard1.3/System.Diagnostics.FileVersionInfo.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Diagnostics.FileVersionInfo.dll

f [t] System.Diagnostics.FileVersionInfo
+ [m]	Void .ctor()
+ [m]	String get_Comments()
+ [m]	String get_CompanyName()
+ [m]	Int32 get_FileBuildPart()
+ [m]	String get_FileDescription()
+ [m]	Int32 get_FileMajorPart()
+ [m]	Int32 get_FileMinorPart()
+ [m]	String get_FileName()
+ [m]	Int32 get_FilePrivatePart()
+ [m]	String get_FileVersion()
+ [m]	String get_InternalName()
+ [m]	Boolean get_IsDebug()
+ [m]	Boolean get_IsPatched()
+ [m]	Boolean get_IsPreRelease()
+ [m]	Boolean get_IsPrivateBuild()
+ [m]	Boolean get_IsSpecialBuild()
+ [m]	String get_Language()
+ [m]	String get_LegalCopyright()
+ [m]	String get_LegalTrademarks()
+ [m]	String get_OriginalFilename()
+ [m]	String get_PrivateBuild()
+ [m]	Int32 get_ProductBuildPart()
+ [m]	Int32 get_ProductMajorPart()
+ [m]	Int32 get_ProductMinorPart()
+ [m]	String get_ProductName()
+ [m]	Int32 get_ProductPrivatePart()
+ [m]	String get_ProductVersion()
+ [m]	String get_SpecialBuild()
+ [m]	FileVersionInfo GetVersionInfo(String)
+ [m]	String ToString()

---------------------------------------
+ [a] System.Diagnostics.Process.dll
ref: ./netstandard/packages/System.Diagnostics.Process/ref/netstandard1.4/System.Diagnostics.Process.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Diagnostics.Process.dll

f [t] System.Diagnostics.DataReceivedEventArgs
- [m]	Void .ctor()
+ [m]	String get_Data()

f [t] System.Diagnostics.DataReceivedEventHandler
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object,DataReceivedEventArgs)
+ [m]	IAsyncResult BeginInvoke(Object,DataReceivedEventArgs,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Diagnostics.Process
+ [m]	Void .ctor()
+ [m]	Int32 get_BasePriority()
+ [m]	Boolean get_EnableRaisingEvents()
+ [m]	Void set_EnableRaisingEvents(Boolean)
+ [m]	Int32 get_ExitCode()
+ [m]	DateTime get_ExitTime()
+ [m]	Boolean get_HasExited()
+ [m]	Int32 get_Id()
+ [m]	String get_MachineName()
+ [m]	ProcessModule get_MainModule()
+ [m]	IntPtr get_MaxWorkingSet()
+ [m]	Void set_MaxWorkingSet(IntPtr)
+ [m]	IntPtr get_MinWorkingSet()
+ [m]	Void set_MinWorkingSet(IntPtr)
+ [m]	ProcessModuleCollection get_Modules()
+ [m]	Int64 get_NonpagedSystemMemorySize64()
+ [m]	Int64 get_PagedMemorySize64()
+ [m]	Int64 get_PagedSystemMemorySize64()
+ [m]	Int64 get_PeakPagedMemorySize64()
+ [m]	Int64 get_PeakVirtualMemorySize64()
+ [m]	Int64 get_PeakWorkingSet64()
+ [m]	Boolean get_PriorityBoostEnabled()
+ [m]	Void set_PriorityBoostEnabled(Boolean)
+ [m]	ProcessPriorityClass get_PriorityClass()
+ [m]	Void set_PriorityClass(ProcessPriorityClass)
+ [m]	Int64 get_PrivateMemorySize64()
+ [m]	TimeSpan get_PrivilegedProcessorTime()
+ [m]	String get_ProcessName()
+ [m]	IntPtr get_ProcessorAffinity()
+ [m]	Void set_ProcessorAffinity(IntPtr)
- [m]	SafeProcessHandle get_SafeHandle()
! [m]	Int32 get_SessionId()
+ [m]	StreamReader get_StandardError()
+ [m]	StreamWriter get_StandardInput()
+ [m]	StreamReader get_StandardOutput()
+ [m]	ProcessStartInfo get_StartInfo()
+ [m]	Void set_StartInfo(ProcessStartInfo)
+ [m]	DateTime get_StartTime()
+ [m]	ProcessThreadCollection get_Threads()
+ [m]	TimeSpan get_TotalProcessorTime()
+ [m]	TimeSpan get_UserProcessorTime()
+ [m]	Int64 get_VirtualMemorySize64()
+ [m]	Int64 get_WorkingSet64()
+ [m]	Void add_ErrorDataReceived(DataReceivedEventHandler)
+ [m]	Void remove_ErrorDataReceived(DataReceivedEventHandler)
+ [m]	Void add_Exited(EventHandler)
+ [m]	Void remove_Exited(EventHandler)
+ [m]	Void add_OutputDataReceived(DataReceivedEventHandler)
+ [m]	Void remove_OutputDataReceived(DataReceivedEventHandler)
+ [m]	Void BeginErrorReadLine()
+ [m]	Void BeginOutputReadLine()
+ [m]	Void CancelErrorRead()
+ [m]	Void CancelOutputRead()
+ [m]	Void EnterDebugMode()
+ [m]	Process GetCurrentProcess()
+ [m]	Process GetProcessById(Int32)
+ [m]	Process GetProcessById(Int32,String)
+ [m]	Process[] GetProcesses()
+ [m]	Process[] GetProcesses(String)
+ [m]	Process[] GetProcessesByName(String)
! [m]	Process[] GetProcessesByName(String,String)
+ [m]	Void Kill()
+ [m]	Void LeaveDebugMode()
+ [m]	Void OnExited()
+ [m]	Void Refresh()
+ [m]	Boolean Start()
+ [m]	Process Start(ProcessStartInfo)
+ [m]	Process Start(String)
+ [m]	Process Start(String,String)
+ [m]	Void WaitForExit()
+ [m]	Boolean WaitForExit(Int32)
- [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)

f [t] System.Diagnostics.ProcessModule
- [m]	Void .ctor()
+ [m]	IntPtr get_BaseAddress()
+ [m]	IntPtr get_EntryPointAddress()
+ [m]	String get_FileName()
+ [m]	Int32 get_ModuleMemorySize()
+ [m]	String get_ModuleName()
+ [m]	String ToString()

f [t] System.Diagnostics.ProcessModuleCollection
+ [m]	Void .ctor()
+ [m]	Void .ctor(ProcessModule[])
- [m]	ProcessModule get_Item(Int32)
- [m]	Boolean Contains(ProcessModule)
- [m]	Void CopyTo(ProcessModule[],Int32)
- [m]	Int32 IndexOf(ProcessModule)
- [m]	Int32 get_Count()
- [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
- [m]	Object System.Collections.ICollection.get_SyncRoot()
- [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
- [m]	IEnumerator GetEnumerator()

f [t] System.Diagnostics.ProcessPriorityClass

f [t] System.Diagnostics.ProcessStartInfo
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,String)
+ [m]	String get_Arguments()
+ [m]	Void set_Arguments(String)
+ [m]	Boolean get_CreateNoWindow()
+ [m]	Void set_CreateNoWindow(Boolean)
+ [m]	String get_Domain()
+ [m]	Void set_Domain(String)
- [m]	IDictionary`2 get_Environment()
+ [m]	String get_FileName()
+ [m]	Void set_FileName(String)
+ [m]	Boolean get_LoadUserProfile()
+ [m]	Void set_LoadUserProfile(Boolean)
+ [m]	Boolean get_RedirectStandardError()
+ [m]	Void set_RedirectStandardError(Boolean)
+ [m]	Boolean get_RedirectStandardInput()
+ [m]	Void set_RedirectStandardInput(Boolean)
+ [m]	Boolean get_RedirectStandardOutput()
+ [m]	Void set_RedirectStandardOutput(Boolean)
+ [m]	Encoding get_StandardErrorEncoding()
+ [m]	Void set_StandardErrorEncoding(Encoding)
+ [m]	Encoding get_StandardOutputEncoding()
+ [m]	Void set_StandardOutputEncoding(Encoding)
+ [m]	String get_UserName()
+ [m]	Void set_UserName(String)
+ [m]	Boolean get_UseShellExecute()
+ [m]	Void set_UseShellExecute(Boolean)
+ [m]	String get_WorkingDirectory()
+ [m]	Void set_WorkingDirectory(String)
- [m]	String get_PasswordInClearText()
- [m]	Void set_PasswordInClearText(String)

f [t] System.Diagnostics.ProcessThread
+ [m]	Void .ctor()
+ [m]	Int32 get_BasePriority()
+ [m]	Int32 get_CurrentPriority()
+ [m]	Int32 get_Id()
+ [m]	Void set_IdealProcessor(Int32)
+ [m]	Boolean get_PriorityBoostEnabled()
+ [m]	Void set_PriorityBoostEnabled(Boolean)
+ [m]	ThreadPriorityLevel get_PriorityLevel()
+ [m]	Void set_PriorityLevel(ThreadPriorityLevel)
+ [m]	TimeSpan get_PrivilegedProcessorTime()
+ [m]	Void set_ProcessorAffinity(IntPtr)
+ [m]	IntPtr get_StartAddress()
+ [m]	DateTime get_StartTime()
+ [m]	ThreadState get_ThreadState()
+ [m]	TimeSpan get_TotalProcessorTime()
+ [m]	TimeSpan get_UserProcessorTime()
+ [m]	ThreadWaitReason get_WaitReason()
+ [m]	Void ResetIdealProcessor()

f [t] System.Diagnostics.ProcessThreadCollection
+ [m]	Void .ctor()
+ [m]	Void .ctor(ProcessThread[])
- [m]	ProcessThread get_Item(Int32)
- [m]	Int32 Add(ProcessThread)
- [m]	Boolean Contains(ProcessThread)
- [m]	Void CopyTo(ProcessThread[],Int32)
- [m]	Int32 IndexOf(ProcessThread)
- [m]	Void Insert(Int32,ProcessThread)
- [m]	Void Remove(ProcessThread)
- [m]	Int32 get_Count()
- [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
- [m]	Object System.Collections.ICollection.get_SyncRoot()
- [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
- [m]	IEnumerator GetEnumerator()

f [t] System.Diagnostics.ThreadPriorityLevel

f [t] System.Diagnostics.ThreadState

f [t] System.Diagnostics.ThreadWaitReason

f [t] Microsoft.Win32.SafeHandles.SafeProcessHandle
+ [m]	Void .ctor(IntPtr,Boolean)
+ [m]	Boolean ReleaseHandle()
- [m]	Boolean get_IsInvalid()

---------------------------------------
+ [a] System.Diagnostics.StackTrace.dll
ref: ./netstandard/packages/System.Diagnostics.StackTrace/ref/netstandard1.3/System.Diagnostics.StackTrace.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Diagnostics.StackTrace.dll

f [t] System.Diagnostics.StackFrame
+ [m]	Void .ctor()
+ [m]	Int32 GetFileColumnNumber()
+ [m]	Int32 GetFileLineNumber()
+ [m]	String GetFileName()
+ [m]	Int32 GetILOffset()
+ [m]	MethodBase GetMethod()
+ [m]	String ToString()

+ [t] System.Diagnostics.StackFrameExtensions
- [m]	IntPtr GetNativeImageBase(StackFrame)
- [m]	IntPtr GetNativeIP(StackFrame)
! [m]	Boolean HasILOffset(StackFrame)
! [m]	Boolean HasMethod(StackFrame)
! [m]	Boolean HasNativeImage(StackFrame)
! [m]	Boolean HasSource(StackFrame)

f [t] System.Diagnostics.StackTrace
+ [m]	Void .ctor(Exception,Boolean)
+ [m]	StackFrame[] GetFrames()
+ [m]	String ToString()

---------------------------------------
+ [a] System.Diagnostics.TextWriterTraceListener.dll
ref: ./netstandard/packages/System.Diagnostics.TextWriterTraceListener/ref/netstandard1.3/System.Diagnostics.TextWriterTraceListener.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Diagnostics.TextWriterTraceListener.dll

f [t] System.Diagnostics.DelimitedListTraceListener
+ [m]	Void .ctor(Stream)
+ [m]	Void .ctor(Stream,String)
+ [m]	Void .ctor(TextWriter)
+ [m]	Void .ctor(TextWriter,String)
+ [m]	String get_Delimiter()
+ [m]	Void set_Delimiter(String)
+ [m]	Void TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
+ [m]	Void TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
+ [m]	Void TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
+ [m]	Void TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])

f [t] System.Diagnostics.TextWriterTraceListener
+ [m]	Void .ctor()
+ [m]	Void .ctor(Stream)
+ [m]	Void .ctor(Stream,String)
+ [m]	Void .ctor(TextWriter)
+ [m]	Void .ctor(TextWriter,String)
+ [m]	TextWriter get_Writer()
+ [m]	Void set_Writer(TextWriter)
+ [m]	Void Dispose(Boolean)
+ [m]	Void Flush()
+ [m]	Void Write(String)
+ [m]	Void WriteLine(String)

---------------------------------------
+ [a] System.Diagnostics.Tools.dll
ref: ./netstandard/packages/System.Diagnostics.Tools/ref/netstandard1.0/System.Diagnostics.Tools.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Diagnostics.Tools.dll

f [t] System.Diagnostics.CodeAnalysis.SuppressMessageAttribute
+ [m]	Void .ctor(String,String)
+ [m]	String get_Category()
+ [m]	String get_CheckId()
+ [m]	String get_Justification()
+ [m]	Void set_Justification(String)
+ [m]	String get_MessageId()
+ [m]	Void set_MessageId(String)
+ [m]	String get_Scope()
+ [m]	Void set_Scope(String)
+ [m]	String get_Target()
+ [m]	Void set_Target(String)

f [t] System.CodeDom.Compiler.GeneratedCodeAttribute
+ [m]	Void .ctor(String,String)
+ [m]	String get_Tool()
+ [m]	String get_Version()

---------------------------------------
+ [a] System.Diagnostics.TraceSource.dll
ref: ./netstandard/packages/System.Diagnostics.TraceSource/ref/netstandard1.3/System.Diagnostics.TraceSource.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Diagnostics.TraceSource.dll

f [t] System.Diagnostics.BooleanSwitch
+ [m]	Void .ctor(String,String)
+ [m]	Void .ctor(String,String,String)
+ [m]	Boolean get_Enabled()
+ [m]	Void set_Enabled(Boolean)
+ [m]	Void OnValueChanged()

f [t] System.Diagnostics.DefaultTraceListener
+ [m]	Void .ctor()
+ [m]	Void Fail(String)
+ [m]	Void Fail(String,String)
+ [m]	Void Write(String)
+ [m]	Void WriteLine(String)

f [t] System.Diagnostics.EventTypeFilter
+ [m]	Void .ctor(SourceLevels)
+ [m]	SourceLevels get_EventType()
+ [m]	Void set_EventType(SourceLevels)
+ [m]	Boolean ShouldTrace(TraceEventCache,String,TraceEventType,Int32,String,Object[],Object,Object[])

f [t] System.Diagnostics.SourceFilter
+ [m]	Void .ctor(String)
+ [m]	String get_Source()
+ [m]	Void set_Source(String)
+ [m]	Boolean ShouldTrace(TraceEventCache,String,TraceEventType,Int32,String,Object[],Object,Object[])

f [t] System.Diagnostics.SourceLevels

f [t] System.Diagnostics.SourceSwitch
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,String)
+ [m]	SourceLevels get_Level()
+ [m]	Void set_Level(SourceLevels)
+ [m]	Void OnValueChanged()
+ [m]	Boolean ShouldTrace(TraceEventType)

f [t] System.Diagnostics.Switch
+ [m]	Void .ctor(String,String)
+ [m]	Void .ctor(String,String,String)
+ [m]	String get_Description()
+ [m]	String get_DisplayName()
+ [m]	Int32 get_SwitchSetting()
+ [m]	Void set_SwitchSetting(Int32)
+ [m]	String get_Value()
+ [m]	Void set_Value(String)
+ [m]	Void OnSwitchSettingChanged()
+ [m]	Void OnValueChanged()

f [t] System.Diagnostics.Trace
+ [m]	Void .ctor()
+ [m]	Boolean get_AutoFlush()
+ [m]	Void set_AutoFlush(Boolean)
+ [m]	Int32 get_IndentLevel()
+ [m]	Void set_IndentLevel(Int32)
+ [m]	Int32 get_IndentSize()
+ [m]	Void set_IndentSize(Int32)
+ [m]	TraceListenerCollection get_Listeners()
+ [m]	Boolean get_UseGlobalLock()
+ [m]	Void set_UseGlobalLock(Boolean)
+ [m]	Void Assert(Boolean)
+ [m]	Void Assert(Boolean,String)
+ [m]	Void Assert(Boolean,String,String)
+ [m]	Void Close()
+ [m]	Void Fail(String)
+ [m]	Void Fail(String,String)
+ [m]	Void Flush()
+ [m]	Void Indent()
+ [m]	Void Refresh()
+ [m]	Void TraceError(String)
+ [m]	Void TraceError(String,Object[])
+ [m]	Void TraceInformation(String)
+ [m]	Void TraceInformation(String,Object[])
+ [m]	Void TraceWarning(String)
+ [m]	Void TraceWarning(String,Object[])
+ [m]	Void Unindent()
+ [m]	Void Write(Object)
+ [m]	Void Write(Object,String)
+ [m]	Void Write(String)
+ [m]	Void Write(String,String)
+ [m]	Void WriteIf(Boolean,Object)
+ [m]	Void WriteIf(Boolean,Object,String)
+ [m]	Void WriteIf(Boolean,String)
+ [m]	Void WriteIf(Boolean,String,String)
+ [m]	Void WriteLine(Object)
+ [m]	Void WriteLine(Object,String)
+ [m]	Void WriteLine(String)
+ [m]	Void WriteLine(String,String)
+ [m]	Void WriteLineIf(Boolean,Object)
+ [m]	Void WriteLineIf(Boolean,Object,String)
+ [m]	Void WriteLineIf(Boolean,String)
+ [m]	Void WriteLineIf(Boolean,String,String)

f [t] System.Diagnostics.TraceEventCache
+ [m]	Void .ctor()
+ [m]	DateTime get_DateTime()
+ [m]	Int32 get_ProcessId()
+ [m]	String get_ThreadId()
+ [m]	Int64 get_Timestamp()

f [t] System.Diagnostics.TraceEventType

f [t] System.Diagnostics.TraceFilter
+ [m]	Void .ctor()
+ [m]	Boolean ShouldTrace(TraceEventCache,String,TraceEventType,Int32,String,Object[],Object,Object[])

f [t] System.Diagnostics.TraceLevel

f [t] System.Diagnostics.TraceListener
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	TraceFilter get_Filter()
+ [m]	Void set_Filter(TraceFilter)
+ [m]	Int32 get_IndentLevel()
+ [m]	Void set_IndentLevel(Int32)
+ [m]	Int32 get_IndentSize()
+ [m]	Void set_IndentSize(Int32)
+ [m]	Boolean get_IsThreadSafe()
+ [m]	String get_Name()
+ [m]	Void set_Name(String)
+ [m]	Boolean get_NeedIndent()
+ [m]	Void set_NeedIndent(Boolean)
+ [m]	TraceOptions get_TraceOutputOptions()
+ [m]	Void set_TraceOutputOptions(TraceOptions)
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Void Fail(String)
+ [m]	Void Fail(String,String)
+ [m]	Void Flush()
+ [m]	Void TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
+ [m]	Void TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
+ [m]	Void TraceEvent(TraceEventCache,String,TraceEventType,Int32)
+ [m]	Void TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
+ [m]	Void TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
+ [m]	Void Write(Object)
+ [m]	Void Write(Object,String)
+ [m]	Void Write(String)
+ [m]	Void Write(String,String)
+ [m]	Void WriteIndent()
+ [m]	Void WriteLine(Object)
+ [m]	Void WriteLine(Object,String)
+ [m]	Void WriteLine(String)
+ [m]	Void WriteLine(String,String)

f [t] System.Diagnostics.TraceListenerCollection
+ [m]	Void .ctor()
+ [m]	Int32 get_Count()
+ [m]	TraceListener get_Item(Int32)
+ [m]	Void set_Item(Int32,TraceListener)
+ [m]	TraceListener get_Item(String)
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Boolean System.Collections.IList.get_IsFixedSize()
+ [m]	Boolean System.Collections.IList.get_IsReadOnly()
+ [m]	Object System.Collections.IList.get_Item(Int32)
+ [m]	Void System.Collections.IList.set_Item(Int32,Object)
+ [m]	Int32 Add(TraceListener)
+ [m]	Void AddRange(TraceListener[])
+ [m]	Void AddRange(TraceListenerCollection)
+ [m]	Void Clear()
+ [m]	Boolean Contains(TraceListener)
+ [m]	Void CopyTo(TraceListener[],Int32)
+ [m]	IEnumerator GetEnumerator()
+ [m]	Int32 IndexOf(TraceListener)
+ [m]	Void Insert(Int32,TraceListener)
+ [m]	Void Remove(TraceListener)
+ [m]	Void Remove(String)
+ [m]	Void RemoveAt(Int32)
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
+ [m]	Int32 System.Collections.IList.Add(Object)
+ [m]	Boolean System.Collections.IList.Contains(Object)
+ [m]	Int32 System.Collections.IList.IndexOf(Object)
+ [m]	Void System.Collections.IList.Insert(Int32,Object)
+ [m]	Void System.Collections.IList.Remove(Object)

f [t] System.Diagnostics.TraceOptions

f [t] System.Diagnostics.TraceSource
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,SourceLevels)
+ [m]	TraceListenerCollection get_Listeners()
+ [m]	String get_Name()
+ [m]	SourceSwitch get_Switch()
+ [m]	Void set_Switch(SourceSwitch)
+ [m]	Void Close()
+ [m]	Void Flush()
+ [m]	Void TraceData(TraceEventType,Int32,Object)
+ [m]	Void TraceData(TraceEventType,Int32,Object[])
+ [m]	Void TraceEvent(TraceEventType,Int32)
+ [m]	Void TraceEvent(TraceEventType,Int32,String)
+ [m]	Void TraceEvent(TraceEventType,Int32,String,Object[])
+ [m]	Void TraceInformation(String)
+ [m]	Void TraceInformation(String,Object[])

f [t] System.Diagnostics.TraceSwitch
+ [m]	Void .ctor(String,String)
+ [m]	Void .ctor(String,String,String)
+ [m]	TraceLevel get_Level()
+ [m]	Void set_Level(TraceLevel)
+ [m]	Boolean get_TraceError()
+ [m]	Boolean get_TraceInfo()
+ [m]	Boolean get_TraceVerbose()
+ [m]	Boolean get_TraceWarning()
+ [m]	Void OnSwitchSettingChanged()
+ [m]	Void OnValueChanged()

---------------------------------------
+ [a] System.Diagnostics.Tracing.dll
ref: ./netstandard/packages/System.Diagnostics.Tracing/ref/netstandard1.5/System.Diagnostics.Tracing.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Diagnostics.Tracing.dll

f [t] System.Diagnostics.Tracing.EventActivityOptions

f [t] System.Diagnostics.Tracing.EventAttribute
+ [m]	Void .ctor(Int32)
- [m]	EventActivityOptions get_ActivityOptions()
- [m]	Void set_ActivityOptions(EventActivityOptions)
- [m]	EventChannel get_Channel()
- [m]	Void set_Channel(EventChannel)
+ [m]	Int32 get_EventId()
+ [m]	EventKeywords get_Keywords()
+ [m]	Void set_Keywords(EventKeywords)
+ [m]	EventLevel get_Level()
+ [m]	Void set_Level(EventLevel)
- [m]	String get_Message()
- [m]	Void set_Message(String)
- [m]	EventOpcode get_Opcode()
- [m]	Void set_Opcode(EventOpcode)
- [m]	EventTags get_Tags()
- [m]	Void set_Tags(EventTags)
- [m]	EventTask get_Task()
- [m]	Void set_Task(EventTask)
- [m]	Byte get_Version()
- [m]	Void set_Version(Byte)

f [t] System.Diagnostics.Tracing.EventChannel

f [t] System.Diagnostics.Tracing.EventCommand

f [t] System.Diagnostics.Tracing.EventCommandEventArgs
+ [m]	Void .ctor()
! [m]	IDictionary`2 get_Arguments()
! [m]	EventCommand get_Command()
+ [m]	Boolean DisableEvent(Int32)
+ [m]	Boolean EnableEvent(Int32)

+ [t] System.Diagnostics.Tracing.EventCounter
+ [m]	Void .ctor(String,EventSource)
+ [m]	Void WriteMetric(Single)

f [t] System.Diagnostics.Tracing.EventDataAttribute
+ [m]	Void .ctor()
! [m]	String get_Name()
! [m]	Void set_Name(String)

f [t] System.Diagnostics.Tracing.EventFieldAttribute
+ [m]	Void .ctor()
! [m]	EventFieldFormat get_Format()
! [m]	Void set_Format(EventFieldFormat)
! [m]	EventFieldTags get_Tags()
! [m]	Void set_Tags(EventFieldTags)

f [t] System.Diagnostics.Tracing.EventFieldFormat

f [t] System.Diagnostics.Tracing.EventFieldTags

f [t] System.Diagnostics.Tracing.EventIgnoreAttribute
+ [m]	Void .ctor()

f [t] System.Diagnostics.Tracing.EventKeywords

f [t] System.Diagnostics.Tracing.EventLevel

f [t] System.Diagnostics.Tracing.EventListener
+ [m]	Void .ctor()
+ [m]	Void DisableEvents(EventSource)
+ [m]	Void Dispose()
+ [m]	Void EnableEvents(EventSource,EventLevel)
+ [m]	Void EnableEvents(EventSource,EventLevel,EventKeywords)
+ [m]	Void EnableEvents(EventSource,EventLevel,EventKeywords,IDictionary`2)
+ [m]	Int32 EventSourceIndex(EventSource)
+ [m]	Void OnEventSourceCreated(EventSource)
+ [m]	Void OnEventWritten(EventWrittenEventArgs)

f [t] System.Diagnostics.Tracing.EventManifestOptions

f [t] System.Diagnostics.Tracing.EventOpcode

f [t] System.Diagnostics.Tracing.EventSource
+ [m]	Void .ctor()
+ [m]	Void .ctor(Boolean)
+ [m]	Void .ctor(EventSourceSettings)
+ [m]	Void .ctor(EventSourceSettings,String[])
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,EventSourceSettings)
+ [m]	Void .ctor(String,EventSourceSettings,String[])
+ [m]	Exception get_ConstructionException()
+ [m]	Guid get_CurrentThreadActivityId()
+ [m]	Guid get_Guid()
+ [m]	String get_Name()
+ [m]	EventSourceSettings get_Settings()
- [m]	Void add_EventCommandExecuted(EventHandler`1)
- [m]	Void remove_EventCommandExecuted(EventHandler`1)
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
- [m]	Void Finalize()
- [m]	String GenerateManifest(Type,String)
- [m]	String GenerateManifest(Type,String,EventManifestOptions)
- [m]	Guid GetGuid(Type)
- [m]	String GetName(Type)
- [m]	IEnumerable`1 GetSources()
+ [m]	String GetTrait(String)
+ [m]	Boolean IsEnabled()
+ [m]	Boolean IsEnabled(EventLevel,EventKeywords)
+ [m]	Boolean IsEnabled(EventLevel,EventKeywords,EventChannel)
+ [m]	Void OnEventCommand(EventCommandEventArgs)
- [m]	Void SendCommand(EventSource,EventCommand,IDictionary`2)
- [m]	Void SetCurrentThreadActivityId(Guid)
- [m]	Void SetCurrentThreadActivityId(Guid,Guid&)
- [m]	String ToString()
+ [m]	Void Write(String)
- [m]	Void Write(String,EventSourceOptions)
+ [m]	Void Write(String,T)
+ [m]	Void Write(String,EventSourceOptions,T)
+ [m]	Void Write(String,EventSourceOptions&,T&)
+ [m]	Void Write(String,EventSourceOptions&,Guid&,Guid&,T&)
+ [m]	Void WriteEvent(Int32)
+ [m]	Void WriteEvent(Int32,Byte[])
+ [m]	Void WriteEvent(Int32,Int32)
+ [m]	Void WriteEvent(Int32,Int32,Int32)
+ [m]	Void WriteEvent(Int32,Int32,Int32,Int32)
+ [m]	Void WriteEvent(Int32,Int32,String)
+ [m]	Void WriteEvent(Int32,Int64)
+ [m]	Void WriteEvent(Int32,Int64,Byte[])
+ [m]	Void WriteEvent(Int32,Int64,Int64)
+ [m]	Void WriteEvent(Int32,Int64,Int64,Int64)
+ [m]	Void WriteEvent(Int32,Int64,String)
+ [m]	Void WriteEvent(Int32,Object[])
+ [m]	Void WriteEvent(Int32,String)
+ [m]	Void WriteEvent(Int32,String,Int32)
+ [m]	Void WriteEvent(Int32,String,Int32,Int32)
+ [m]	Void WriteEvent(Int32,String,Int64)
+ [m]	Void WriteEvent(Int32,String,String)
+ [m]	Void WriteEvent(Int32,String,String,String)
- [m]	Void WriteEventCore(Int32,Int32,EventData*)
- [m]	Void WriteEventWithRelatedActivityId(Int32,Guid,Object[])
- [m]	Void WriteEventWithRelatedActivityIdCore(Int32,Guid*,Int32,EventData*)

f [t] System.Diagnostics.Tracing.EventSourceAttribute
+ [m]	Void .ctor()
+ [m]	String get_Guid()
+ [m]	Void set_Guid(String)
+ [m]	String get_LocalizationResources()
+ [m]	Void set_LocalizationResources(String)
+ [m]	String get_Name()
+ [m]	Void set_Name(String)

f [t] System.Diagnostics.Tracing.EventSourceException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Diagnostics.Tracing.EventSourceOptions
+ [m]	EventActivityOptions get_ActivityOptions()
+ [m]	Void set_ActivityOptions(EventActivityOptions)
+ [m]	EventKeywords get_Keywords()
+ [m]	Void set_Keywords(EventKeywords)
+ [m]	EventLevel get_Level()
+ [m]	Void set_Level(EventLevel)
+ [m]	EventOpcode get_Opcode()
+ [m]	Void set_Opcode(EventOpcode)
+ [m]	EventTags get_Tags()
+ [m]	Void set_Tags(EventTags)

f [t] System.Diagnostics.Tracing.EventSourceSettings

f [t] System.Diagnostics.Tracing.EventTags

f [t] System.Diagnostics.Tracing.EventTask

f [t] System.Diagnostics.Tracing.EventWrittenEventArgs
- [m]	Void .ctor()
+ [m]	Guid get_ActivityId()
+ [m]	EventChannel get_Channel()
+ [m]	Int32 get_EventId()
+ [m]	String get_EventName()
+ [m]	EventSource get_EventSource()
+ [m]	EventKeywords get_Keywords()
+ [m]	EventLevel get_Level()
+ [m]	String get_Message()
+ [m]	EventOpcode get_Opcode()
+ [m]	ReadOnlyCollection`1 get_Payload()
+ [m]	ReadOnlyCollection`1 get_PayloadNames()
+ [m]	Guid get_RelatedActivityId()
+ [m]	EventTags get_Tags()
+ [m]	EventTask get_Task()
+ [m]	Byte get_Version()

f [t] System.Diagnostics.Tracing.NonEventAttribute
+ [m]	Void .ctor()

---------------------------------------
- [a] System.Drawing.Primitives.dll
---------------------------------------
+ [a] System.Dynamic.Runtime.dll
ref: ./netstandard/packages/System.Dynamic.Runtime/ref/netstandard1.3/System.Dynamic.Runtime.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Dynamic.Runtime.dll

f [t] System.Runtime.CompilerServices.CallSite
- [m]	Void .ctor()
+ [m]	CallSiteBinder get_Binder()
+ [m]	CallSite Create(Type,CallSiteBinder)

f [t] System.Runtime.CompilerServices.CallSite`1
+ [m]	Void .ctor()
+ [m]	T get_Update()
+ [m]	CallSite`1 Create(CallSiteBinder)

f [t] System.Runtime.CompilerServices.CallSiteBinder
+ [m]	Void .ctor()
+ [m]	LabelTarget get_UpdateLabel()
+ [m]	Expression Bind(Object[],ReadOnlyCollection`1,LabelTarget)
+ [m]	T BindDelegate(CallSite`1,Object[])
+ [m]	Void CacheTarget(T)

f [t] System.Runtime.CompilerServices.CallSiteHelpers
+ [m]	Boolean IsInternalFrame(MethodBase)

f [t] System.Runtime.CompilerServices.DynamicAttribute
+ [m]	Void .ctor()
+ [m]	Void .ctor(Boolean[])
+ [m]	IList`1 get_TransformFlags()

f [t] System.Linq.Expressions.DynamicExpression
- [m]	Void .ctor()
+ [m]	ReadOnlyCollection`1 get_Arguments()
+ [m]	CallSiteBinder get_Binder()
+ [m]	Type get_DelegateType()
+ [m]	ExpressionType get_NodeType()
+ [m]	Int32 System.Linq.Expressions.IArgumentProvider.get_ArgumentCount()
+ [m]	Type get_Type()
+ [m]	Expression Accept(ExpressionVisitor)
+ [m]	DynamicExpression Dynamic(CallSiteBinder,Type,IEnumerable`1)
+ [m]	DynamicExpression Dynamic(CallSiteBinder,Type,Expression)
+ [m]	DynamicExpression Dynamic(CallSiteBinder,Type,Expression,Expression)
+ [m]	DynamicExpression Dynamic(CallSiteBinder,Type,Expression,Expression,Expression)
+ [m]	DynamicExpression Dynamic(CallSiteBinder,Type,Expression,Expression,Expression,Expression)
+ [m]	DynamicExpression Dynamic(CallSiteBinder,Type,Expression[])
+ [m]	DynamicExpression MakeDynamic(Type,CallSiteBinder,IEnumerable`1)
+ [m]	DynamicExpression MakeDynamic(Type,CallSiteBinder,Expression)
+ [m]	DynamicExpression MakeDynamic(Type,CallSiteBinder,Expression,Expression)
+ [m]	DynamicExpression MakeDynamic(Type,CallSiteBinder,Expression,Expression,Expression)
+ [m]	DynamicExpression MakeDynamic(Type,CallSiteBinder,Expression,Expression,Expression,Expression)
+ [m]	DynamicExpression MakeDynamic(Type,CallSiteBinder,Expression[])
+ [m]	Expression System.Linq.Expressions.IArgumentProvider.GetArgument(Int32)
+ [m]	Object System.Linq.Expressions.IDynamicExpression.CreateCallSite()
+ [m]	Expression System.Linq.Expressions.IDynamicExpression.Rewrite(Expression[])
+ [m]	DynamicExpression Update(IEnumerable`1)

f [t] System.Linq.Expressions.DynamicExpressionVisitor
+ [m]	Void .ctor()
+ [m]	Expression VisitDynamic(DynamicExpression)

f [t] System.Dynamic.BinaryOperationBinder
+ [m]	Void .ctor(ExpressionType)
+ [m]	ExpressionType get_Operation()
+ [m]	Type get_ReturnType()
+ [m]	DynamicMetaObject Bind(DynamicMetaObject,DynamicMetaObject[])
+ [m]	DynamicMetaObject FallbackBinaryOperation(DynamicMetaObject,DynamicMetaObject)
+ [m]	DynamicMetaObject FallbackBinaryOperation(DynamicMetaObject,DynamicMetaObject,DynamicMetaObject)

f [t] System.Dynamic.BindingRestrictions
+ [m]	Void .ctor()
+ [m]	BindingRestrictions Combine(IList`1)
+ [m]	BindingRestrictions GetExpressionRestriction(Expression)
+ [m]	BindingRestrictions GetInstanceRestriction(Expression,Object)
+ [m]	BindingRestrictions GetTypeRestriction(Expression,Type)
+ [m]	BindingRestrictions Merge(BindingRestrictions)
+ [m]	Expression ToExpression()

f [t] System.Dynamic.CallInfo
+ [m]	Void .ctor(Int32,IEnumerable`1)
+ [m]	Void .ctor(Int32,String[])
+ [m]	Int32 get_ArgumentCount()
+ [m]	ReadOnlyCollection`1 get_ArgumentNames()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()

f [t] System.Dynamic.ConvertBinder
+ [m]	Void .ctor(Type,Boolean)
+ [m]	Boolean get_Explicit()
+ [m]	Type get_ReturnType()
+ [m]	Type get_Type()
+ [m]	DynamicMetaObject Bind(DynamicMetaObject,DynamicMetaObject[])
+ [m]	DynamicMetaObject FallbackConvert(DynamicMetaObject)
+ [m]	DynamicMetaObject FallbackConvert(DynamicMetaObject,DynamicMetaObject)

f [t] System.Dynamic.CreateInstanceBinder
+ [m]	Void .ctor(CallInfo)
+ [m]	CallInfo get_CallInfo()
+ [m]	Type get_ReturnType()
+ [m]	DynamicMetaObject Bind(DynamicMetaObject,DynamicMetaObject[])
+ [m]	DynamicMetaObject FallbackCreateInstance(DynamicMetaObject,DynamicMetaObject[])
+ [m]	DynamicMetaObject FallbackCreateInstance(DynamicMetaObject,DynamicMetaObject[],DynamicMetaObject)

f [t] System.Dynamic.DeleteIndexBinder
+ [m]	Void .ctor(CallInfo)
+ [m]	CallInfo get_CallInfo()
+ [m]	Type get_ReturnType()
+ [m]	DynamicMetaObject Bind(DynamicMetaObject,DynamicMetaObject[])
+ [m]	DynamicMetaObject FallbackDeleteIndex(DynamicMetaObject,DynamicMetaObject[])
+ [m]	DynamicMetaObject FallbackDeleteIndex(DynamicMetaObject,DynamicMetaObject[],DynamicMetaObject)

f [t] System.Dynamic.DeleteMemberBinder
+ [m]	Void .ctor(String,Boolean)
+ [m]	Boolean get_IgnoreCase()
+ [m]	String get_Name()
+ [m]	Type get_ReturnType()
+ [m]	DynamicMetaObject Bind(DynamicMetaObject,DynamicMetaObject[])
+ [m]	DynamicMetaObject FallbackDeleteMember(DynamicMetaObject)
+ [m]	DynamicMetaObject FallbackDeleteMember(DynamicMetaObject,DynamicMetaObject)

f [t] System.Dynamic.DynamicMetaObject
+ [m]	Void .ctor(Expression,BindingRestrictions)
+ [m]	Void .ctor(Expression,BindingRestrictions,Object)
+ [m]	Expression get_Expression()
+ [m]	Boolean get_HasValue()
+ [m]	Type get_LimitType()
+ [m]	BindingRestrictions get_Restrictions()
+ [m]	Type get_RuntimeType()
+ [m]	Object get_Value()
+ [m]	DynamicMetaObject BindBinaryOperation(BinaryOperationBinder,DynamicMetaObject)
+ [m]	DynamicMetaObject BindConvert(ConvertBinder)
+ [m]	DynamicMetaObject BindCreateInstance(CreateInstanceBinder,DynamicMetaObject[])
+ [m]	DynamicMetaObject BindDeleteIndex(DeleteIndexBinder,DynamicMetaObject[])
+ [m]	DynamicMetaObject BindDeleteMember(DeleteMemberBinder)
+ [m]	DynamicMetaObject BindGetIndex(GetIndexBinder,DynamicMetaObject[])
+ [m]	DynamicMetaObject BindGetMember(GetMemberBinder)
+ [m]	DynamicMetaObject BindInvoke(InvokeBinder,DynamicMetaObject[])
+ [m]	DynamicMetaObject BindInvokeMember(InvokeMemberBinder,DynamicMetaObject[])
+ [m]	DynamicMetaObject BindSetIndex(SetIndexBinder,DynamicMetaObject[],DynamicMetaObject)
+ [m]	DynamicMetaObject BindSetMember(SetMemberBinder,DynamicMetaObject)
+ [m]	DynamicMetaObject BindUnaryOperation(UnaryOperationBinder)
+ [m]	DynamicMetaObject Create(Object,Expression)
+ [m]	IEnumerable`1 GetDynamicMemberNames()

f [t] System.Dynamic.DynamicMetaObjectBinder
+ [m]	Void .ctor()
+ [m]	Type get_ReturnType()
+ [m]	DynamicMetaObject Bind(DynamicMetaObject,DynamicMetaObject[])
+ [m]	Expression Bind(Object[],ReadOnlyCollection`1,LabelTarget)
+ [m]	DynamicMetaObject Defer(DynamicMetaObject,DynamicMetaObject[])
+ [m]	DynamicMetaObject Defer(DynamicMetaObject[])
+ [m]	Expression GetUpdateExpression(Type)

f [t] System.Dynamic.DynamicObject
+ [m]	Void .ctor()
+ [m]	IEnumerable`1 GetDynamicMemberNames()
+ [m]	DynamicMetaObject GetMetaObject(Expression)
+ [m]	Boolean TryBinaryOperation(BinaryOperationBinder,Object,Object&)
+ [m]	Boolean TryConvert(ConvertBinder,Object&)
+ [m]	Boolean TryCreateInstance(CreateInstanceBinder,Object[],Object&)
+ [m]	Boolean TryDeleteIndex(DeleteIndexBinder,Object[])
+ [m]	Boolean TryDeleteMember(DeleteMemberBinder)
+ [m]	Boolean TryGetIndex(GetIndexBinder,Object[],Object&)
+ [m]	Boolean TryGetMember(GetMemberBinder,Object&)
+ [m]	Boolean TryInvoke(InvokeBinder,Object[],Object&)
+ [m]	Boolean TryInvokeMember(InvokeMemberBinder,Object[],Object&)
+ [m]	Boolean TrySetIndex(SetIndexBinder,Object[],Object)
+ [m]	Boolean TrySetMember(SetMemberBinder,Object)
+ [m]	Boolean TryUnaryOperation(UnaryOperationBinder,Object&)

f [t] System.Dynamic.ExpandoObject
+ [m]	Void .ctor()
- [m]	Int32 System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.get_Count()
- [m]	Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.get_IsReadOnly()
- [m]	Object System.Collections.Generic.IDictionary<System.String,System.Object>.get_Item(String)
- [m]	Void System.Collections.Generic.IDictionary<System.String,System.Object>.set_Item(String,Object)
- [m]	ICollection`1 System.Collections.Generic.IDictionary<System.String,System.Object>.get_Keys()
- [m]	ICollection`1 System.Collections.Generic.IDictionary<System.String,System.Object>.get_Values()
+ [m]	Void System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(PropertyChangedEventHandler)
+ [m]	Void System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(PropertyChangedEventHandler)
- [m]	Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Add(KeyValuePair`2)
- [m]	Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Clear()
- [m]	Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Contains(KeyValuePair`2)
- [m]	Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.CopyTo(KeyValuePair`2[],Int32)
- [m]	Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Remove(KeyValuePair`2)
- [m]	Void System.Collections.Generic.IDictionary<System.String,System.Object>.Add(String,Object)
- [m]	Boolean System.Collections.Generic.IDictionary<System.String,System.Object>.ContainsKey(String)
- [m]	Boolean System.Collections.Generic.IDictionary<System.String,System.Object>.Remove(String)
- [m]	Boolean System.Collections.Generic.IDictionary<System.String,System.Object>.TryGetValue(String,Object&)
- [m]	IEnumerator`1 System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator()
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	DynamicMetaObject System.Dynamic.IDynamicMetaObjectProvider.GetMetaObject(Expression)

f [t] System.Dynamic.GetIndexBinder
+ [m]	Void .ctor(CallInfo)
+ [m]	CallInfo get_CallInfo()
+ [m]	Type get_ReturnType()
+ [m]	DynamicMetaObject Bind(DynamicMetaObject,DynamicMetaObject[])
+ [m]	DynamicMetaObject FallbackGetIndex(DynamicMetaObject,DynamicMetaObject[])
+ [m]	DynamicMetaObject FallbackGetIndex(DynamicMetaObject,DynamicMetaObject[],DynamicMetaObject)

f [t] System.Dynamic.GetMemberBinder
+ [m]	Void .ctor(String,Boolean)
+ [m]	Boolean get_IgnoreCase()
+ [m]	String get_Name()
+ [m]	Type get_ReturnType()
+ [m]	DynamicMetaObject Bind(DynamicMetaObject,DynamicMetaObject[])
+ [m]	DynamicMetaObject FallbackGetMember(DynamicMetaObject)
+ [m]	DynamicMetaObject FallbackGetMember(DynamicMetaObject,DynamicMetaObject)

f [t] System.Dynamic.IDynamicMetaObjectProvider
+ [m]	DynamicMetaObject GetMetaObject(Expression)

f [t] System.Dynamic.IInvokeOnGetBinder
+ [m]	Boolean get_InvokeOnGet()

f [t] System.Dynamic.InvokeBinder
+ [m]	Void .ctor(CallInfo)
+ [m]	CallInfo get_CallInfo()
+ [m]	Type get_ReturnType()
+ [m]	DynamicMetaObject Bind(DynamicMetaObject,DynamicMetaObject[])
+ [m]	DynamicMetaObject FallbackInvoke(DynamicMetaObject,DynamicMetaObject[])
+ [m]	DynamicMetaObject FallbackInvoke(DynamicMetaObject,DynamicMetaObject[],DynamicMetaObject)

f [t] System.Dynamic.InvokeMemberBinder
+ [m]	Void .ctor(String,Boolean,CallInfo)
+ [m]	CallInfo get_CallInfo()
+ [m]	Boolean get_IgnoreCase()
+ [m]	String get_Name()
+ [m]	Type get_ReturnType()
+ [m]	DynamicMetaObject Bind(DynamicMetaObject,DynamicMetaObject[])
+ [m]	DynamicMetaObject FallbackInvoke(DynamicMetaObject,DynamicMetaObject[],DynamicMetaObject)
+ [m]	DynamicMetaObject FallbackInvokeMember(DynamicMetaObject,DynamicMetaObject[])
+ [m]	DynamicMetaObject FallbackInvokeMember(DynamicMetaObject,DynamicMetaObject[],DynamicMetaObject)

f [t] System.Dynamic.SetIndexBinder
+ [m]	Void .ctor(CallInfo)
+ [m]	CallInfo get_CallInfo()
+ [m]	Type get_ReturnType()
+ [m]	DynamicMetaObject Bind(DynamicMetaObject,DynamicMetaObject[])
+ [m]	DynamicMetaObject FallbackSetIndex(DynamicMetaObject,DynamicMetaObject[],DynamicMetaObject)
+ [m]	DynamicMetaObject FallbackSetIndex(DynamicMetaObject,DynamicMetaObject[],DynamicMetaObject,DynamicMetaObject)

f [t] System.Dynamic.SetMemberBinder
+ [m]	Void .ctor(String,Boolean)
+ [m]	Boolean get_IgnoreCase()
+ [m]	String get_Name()
+ [m]	Type get_ReturnType()
+ [m]	DynamicMetaObject Bind(DynamicMetaObject,DynamicMetaObject[])
+ [m]	DynamicMetaObject FallbackSetMember(DynamicMetaObject,DynamicMetaObject)
+ [m]	DynamicMetaObject FallbackSetMember(DynamicMetaObject,DynamicMetaObject,DynamicMetaObject)

f [t] System.Dynamic.UnaryOperationBinder
+ [m]	Void .ctor(ExpressionType)
+ [m]	ExpressionType get_Operation()
+ [m]	Type get_ReturnType()
+ [m]	DynamicMetaObject Bind(DynamicMetaObject,DynamicMetaObject[])
+ [m]	DynamicMetaObject FallbackUnaryOperation(DynamicMetaObject)
+ [m]	DynamicMetaObject FallbackUnaryOperation(DynamicMetaObject,DynamicMetaObject)

---------------------------------------
+ [a] System.Globalization.dll
ref: ./netstandard/packages/System.Globalization/ref/netstandard1.3/System.Globalization.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Globalization.dll

f [t] System.Globalization.Calendar
+ [m]	Void .ctor()
+ [m]	Int32[] get_Eras()
+ [m]	Boolean get_IsReadOnly()
+ [m]	DateTime get_MaxSupportedDateTime()
+ [m]	DateTime get_MinSupportedDateTime()
+ [m]	Int32 get_TwoDigitYearMax()
+ [m]	Void set_TwoDigitYearMax(Int32)
+ [m]	DateTime AddDays(DateTime,Int32)
+ [m]	DateTime AddHours(DateTime,Int32)
+ [m]	DateTime AddMilliseconds(DateTime,Double)
+ [m]	DateTime AddMinutes(DateTime,Int32)
+ [m]	DateTime AddMonths(DateTime,Int32)
+ [m]	DateTime AddSeconds(DateTime,Int32)
+ [m]	DateTime AddWeeks(DateTime,Int32)
+ [m]	DateTime AddYears(DateTime,Int32)
+ [m]	Int32 GetDayOfMonth(DateTime)
+ [m]	DayOfWeek GetDayOfWeek(DateTime)
+ [m]	Int32 GetDayOfYear(DateTime)
+ [m]	Int32 GetDaysInMonth(Int32,Int32)
+ [m]	Int32 GetDaysInMonth(Int32,Int32,Int32)
+ [m]	Int32 GetDaysInYear(Int32)
+ [m]	Int32 GetDaysInYear(Int32,Int32)
+ [m]	Int32 GetEra(DateTime)
+ [m]	Int32 GetHour(DateTime)
+ [m]	Int32 GetLeapMonth(Int32,Int32)
+ [m]	Double GetMilliseconds(DateTime)
+ [m]	Int32 GetMinute(DateTime)
+ [m]	Int32 GetMonth(DateTime)
+ [m]	Int32 GetMonthsInYear(Int32)
+ [m]	Int32 GetMonthsInYear(Int32,Int32)
+ [m]	Int32 GetSecond(DateTime)
+ [m]	Int32 GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
+ [m]	Int32 GetYear(DateTime)
+ [m]	Boolean IsLeapDay(Int32,Int32,Int32)
+ [m]	Boolean IsLeapDay(Int32,Int32,Int32,Int32)
+ [m]	Boolean IsLeapMonth(Int32,Int32)
+ [m]	Boolean IsLeapMonth(Int32,Int32,Int32)
+ [m]	Boolean IsLeapYear(Int32)
+ [m]	Boolean IsLeapYear(Int32,Int32)
+ [m]	DateTime ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32)
+ [m]	DateTime ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
+ [m]	Int32 ToFourDigitYear(Int32)

f [t] System.Globalization.CalendarWeekRule

f [t] System.Globalization.CharUnicodeInfo
+ [m]	Double GetNumericValue(Char)
+ [m]	Double GetNumericValue(String,Int32)
+ [m]	UnicodeCategory GetUnicodeCategory(Char)
+ [m]	UnicodeCategory GetUnicodeCategory(String,Int32)

f [t] System.Globalization.CompareInfo
- [m]	Void .ctor()
+ [m]	String get_Name()
+ [m]	Int32 Compare(String,Int32,Int32,String,Int32,Int32)
+ [m]	Int32 Compare(String,Int32,Int32,String,Int32,Int32,CompareOptions)
+ [m]	Int32 Compare(String,Int32,String,Int32)
+ [m]	Int32 Compare(String,Int32,String,Int32,CompareOptions)
+ [m]	Int32 Compare(String,String)
+ [m]	Int32 Compare(String,String,CompareOptions)
+ [m]	Boolean Equals(Object)
+ [m]	CompareInfo GetCompareInfo(String)
+ [m]	Int32 GetHashCode()
+ [m]	Int32 GetHashCode(String,CompareOptions)
+ [m]	Int32 IndexOf(String,Char)
+ [m]	Int32 IndexOf(String,Char,CompareOptions)
+ [m]	Int32 IndexOf(String,Char,Int32,CompareOptions)
+ [m]	Int32 IndexOf(String,Char,Int32,Int32)
+ [m]	Int32 IndexOf(String,Char,Int32,Int32,CompareOptions)
+ [m]	Int32 IndexOf(String,String)
+ [m]	Int32 IndexOf(String,String,CompareOptions)
+ [m]	Int32 IndexOf(String,String,Int32,CompareOptions)
+ [m]	Int32 IndexOf(String,String,Int32,Int32)
+ [m]	Int32 IndexOf(String,String,Int32,Int32,CompareOptions)
+ [m]	Boolean IsPrefix(String,String)
+ [m]	Boolean IsPrefix(String,String,CompareOptions)
+ [m]	Boolean IsSuffix(String,String)
+ [m]	Boolean IsSuffix(String,String,CompareOptions)
+ [m]	Int32 LastIndexOf(String,Char)
+ [m]	Int32 LastIndexOf(String,Char,CompareOptions)
+ [m]	Int32 LastIndexOf(String,Char,Int32,CompareOptions)
+ [m]	Int32 LastIndexOf(String,Char,Int32,Int32)
+ [m]	Int32 LastIndexOf(String,Char,Int32,Int32,CompareOptions)
+ [m]	Int32 LastIndexOf(String,String)
+ [m]	Int32 LastIndexOf(String,String,CompareOptions)
+ [m]	Int32 LastIndexOf(String,String,Int32,CompareOptions)
+ [m]	Int32 LastIndexOf(String,String,Int32,Int32)
+ [m]	Int32 LastIndexOf(String,String,Int32,Int32,CompareOptions)
+ [m]	String ToString()

f [t] System.Globalization.CompareOptions

f [t] System.Globalization.CultureInfo
+ [m]	Void .ctor(String)
+ [m]	Calendar get_Calendar()
+ [m]	CompareInfo get_CompareInfo()
+ [m]	CultureInfo get_CurrentCulture()
! [m]	Void set_CurrentCulture(CultureInfo)
+ [m]	CultureInfo get_CurrentUICulture()
! [m]	Void set_CurrentUICulture(CultureInfo)
+ [m]	DateTimeFormatInfo get_DateTimeFormat()
+ [m]	Void set_DateTimeFormat(DateTimeFormatInfo)
+ [m]	CultureInfo get_DefaultThreadCurrentCulture()
+ [m]	Void set_DefaultThreadCurrentCulture(CultureInfo)
+ [m]	CultureInfo get_DefaultThreadCurrentUICulture()
+ [m]	Void set_DefaultThreadCurrentUICulture(CultureInfo)
+ [m]	String get_DisplayName()
+ [m]	String get_EnglishName()
+ [m]	CultureInfo get_InvariantCulture()
+ [m]	Boolean get_IsNeutralCulture()
+ [m]	Boolean get_IsReadOnly()
+ [m]	String get_Name()
+ [m]	String get_NativeName()
+ [m]	NumberFormatInfo get_NumberFormat()
+ [m]	Void set_NumberFormat(NumberFormatInfo)
+ [m]	Calendar[] get_OptionalCalendars()
+ [m]	CultureInfo get_Parent()
+ [m]	TextInfo get_TextInfo()
+ [m]	String get_TwoLetterISOLanguageName()
+ [m]	Object Clone()
+ [m]	Boolean Equals(Object)
+ [m]	Object GetFormat(Type)
+ [m]	Int32 GetHashCode()
+ [m]	CultureInfo ReadOnly(CultureInfo)
+ [m]	String ToString()

f [t] System.Globalization.CultureNotFoundException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	Void .ctor(String,String)
+ [m]	Void .ctor(String,String,Exception)
+ [m]	Void .ctor(String,String,String)
+ [m]	String get_InvalidCultureName()
+ [m]	String get_Message()

f [t] System.Globalization.DateTimeFormatInfo
+ [m]	Void .ctor()
+ [m]	String[] get_AbbreviatedDayNames()
+ [m]	Void set_AbbreviatedDayNames(String[])
+ [m]	String[] get_AbbreviatedMonthGenitiveNames()
+ [m]	Void set_AbbreviatedMonthGenitiveNames(String[])
+ [m]	String[] get_AbbreviatedMonthNames()
+ [m]	Void set_AbbreviatedMonthNames(String[])
+ [m]	String get_AMDesignator()
+ [m]	Void set_AMDesignator(String)
+ [m]	Calendar get_Calendar()
+ [m]	Void set_Calendar(Calendar)
+ [m]	CalendarWeekRule get_CalendarWeekRule()
+ [m]	Void set_CalendarWeekRule(CalendarWeekRule)
+ [m]	DateTimeFormatInfo get_CurrentInfo()
+ [m]	String[] get_DayNames()
+ [m]	Void set_DayNames(String[])
+ [m]	DayOfWeek get_FirstDayOfWeek()
+ [m]	Void set_FirstDayOfWeek(DayOfWeek)
+ [m]	String get_FullDateTimePattern()
+ [m]	Void set_FullDateTimePattern(String)
+ [m]	DateTimeFormatInfo get_InvariantInfo()
+ [m]	Boolean get_IsReadOnly()
+ [m]	String get_LongDatePattern()
+ [m]	Void set_LongDatePattern(String)
+ [m]	String get_LongTimePattern()
+ [m]	Void set_LongTimePattern(String)
+ [m]	String get_MonthDayPattern()
+ [m]	Void set_MonthDayPattern(String)
+ [m]	String[] get_MonthGenitiveNames()
+ [m]	Void set_MonthGenitiveNames(String[])
+ [m]	String[] get_MonthNames()
+ [m]	Void set_MonthNames(String[])
+ [m]	String get_PMDesignator()
+ [m]	Void set_PMDesignator(String)
+ [m]	String get_RFC1123Pattern()
+ [m]	String get_ShortDatePattern()
+ [m]	Void set_ShortDatePattern(String)
+ [m]	String[] get_ShortestDayNames()
+ [m]	Void set_ShortestDayNames(String[])
+ [m]	String get_ShortTimePattern()
+ [m]	Void set_ShortTimePattern(String)
+ [m]	String get_SortableDateTimePattern()
+ [m]	String get_UniversalSortableDateTimePattern()
+ [m]	String get_YearMonthPattern()
+ [m]	Void set_YearMonthPattern(String)
+ [m]	Object Clone()
+ [m]	String GetAbbreviatedDayName(DayOfWeek)
+ [m]	String GetAbbreviatedEraName(Int32)
+ [m]	String GetAbbreviatedMonthName(Int32)
+ [m]	String GetDayName(DayOfWeek)
+ [m]	Int32 GetEra(String)
+ [m]	String GetEraName(Int32)
+ [m]	Object GetFormat(Type)
+ [m]	DateTimeFormatInfo GetInstance(IFormatProvider)
+ [m]	String GetMonthName(Int32)
+ [m]	DateTimeFormatInfo ReadOnly(DateTimeFormatInfo)

f [t] System.Globalization.NumberFormatInfo
+ [m]	Void .ctor()
+ [m]	Int32 get_CurrencyDecimalDigits()
+ [m]	Void set_CurrencyDecimalDigits(Int32)
+ [m]	String get_CurrencyDecimalSeparator()
+ [m]	Void set_CurrencyDecimalSeparator(String)
+ [m]	String get_CurrencyGroupSeparator()
+ [m]	Void set_CurrencyGroupSeparator(String)
+ [m]	Int32[] get_CurrencyGroupSizes()
+ [m]	Void set_CurrencyGroupSizes(Int32[])
+ [m]	Int32 get_CurrencyNegativePattern()
+ [m]	Void set_CurrencyNegativePattern(Int32)
+ [m]	Int32 get_CurrencyPositivePattern()
+ [m]	Void set_CurrencyPositivePattern(Int32)
+ [m]	String get_CurrencySymbol()
+ [m]	Void set_CurrencySymbol(String)
+ [m]	NumberFormatInfo get_CurrentInfo()
+ [m]	NumberFormatInfo get_InvariantInfo()
+ [m]	Boolean get_IsReadOnly()
+ [m]	String get_NaNSymbol()
+ [m]	Void set_NaNSymbol(String)
+ [m]	String get_NegativeInfinitySymbol()
+ [m]	Void set_NegativeInfinitySymbol(String)
+ [m]	String get_NegativeSign()
+ [m]	Void set_NegativeSign(String)
+ [m]	Int32 get_NumberDecimalDigits()
+ [m]	Void set_NumberDecimalDigits(Int32)
+ [m]	String get_NumberDecimalSeparator()
+ [m]	Void set_NumberDecimalSeparator(String)
+ [m]	String get_NumberGroupSeparator()
+ [m]	Void set_NumberGroupSeparator(String)
+ [m]	Int32[] get_NumberGroupSizes()
+ [m]	Void set_NumberGroupSizes(Int32[])
+ [m]	Int32 get_NumberNegativePattern()
+ [m]	Void set_NumberNegativePattern(Int32)
+ [m]	Int32 get_PercentDecimalDigits()
+ [m]	Void set_PercentDecimalDigits(Int32)
+ [m]	String get_PercentDecimalSeparator()
+ [m]	Void set_PercentDecimalSeparator(String)
+ [m]	String get_PercentGroupSeparator()
+ [m]	Void set_PercentGroupSeparator(String)
+ [m]	Int32[] get_PercentGroupSizes()
+ [m]	Void set_PercentGroupSizes(Int32[])
+ [m]	Int32 get_PercentNegativePattern()
+ [m]	Void set_PercentNegativePattern(Int32)
+ [m]	Int32 get_PercentPositivePattern()
+ [m]	Void set_PercentPositivePattern(Int32)
+ [m]	String get_PercentSymbol()
+ [m]	Void set_PercentSymbol(String)
+ [m]	String get_PerMilleSymbol()
+ [m]	Void set_PerMilleSymbol(String)
+ [m]	String get_PositiveInfinitySymbol()
+ [m]	Void set_PositiveInfinitySymbol(String)
+ [m]	String get_PositiveSign()
+ [m]	Void set_PositiveSign(String)
+ [m]	Object Clone()
+ [m]	Object GetFormat(Type)
+ [m]	NumberFormatInfo GetInstance(IFormatProvider)
+ [m]	NumberFormatInfo ReadOnly(NumberFormatInfo)

f [t] System.Globalization.RegionInfo
+ [m]	Void .ctor(String)
+ [m]	String get_CurrencySymbol()
+ [m]	RegionInfo get_CurrentRegion()
+ [m]	String get_DisplayName()
+ [m]	String get_EnglishName()
+ [m]	Boolean get_IsMetric()
+ [m]	String get_ISOCurrencySymbol()
+ [m]	String get_Name()
+ [m]	String get_NativeName()
+ [m]	String get_TwoLetterISORegionName()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	String ToString()

f [t] System.Globalization.StringInfo
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Int32 get_LengthInTextElements()
+ [m]	String get_String()
+ [m]	Void set_String(String)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	String GetNextTextElement(String)
+ [m]	String GetNextTextElement(String,Int32)
+ [m]	TextElementEnumerator GetTextElementEnumerator(String)
+ [m]	TextElementEnumerator GetTextElementEnumerator(String,Int32)
+ [m]	Int32[] ParseCombiningCharacters(String)

f [t] System.Globalization.TextElementEnumerator
- [m]	Void .ctor()
+ [m]	Object get_Current()
+ [m]	Int32 get_ElementIndex()
+ [m]	String GetTextElement()
+ [m]	Boolean MoveNext()
+ [m]	Void Reset()

f [t] System.Globalization.TextInfo
- [m]	Void .ctor()
+ [m]	String get_CultureName()
+ [m]	Boolean get_IsReadOnly()
+ [m]	Boolean get_IsRightToLeft()
+ [m]	String get_ListSeparator()
+ [m]	Void set_ListSeparator(String)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Char ToLower(Char)
+ [m]	String ToLower(String)
+ [m]	String ToString()
+ [m]	Char ToUpper(Char)
+ [m]	String ToUpper(String)

f [t] System.Globalization.UnicodeCategory

---------------------------------------
+ [a] System.Globalization.Calendars.dll
ref: ./netstandard/packages/System.Globalization.Calendars/ref/netstandard1.3/System.Globalization.Calendars.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Globalization.Calendars.dll

f [t] System.Globalization.ChineseLunisolarCalendar
+ [m]	Void .ctor()
+ [m]	Int32[] get_Eras()
+ [m]	DateTime get_MaxSupportedDateTime()
+ [m]	DateTime get_MinSupportedDateTime()
+ [m]	Int32 GetEra(DateTime)

f [t] System.Globalization.EastAsianLunisolarCalendar
+ [m]	Void .ctor()
+ [m]	Int32 get_TwoDigitYearMax()
+ [m]	Void set_TwoDigitYearMax(Int32)
+ [m]	DateTime AddMonths(DateTime,Int32)
+ [m]	DateTime AddYears(DateTime,Int32)
+ [m]	Int32 GetCelestialStem(Int32)
+ [m]	Int32 GetDayOfMonth(DateTime)
+ [m]	DayOfWeek GetDayOfWeek(DateTime)
+ [m]	Int32 GetDayOfYear(DateTime)
+ [m]	Int32 GetDaysInMonth(Int32,Int32,Int32)
+ [m]	Int32 GetDaysInYear(Int32,Int32)
+ [m]	Int32 GetLeapMonth(Int32,Int32)
+ [m]	Int32 GetMonth(DateTime)
+ [m]	Int32 GetMonthsInYear(Int32,Int32)
+ [m]	Int32 GetSexagenaryYear(DateTime)
+ [m]	Int32 GetTerrestrialBranch(Int32)
+ [m]	Int32 GetYear(DateTime)
+ [m]	Boolean IsLeapDay(Int32,Int32,Int32,Int32)
+ [m]	Boolean IsLeapMonth(Int32,Int32,Int32)
+ [m]	Boolean IsLeapYear(Int32,Int32)
+ [m]	DateTime ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
+ [m]	Int32 ToFourDigitYear(Int32)

f [t] System.Globalization.GregorianCalendar
+ [m]	Void .ctor()
+ [m]	Void .ctor(GregorianCalendarTypes)
+ [m]	GregorianCalendarTypes get_CalendarType()
+ [m]	Void set_CalendarType(GregorianCalendarTypes)
+ [m]	Int32[] get_Eras()
+ [m]	DateTime get_MaxSupportedDateTime()
+ [m]	DateTime get_MinSupportedDateTime()
+ [m]	Int32 get_TwoDigitYearMax()
+ [m]	Void set_TwoDigitYearMax(Int32)
+ [m]	DateTime AddMonths(DateTime,Int32)
+ [m]	DateTime AddYears(DateTime,Int32)
+ [m]	Int32 GetDayOfMonth(DateTime)
+ [m]	DayOfWeek GetDayOfWeek(DateTime)
+ [m]	Int32 GetDayOfYear(DateTime)
+ [m]	Int32 GetDaysInMonth(Int32,Int32,Int32)
+ [m]	Int32 GetDaysInYear(Int32,Int32)
+ [m]	Int32 GetEra(DateTime)
+ [m]	Int32 GetLeapMonth(Int32,Int32)
+ [m]	Int32 GetMonth(DateTime)
+ [m]	Int32 GetMonthsInYear(Int32,Int32)
+ [m]	Int32 GetYear(DateTime)
+ [m]	Boolean IsLeapDay(Int32,Int32,Int32,Int32)
+ [m]	Boolean IsLeapMonth(Int32,Int32,Int32)
+ [m]	Boolean IsLeapYear(Int32,Int32)
+ [m]	DateTime ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
+ [m]	Int32 ToFourDigitYear(Int32)

f [t] System.Globalization.GregorianCalendarTypes

f [t] System.Globalization.HebrewCalendar
+ [m]	Void .ctor()
+ [m]	Int32[] get_Eras()
+ [m]	DateTime get_MaxSupportedDateTime()
+ [m]	DateTime get_MinSupportedDateTime()
+ [m]	Int32 get_TwoDigitYearMax()
+ [m]	Void set_TwoDigitYearMax(Int32)
+ [m]	DateTime AddMonths(DateTime,Int32)
+ [m]	DateTime AddYears(DateTime,Int32)
+ [m]	Int32 GetDayOfMonth(DateTime)
+ [m]	DayOfWeek GetDayOfWeek(DateTime)
+ [m]	Int32 GetDayOfYear(DateTime)
+ [m]	Int32 GetDaysInMonth(Int32,Int32,Int32)
+ [m]	Int32 GetDaysInYear(Int32,Int32)
+ [m]	Int32 GetEra(DateTime)
+ [m]	Int32 GetLeapMonth(Int32,Int32)
+ [m]	Int32 GetMonth(DateTime)
+ [m]	Int32 GetMonthsInYear(Int32,Int32)
+ [m]	Int32 GetYear(DateTime)
+ [m]	Boolean IsLeapDay(Int32,Int32,Int32,Int32)
+ [m]	Boolean IsLeapMonth(Int32,Int32,Int32)
+ [m]	Boolean IsLeapYear(Int32,Int32)
+ [m]	DateTime ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
+ [m]	Int32 ToFourDigitYear(Int32)

f [t] System.Globalization.HijriCalendar
+ [m]	Void .ctor()
+ [m]	Int32[] get_Eras()
+ [m]	Int32 get_HijriAdjustment()
+ [m]	Void set_HijriAdjustment(Int32)
+ [m]	DateTime get_MaxSupportedDateTime()
+ [m]	DateTime get_MinSupportedDateTime()
+ [m]	Int32 get_TwoDigitYearMax()
+ [m]	Void set_TwoDigitYearMax(Int32)
+ [m]	DateTime AddMonths(DateTime,Int32)
+ [m]	DateTime AddYears(DateTime,Int32)
+ [m]	Int32 GetDayOfMonth(DateTime)
+ [m]	DayOfWeek GetDayOfWeek(DateTime)
+ [m]	Int32 GetDayOfYear(DateTime)
+ [m]	Int32 GetDaysInMonth(Int32,Int32,Int32)
+ [m]	Int32 GetDaysInYear(Int32,Int32)
+ [m]	Int32 GetEra(DateTime)
+ [m]	Int32 GetLeapMonth(Int32,Int32)
+ [m]	Int32 GetMonth(DateTime)
+ [m]	Int32 GetMonthsInYear(Int32,Int32)
+ [m]	Int32 GetYear(DateTime)
+ [m]	Boolean IsLeapDay(Int32,Int32,Int32,Int32)
+ [m]	Boolean IsLeapMonth(Int32,Int32,Int32)
+ [m]	Boolean IsLeapYear(Int32,Int32)
+ [m]	DateTime ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
+ [m]	Int32 ToFourDigitYear(Int32)

f [t] System.Globalization.JapaneseCalendar
+ [m]	Void .ctor()
+ [m]	Int32[] get_Eras()
+ [m]	DateTime get_MaxSupportedDateTime()
+ [m]	DateTime get_MinSupportedDateTime()
+ [m]	Int32 get_TwoDigitYearMax()
+ [m]	Void set_TwoDigitYearMax(Int32)
+ [m]	DateTime AddMonths(DateTime,Int32)
+ [m]	DateTime AddYears(DateTime,Int32)
+ [m]	Int32 GetDayOfMonth(DateTime)
+ [m]	DayOfWeek GetDayOfWeek(DateTime)
+ [m]	Int32 GetDayOfYear(DateTime)
+ [m]	Int32 GetDaysInMonth(Int32,Int32,Int32)
+ [m]	Int32 GetDaysInYear(Int32,Int32)
+ [m]	Int32 GetEra(DateTime)
+ [m]	Int32 GetLeapMonth(Int32,Int32)
+ [m]	Int32 GetMonth(DateTime)
+ [m]	Int32 GetMonthsInYear(Int32,Int32)
+ [m]	Int32 GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
+ [m]	Int32 GetYear(DateTime)
+ [m]	Boolean IsLeapDay(Int32,Int32,Int32,Int32)
+ [m]	Boolean IsLeapMonth(Int32,Int32,Int32)
+ [m]	Boolean IsLeapYear(Int32,Int32)
+ [m]	DateTime ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
+ [m]	Int32 ToFourDigitYear(Int32)

f [t] System.Globalization.JapaneseLunisolarCalendar
+ [m]	Void .ctor()
+ [m]	Int32[] get_Eras()
+ [m]	DateTime get_MaxSupportedDateTime()
+ [m]	DateTime get_MinSupportedDateTime()
+ [m]	Int32 GetEra(DateTime)

f [t] System.Globalization.JulianCalendar
+ [m]	Void .ctor()
+ [m]	Int32[] get_Eras()
+ [m]	DateTime get_MaxSupportedDateTime()
+ [m]	DateTime get_MinSupportedDateTime()
+ [m]	Int32 get_TwoDigitYearMax()
+ [m]	Void set_TwoDigitYearMax(Int32)
+ [m]	DateTime AddMonths(DateTime,Int32)
+ [m]	DateTime AddYears(DateTime,Int32)
+ [m]	Int32 GetDayOfMonth(DateTime)
+ [m]	DayOfWeek GetDayOfWeek(DateTime)
+ [m]	Int32 GetDayOfYear(DateTime)
+ [m]	Int32 GetDaysInMonth(Int32,Int32,Int32)
+ [m]	Int32 GetDaysInYear(Int32,Int32)
+ [m]	Int32 GetEra(DateTime)
+ [m]	Int32 GetLeapMonth(Int32,Int32)
+ [m]	Int32 GetMonth(DateTime)
+ [m]	Int32 GetMonthsInYear(Int32,Int32)
+ [m]	Int32 GetYear(DateTime)
+ [m]	Boolean IsLeapDay(Int32,Int32,Int32,Int32)
+ [m]	Boolean IsLeapMonth(Int32,Int32,Int32)
+ [m]	Boolean IsLeapYear(Int32,Int32)
+ [m]	DateTime ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
+ [m]	Int32 ToFourDigitYear(Int32)

f [t] System.Globalization.KoreanCalendar
+ [m]	Void .ctor()
+ [m]	Int32[] get_Eras()
+ [m]	DateTime get_MaxSupportedDateTime()
+ [m]	DateTime get_MinSupportedDateTime()
+ [m]	Int32 get_TwoDigitYearMax()
+ [m]	Void set_TwoDigitYearMax(Int32)
+ [m]	DateTime AddMonths(DateTime,Int32)
+ [m]	DateTime AddYears(DateTime,Int32)
+ [m]	Int32 GetDayOfMonth(DateTime)
+ [m]	DayOfWeek GetDayOfWeek(DateTime)
+ [m]	Int32 GetDayOfYear(DateTime)
+ [m]	Int32 GetDaysInMonth(Int32,Int32,Int32)
+ [m]	Int32 GetDaysInYear(Int32,Int32)
+ [m]	Int32 GetEra(DateTime)
+ [m]	Int32 GetLeapMonth(Int32,Int32)
+ [m]	Int32 GetMonth(DateTime)
+ [m]	Int32 GetMonthsInYear(Int32,Int32)
+ [m]	Int32 GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
+ [m]	Int32 GetYear(DateTime)
+ [m]	Boolean IsLeapDay(Int32,Int32,Int32,Int32)
+ [m]	Boolean IsLeapMonth(Int32,Int32,Int32)
+ [m]	Boolean IsLeapYear(Int32,Int32)
+ [m]	DateTime ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
+ [m]	Int32 ToFourDigitYear(Int32)

f [t] System.Globalization.KoreanLunisolarCalendar
+ [m]	Void .ctor()
+ [m]	Int32[] get_Eras()
+ [m]	DateTime get_MaxSupportedDateTime()
+ [m]	DateTime get_MinSupportedDateTime()
+ [m]	Int32 GetEra(DateTime)

f [t] System.Globalization.PersianCalendar
+ [m]	Void .ctor()
+ [m]	Int32[] get_Eras()
+ [m]	DateTime get_MaxSupportedDateTime()
+ [m]	DateTime get_MinSupportedDateTime()
+ [m]	Int32 get_TwoDigitYearMax()
+ [m]	Void set_TwoDigitYearMax(Int32)
+ [m]	DateTime AddMonths(DateTime,Int32)
+ [m]	DateTime AddYears(DateTime,Int32)
+ [m]	Int32 GetDayOfMonth(DateTime)
+ [m]	DayOfWeek GetDayOfWeek(DateTime)
+ [m]	Int32 GetDayOfYear(DateTime)
+ [m]	Int32 GetDaysInMonth(Int32,Int32,Int32)
+ [m]	Int32 GetDaysInYear(Int32,Int32)
+ [m]	Int32 GetEra(DateTime)
+ [m]	Int32 GetLeapMonth(Int32,Int32)
+ [m]	Int32 GetMonth(DateTime)
+ [m]	Int32 GetMonthsInYear(Int32,Int32)
+ [m]	Int32 GetYear(DateTime)
+ [m]	Boolean IsLeapDay(Int32,Int32,Int32,Int32)
+ [m]	Boolean IsLeapMonth(Int32,Int32,Int32)
+ [m]	Boolean IsLeapYear(Int32,Int32)
+ [m]	DateTime ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
+ [m]	Int32 ToFourDigitYear(Int32)

f [t] System.Globalization.TaiwanCalendar
+ [m]	Void .ctor()
+ [m]	Int32[] get_Eras()
+ [m]	DateTime get_MaxSupportedDateTime()
+ [m]	DateTime get_MinSupportedDateTime()
+ [m]	Int32 get_TwoDigitYearMax()
+ [m]	Void set_TwoDigitYearMax(Int32)
+ [m]	DateTime AddMonths(DateTime,Int32)
+ [m]	DateTime AddYears(DateTime,Int32)
+ [m]	Int32 GetDayOfMonth(DateTime)
+ [m]	DayOfWeek GetDayOfWeek(DateTime)
+ [m]	Int32 GetDayOfYear(DateTime)
+ [m]	Int32 GetDaysInMonth(Int32,Int32,Int32)
+ [m]	Int32 GetDaysInYear(Int32,Int32)
+ [m]	Int32 GetEra(DateTime)
+ [m]	Int32 GetLeapMonth(Int32,Int32)
+ [m]	Int32 GetMonth(DateTime)
+ [m]	Int32 GetMonthsInYear(Int32,Int32)
+ [m]	Int32 GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
+ [m]	Int32 GetYear(DateTime)
+ [m]	Boolean IsLeapDay(Int32,Int32,Int32,Int32)
+ [m]	Boolean IsLeapMonth(Int32,Int32,Int32)
+ [m]	Boolean IsLeapYear(Int32,Int32)
+ [m]	DateTime ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
+ [m]	Int32 ToFourDigitYear(Int32)

f [t] System.Globalization.TaiwanLunisolarCalendar
+ [m]	Void .ctor()
+ [m]	Int32[] get_Eras()
+ [m]	DateTime get_MaxSupportedDateTime()
+ [m]	DateTime get_MinSupportedDateTime()
+ [m]	Int32 GetEra(DateTime)

f [t] System.Globalization.ThaiBuddhistCalendar
+ [m]	Void .ctor()
+ [m]	Int32[] get_Eras()
+ [m]	DateTime get_MaxSupportedDateTime()
+ [m]	DateTime get_MinSupportedDateTime()
+ [m]	Int32 get_TwoDigitYearMax()
+ [m]	Void set_TwoDigitYearMax(Int32)
+ [m]	DateTime AddMonths(DateTime,Int32)
+ [m]	DateTime AddYears(DateTime,Int32)
+ [m]	Int32 GetDayOfMonth(DateTime)
+ [m]	DayOfWeek GetDayOfWeek(DateTime)
+ [m]	Int32 GetDayOfYear(DateTime)
+ [m]	Int32 GetDaysInMonth(Int32,Int32,Int32)
+ [m]	Int32 GetDaysInYear(Int32,Int32)
+ [m]	Int32 GetEra(DateTime)
+ [m]	Int32 GetLeapMonth(Int32,Int32)
+ [m]	Int32 GetMonth(DateTime)
+ [m]	Int32 GetMonthsInYear(Int32,Int32)
+ [m]	Int32 GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
+ [m]	Int32 GetYear(DateTime)
+ [m]	Boolean IsLeapDay(Int32,Int32,Int32,Int32)
+ [m]	Boolean IsLeapMonth(Int32,Int32,Int32)
+ [m]	Boolean IsLeapYear(Int32,Int32)
+ [m]	DateTime ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
+ [m]	Int32 ToFourDigitYear(Int32)

f [t] System.Globalization.UmAlQuraCalendar
+ [m]	Void .ctor()
+ [m]	Int32[] get_Eras()
+ [m]	DateTime get_MaxSupportedDateTime()
+ [m]	DateTime get_MinSupportedDateTime()
+ [m]	Int32 get_TwoDigitYearMax()
+ [m]	Void set_TwoDigitYearMax(Int32)
+ [m]	DateTime AddMonths(DateTime,Int32)
+ [m]	DateTime AddYears(DateTime,Int32)
+ [m]	Int32 GetDayOfMonth(DateTime)
+ [m]	DayOfWeek GetDayOfWeek(DateTime)
+ [m]	Int32 GetDayOfYear(DateTime)
+ [m]	Int32 GetDaysInMonth(Int32,Int32,Int32)
+ [m]	Int32 GetDaysInYear(Int32,Int32)
+ [m]	Int32 GetEra(DateTime)
+ [m]	Int32 GetLeapMonth(Int32,Int32)
+ [m]	Int32 GetMonth(DateTime)
+ [m]	Int32 GetMonthsInYear(Int32,Int32)
+ [m]	Int32 GetYear(DateTime)
+ [m]	Boolean IsLeapDay(Int32,Int32,Int32,Int32)
+ [m]	Boolean IsLeapMonth(Int32,Int32,Int32)
+ [m]	Boolean IsLeapYear(Int32,Int32)
+ [m]	DateTime ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
+ [m]	Int32 ToFourDigitYear(Int32)

---------------------------------------
+ [a] System.Globalization.Extensions.dll
ref: ./netstandard/packages/System.Globalization.Extensions/ref/netstandard1.3/System.Globalization.Extensions.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Globalization.Extensions.dll

+ [t] System.StringNormalizationExtensions
! [m]	Boolean IsNormalized(String)
! [m]	Boolean IsNormalized(String,NormalizationForm)
! [m]	String Normalize(String)
! [m]	String Normalize(String,NormalizationForm)

f [t] System.Text.NormalizationForm

f [t] System.Globalization.IdnMapping
+ [m]	Void .ctor()
+ [m]	Boolean get_AllowUnassigned()
+ [m]	Void set_AllowUnassigned(Boolean)
+ [m]	Boolean get_UseStd3AsciiRules()
+ [m]	Void set_UseStd3AsciiRules(Boolean)
+ [m]	Boolean Equals(Object)
+ [m]	String GetAscii(String)
+ [m]	String GetAscii(String,Int32)
+ [m]	String GetAscii(String,Int32,Int32)
+ [m]	Int32 GetHashCode()
+ [m]	String GetUnicode(String)
+ [m]	String GetUnicode(String,Int32)
+ [m]	String GetUnicode(String,Int32,Int32)

+ [t] System.Globalization.GlobalizationExtensions
+ [m]	StringComparer GetStringComparer(CompareInfo,CompareOptions)

---------------------------------------
+ [a] System.IO.dll
ref: ./netstandard/packages/System.IO/ref/netstandard1.5/System.IO.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.IO.dll

f [t] System.IO.BinaryReader
+ [m]	Void .ctor(Stream)
+ [m]	Void .ctor(Stream,Encoding)
+ [m]	Void .ctor(Stream,Encoding,Boolean)
+ [m]	Stream get_BaseStream()
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Void FillBuffer(Int32)
+ [m]	Int32 PeekChar()
+ [m]	Int32 Read()
+ [m]	Int32 Read(Byte[],Int32,Int32)
+ [m]	Int32 Read(Char[],Int32,Int32)
+ [m]	Int32 Read7BitEncodedInt()
+ [m]	Boolean ReadBoolean()
+ [m]	Byte ReadByte()
+ [m]	Byte[] ReadBytes(Int32)
+ [m]	Char ReadChar()
+ [m]	Char[] ReadChars(Int32)
+ [m]	Decimal ReadDecimal()
+ [m]	Double ReadDouble()
+ [m]	Int16 ReadInt16()
+ [m]	Int32 ReadInt32()
+ [m]	Int64 ReadInt64()
+ [m]	SByte ReadSByte()
+ [m]	Single ReadSingle()
+ [m]	String ReadString()
+ [m]	UInt16 ReadUInt16()
+ [m]	UInt32 ReadUInt32()
+ [m]	UInt64 ReadUInt64()

f [t] System.IO.BinaryWriter
+ [m]	Void .ctor()
+ [m]	Void .ctor(Stream)
+ [m]	Void .ctor(Stream,Encoding)
+ [m]	Void .ctor(Stream,Encoding,Boolean)
+ [m]	Stream get_BaseStream()
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Void Flush()
+ [m]	Int64 Seek(Int32,SeekOrigin)
+ [m]	Void Write(Boolean)
+ [m]	Void Write(Byte)
+ [m]	Void Write(Byte[])
+ [m]	Void Write(Byte[],Int32,Int32)
+ [m]	Void Write(Char)
+ [m]	Void Write(Char[])
+ [m]	Void Write(Char[],Int32,Int32)
+ [m]	Void Write(Decimal)
+ [m]	Void Write(Double)
+ [m]	Void Write(Int16)
+ [m]	Void Write(Int32)
+ [m]	Void Write(Int64)
+ [m]	Void Write(SByte)
+ [m]	Void Write(Single)
+ [m]	Void Write(String)
+ [m]	Void Write(UInt16)
+ [m]	Void Write(UInt32)
+ [m]	Void Write(UInt64)
+ [m]	Void Write7BitEncodedInt(Int32)

f [t] System.IO.BufferedStream
+ [m]	Void .ctor(Stream)
+ [m]	Void .ctor(Stream,Int32)
+ [m]	Boolean get_CanRead()
+ [m]	Boolean get_CanSeek()
+ [m]	Boolean get_CanWrite()
+ [m]	Int64 get_Length()
+ [m]	Int64 get_Position()
+ [m]	Void set_Position(Int64)
+ [m]	Void Dispose(Boolean)
+ [m]	Void Flush()
+ [m]	Task FlushAsync(CancellationToken)
+ [m]	Int32 Read(Byte[],Int32,Int32)
+ [m]	Task`1 ReadAsync(Byte[],Int32,Int32,CancellationToken)
+ [m]	Int32 ReadByte()
+ [m]	Int64 Seek(Int64,SeekOrigin)
+ [m]	Void SetLength(Int64)
+ [m]	Void Write(Byte[],Int32,Int32)
+ [m]	Task WriteAsync(Byte[],Int32,Int32,CancellationToken)
+ [m]	Void WriteByte(Byte)

f [t] System.IO.EndOfStreamException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.IO.InvalidDataException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.IO.MemoryStream
+ [m]	Void .ctor()
+ [m]	Void .ctor(Byte[])
+ [m]	Void .ctor(Byte[],Boolean)
+ [m]	Void .ctor(Byte[],Int32,Int32)
+ [m]	Void .ctor(Byte[],Int32,Int32,Boolean)
+ [m]	Void .ctor(Byte[],Int32,Int32,Boolean,Boolean)
+ [m]	Void .ctor(Int32)
+ [m]	Boolean get_CanRead()
+ [m]	Boolean get_CanSeek()
+ [m]	Boolean get_CanWrite()
+ [m]	Int32 get_Capacity()
+ [m]	Void set_Capacity(Int32)
+ [m]	Int64 get_Length()
+ [m]	Int64 get_Position()
+ [m]	Void set_Position(Int64)
+ [m]	Task CopyToAsync(Stream,Int32,CancellationToken)
+ [m]	Void Dispose(Boolean)
+ [m]	Void Flush()
+ [m]	Task FlushAsync(CancellationToken)
+ [m]	Int32 Read(Byte[],Int32,Int32)
+ [m]	Task`1 ReadAsync(Byte[],Int32,Int32,CancellationToken)
+ [m]	Int32 ReadByte()
+ [m]	Int64 Seek(Int64,SeekOrigin)
+ [m]	Void SetLength(Int64)
+ [m]	Byte[] ToArray()
+ [m]	Boolean TryGetBuffer(ArraySegment`1&)
+ [m]	Void Write(Byte[],Int32,Int32)
+ [m]	Task WriteAsync(Byte[],Int32,Int32,CancellationToken)
+ [m]	Void WriteByte(Byte)
+ [m]	Void WriteTo(Stream)

f [t] System.IO.SeekOrigin

f [t] System.IO.Stream
+ [m]	Void .ctor()
+ [m]	Boolean get_CanRead()
+ [m]	Boolean get_CanSeek()
+ [m]	Boolean get_CanTimeout()
+ [m]	Boolean get_CanWrite()
+ [m]	Int64 get_Length()
+ [m]	Int64 get_Position()
+ [m]	Void set_Position(Int64)
+ [m]	Int32 get_ReadTimeout()
+ [m]	Void set_ReadTimeout(Int32)
+ [m]	Int32 get_WriteTimeout()
+ [m]	Void set_WriteTimeout(Int32)
+ [m]	Void CopyTo(Stream)
+ [m]	Void CopyTo(Stream,Int32)
+ [m]	Task CopyToAsync(Stream)
+ [m]	Task CopyToAsync(Stream,Int32)
+ [m]	Task CopyToAsync(Stream,Int32,CancellationToken)
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Void Flush()
+ [m]	Task FlushAsync()
+ [m]	Task FlushAsync(CancellationToken)
+ [m]	Int32 Read(Byte[],Int32,Int32)
+ [m]	Task`1 ReadAsync(Byte[],Int32,Int32)
+ [m]	Task`1 ReadAsync(Byte[],Int32,Int32,CancellationToken)
+ [m]	Int32 ReadByte()
+ [m]	Int64 Seek(Int64,SeekOrigin)
+ [m]	Void SetLength(Int64)
+ [m]	Void Write(Byte[],Int32,Int32)
+ [m]	Task WriteAsync(Byte[],Int32,Int32)
+ [m]	Task WriteAsync(Byte[],Int32,Int32,CancellationToken)
+ [m]	Void WriteByte(Byte)

f [t] System.IO.StreamReader
+ [m]	Void .ctor(Stream)
+ [m]	Void .ctor(Stream,Boolean)
+ [m]	Void .ctor(Stream,Encoding)
+ [m]	Void .ctor(Stream,Encoding,Boolean)
+ [m]	Void .ctor(Stream,Encoding,Boolean,Int32)
+ [m]	Void .ctor(Stream,Encoding,Boolean,Int32,Boolean)
+ [m]	Stream get_BaseStream()
+ [m]	Encoding get_CurrentEncoding()
+ [m]	Boolean get_EndOfStream()
+ [m]	Void DiscardBufferedData()
+ [m]	Void Dispose(Boolean)
+ [m]	Int32 Peek()
+ [m]	Int32 Read()
+ [m]	Int32 Read(Char[],Int32,Int32)
+ [m]	Task`1 ReadAsync(Char[],Int32,Int32)
+ [m]	Int32 ReadBlock(Char[],Int32,Int32)
+ [m]	Task`1 ReadBlockAsync(Char[],Int32,Int32)
+ [m]	String ReadLine()
+ [m]	Task`1 ReadLineAsync()
+ [m]	String ReadToEnd()
+ [m]	Task`1 ReadToEndAsync()

f [t] System.IO.StreamWriter
+ [m]	Void .ctor(Stream)
+ [m]	Void .ctor(Stream,Encoding)
+ [m]	Void .ctor(Stream,Encoding,Int32)
+ [m]	Void .ctor(Stream,Encoding,Int32,Boolean)
+ [m]	Boolean get_AutoFlush()
+ [m]	Void set_AutoFlush(Boolean)
+ [m]	Stream get_BaseStream()
+ [m]	Encoding get_Encoding()
+ [m]	Void Dispose(Boolean)
+ [m]	Void Flush()
+ [m]	Task FlushAsync()
+ [m]	Void Write(Char)
+ [m]	Void Write(Char[])
+ [m]	Void Write(Char[],Int32,Int32)
+ [m]	Void Write(String)
+ [m]	Task WriteAsync(Char)
+ [m]	Task WriteAsync(Char[],Int32,Int32)
+ [m]	Task WriteAsync(String)
+ [m]	Task WriteLineAsync()
+ [m]	Task WriteLineAsync(Char)
+ [m]	Task WriteLineAsync(Char[],Int32,Int32)
+ [m]	Task WriteLineAsync(String)

f [t] System.IO.StringReader
+ [m]	Void .ctor(String)
+ [m]	Void Dispose(Boolean)
+ [m]	Int32 Peek()
+ [m]	Int32 Read()
+ [m]	Int32 Read(Char[],Int32,Int32)
+ [m]	Task`1 ReadAsync(Char[],Int32,Int32)
+ [m]	Task`1 ReadBlockAsync(Char[],Int32,Int32)
+ [m]	String ReadLine()
+ [m]	Task`1 ReadLineAsync()
+ [m]	String ReadToEnd()
+ [m]	Task`1 ReadToEndAsync()

f [t] System.IO.StringWriter
+ [m]	Void .ctor()
+ [m]	Void .ctor(IFormatProvider)
+ [m]	Void .ctor(StringBuilder)
+ [m]	Void .ctor(StringBuilder,IFormatProvider)
+ [m]	Encoding get_Encoding()
+ [m]	Void Dispose(Boolean)
+ [m]	Task FlushAsync()
+ [m]	StringBuilder GetStringBuilder()
+ [m]	String ToString()
+ [m]	Void Write(Char)
+ [m]	Void Write(Char[],Int32,Int32)
+ [m]	Void Write(String)
+ [m]	Task WriteAsync(Char)
+ [m]	Task WriteAsync(Char[],Int32,Int32)
+ [m]	Task WriteAsync(String)
+ [m]	Task WriteLineAsync(Char)
+ [m]	Task WriteLineAsync(Char[],Int32,Int32)
+ [m]	Task WriteLineAsync(String)

f [t] System.IO.TextReader
+ [m]	Void .ctor()
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Int32 Peek()
+ [m]	Int32 Read()
+ [m]	Int32 Read(Char[],Int32,Int32)
+ [m]	Task`1 ReadAsync(Char[],Int32,Int32)
+ [m]	Int32 ReadBlock(Char[],Int32,Int32)
+ [m]	Task`1 ReadBlockAsync(Char[],Int32,Int32)
+ [m]	String ReadLine()
+ [m]	Task`1 ReadLineAsync()
+ [m]	String ReadToEnd()
+ [m]	Task`1 ReadToEndAsync()

f [t] System.IO.TextWriter
+ [m]	Void .ctor()
+ [m]	Void .ctor(IFormatProvider)
+ [m]	Encoding get_Encoding()
+ [m]	IFormatProvider get_FormatProvider()
+ [m]	String get_NewLine()
+ [m]	Void set_NewLine(String)
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Void Flush()
+ [m]	Task FlushAsync()
+ [m]	Void Write(Boolean)
+ [m]	Void Write(Char)
+ [m]	Void Write(Char[])
+ [m]	Void Write(Char[],Int32,Int32)
+ [m]	Void Write(Decimal)
+ [m]	Void Write(Double)
+ [m]	Void Write(Int32)
+ [m]	Void Write(Int64)
+ [m]	Void Write(Object)
+ [m]	Void Write(Single)
+ [m]	Void Write(String)
+ [m]	Void Write(String,Object)
+ [m]	Void Write(String,Object,Object)
+ [m]	Void Write(String,Object,Object,Object)
+ [m]	Void Write(String,Object[])
+ [m]	Void Write(UInt32)
+ [m]	Void Write(UInt64)
+ [m]	Task WriteAsync(Char)
+ [m]	Task WriteAsync(Char[])
+ [m]	Task WriteAsync(Char[],Int32,Int32)
+ [m]	Task WriteAsync(String)
+ [m]	Void WriteLine()
+ [m]	Void WriteLine(Boolean)
+ [m]	Void WriteLine(Char)
+ [m]	Void WriteLine(Char[])
+ [m]	Void WriteLine(Char[],Int32,Int32)
+ [m]	Void WriteLine(Decimal)
+ [m]	Void WriteLine(Double)
+ [m]	Void WriteLine(Int32)
+ [m]	Void WriteLine(Int64)
+ [m]	Void WriteLine(Object)
+ [m]	Void WriteLine(Single)
+ [m]	Void WriteLine(String)
+ [m]	Void WriteLine(String,Object)
+ [m]	Void WriteLine(String,Object,Object)
+ [m]	Void WriteLine(String,Object,Object,Object)
+ [m]	Void WriteLine(String,Object[])
+ [m]	Void WriteLine(UInt32)
+ [m]	Void WriteLine(UInt64)
+ [m]	Task WriteLineAsync()
+ [m]	Task WriteLineAsync(Char)
+ [m]	Task WriteLineAsync(Char[])
+ [m]	Task WriteLineAsync(Char[],Int32,Int32)
+ [m]	Task WriteLineAsync(String)

---------------------------------------
+ [a] System.IO.Compression.dll
ref: ./netstandard/packages/System.IO.Compression/ref/netstandard1.3/System.IO.Compression.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.IO.Compression.dll

f [t] System.IO.Compression.CompressionLevel

f [t] System.IO.Compression.CompressionMode

f [t] System.IO.Compression.DeflateStream
+ [m]	Void .ctor(Stream,CompressionLevel)
+ [m]	Void .ctor(Stream,CompressionLevel,Boolean)
+ [m]	Void .ctor(Stream,CompressionMode)
+ [m]	Void .ctor(Stream,CompressionMode,Boolean)
+ [m]	Stream get_BaseStream()
+ [m]	Boolean get_CanRead()
+ [m]	Boolean get_CanSeek()
+ [m]	Boolean get_CanWrite()
+ [m]	Int64 get_Length()
+ [m]	Int64 get_Position()
+ [m]	Void set_Position(Int64)
+ [m]	Void Dispose(Boolean)
+ [m]	Void Flush()
+ [m]	Int32 Read(Byte[],Int32,Int32)
- [m]	Task`1 ReadAsync(Byte[],Int32,Int32,CancellationToken)
+ [m]	Int64 Seek(Int64,SeekOrigin)
+ [m]	Void SetLength(Int64)
+ [m]	Void Write(Byte[],Int32,Int32)
- [m]	Task WriteAsync(Byte[],Int32,Int32,CancellationToken)

f [t] System.IO.Compression.GZipStream
+ [m]	Void .ctor(Stream,CompressionLevel)
+ [m]	Void .ctor(Stream,CompressionLevel,Boolean)
+ [m]	Void .ctor(Stream,CompressionMode)
+ [m]	Void .ctor(Stream,CompressionMode,Boolean)
+ [m]	Stream get_BaseStream()
+ [m]	Boolean get_CanRead()
+ [m]	Boolean get_CanSeek()
+ [m]	Boolean get_CanWrite()
+ [m]	Int64 get_Length()
+ [m]	Int64 get_Position()
+ [m]	Void set_Position(Int64)
+ [m]	Void Dispose(Boolean)
+ [m]	Void Flush()
+ [m]	Int32 Read(Byte[],Int32,Int32)
- [m]	Task`1 ReadAsync(Byte[],Int32,Int32,CancellationToken)
+ [m]	Int64 Seek(Int64,SeekOrigin)
+ [m]	Void SetLength(Int64)
+ [m]	Void Write(Byte[],Int32,Int32)
- [m]	Task WriteAsync(Byte[],Int32,Int32,CancellationToken)

+ [t] System.IO.Compression.ZipArchive
+ [m]	Void .ctor(Stream)
+ [m]	Void .ctor(Stream,ZipArchiveMode)
+ [m]	Void .ctor(Stream,ZipArchiveMode,Boolean)
+ [m]	Void .ctor(Stream,ZipArchiveMode,Boolean,Encoding)
+ [m]	ReadOnlyCollection`1 get_Entries()
+ [m]	ZipArchiveMode get_Mode()
+ [m]	ZipArchiveEntry CreateEntry(String)
+ [m]	ZipArchiveEntry CreateEntry(String,CompressionLevel)
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	ZipArchiveEntry GetEntry(String)

+ [t] System.IO.Compression.ZipArchiveEntry
+ [m]	Void .ctor()
+ [m]	ZipArchive get_Archive()
+ [m]	Int64 get_CompressedLength()
+ [m]	String get_FullName()
+ [m]	DateTimeOffset get_LastWriteTime()
+ [m]	Void set_LastWriteTime(DateTimeOffset)
+ [m]	Int64 get_Length()
+ [m]	String get_Name()
+ [m]	Void Delete()
+ [m]	Stream Open()
+ [m]	String ToString()

+ [t] System.IO.Compression.ZipArchiveMode

---------------------------------------
+ [a] System.IO.Compression.ZipFile.dll
ref: ./netstandard/packages/System.IO.Compression.ZipFile/ref/netstandard1.3/System.IO.Compression.ZipFile.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.IO.Compression.ZipFile.dll

f [t] System.IO.Compression.ZipFile
+ [m]	Void CreateFromDirectory(String,String)
+ [m]	Void CreateFromDirectory(String,String,CompressionLevel,Boolean)
+ [m]	Void CreateFromDirectory(String,String,CompressionLevel,Boolean,Encoding)
+ [m]	Void ExtractToDirectory(String,String)
+ [m]	Void ExtractToDirectory(String,String,Encoding)
+ [m]	ZipArchive Open(String,ZipArchiveMode)
+ [m]	ZipArchive Open(String,ZipArchiveMode,Encoding)
+ [m]	ZipArchive OpenRead(String)

f [t] System.IO.Compression.ZipFileExtensions
+ [m]	ZipArchiveEntry CreateEntryFromFile(ZipArchive,String,String)
+ [m]	ZipArchiveEntry CreateEntryFromFile(ZipArchive,String,String,CompressionLevel)
+ [m]	Void ExtractToDirectory(ZipArchive,String)
+ [m]	Void ExtractToFile(ZipArchiveEntry,String)
+ [m]	Void ExtractToFile(ZipArchiveEntry,String,Boolean)

---------------------------------------
+ [a] System.IO.FileSystem.dll
ref: ./netstandard/packages/System.IO.FileSystem/ref/netstandard1.3/System.IO.FileSystem.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.IO.FileSystem.dll

f [t] System.IO.Directory
+ [m]	DirectoryInfo CreateDirectory(String)
+ [m]	Void Delete(String)
+ [m]	Void Delete(String,Boolean)
+ [m]	IEnumerable`1 EnumerateDirectories(String)
+ [m]	IEnumerable`1 EnumerateDirectories(String,String)
+ [m]	IEnumerable`1 EnumerateDirectories(String,String,SearchOption)
+ [m]	IEnumerable`1 EnumerateFiles(String)
+ [m]	IEnumerable`1 EnumerateFiles(String,String)
+ [m]	IEnumerable`1 EnumerateFiles(String,String,SearchOption)
+ [m]	IEnumerable`1 EnumerateFileSystemEntries(String)
+ [m]	IEnumerable`1 EnumerateFileSystemEntries(String,String)
+ [m]	IEnumerable`1 EnumerateFileSystemEntries(String,String,SearchOption)
+ [m]	Boolean Exists(String)
+ [m]	DateTime GetCreationTime(String)
+ [m]	DateTime GetCreationTimeUtc(String)
+ [m]	String GetCurrentDirectory()
+ [m]	String[] GetDirectories(String)
+ [m]	String[] GetDirectories(String,String)
+ [m]	String[] GetDirectories(String,String,SearchOption)
+ [m]	String GetDirectoryRoot(String)
+ [m]	String[] GetFiles(String)
+ [m]	String[] GetFiles(String,String)
+ [m]	String[] GetFiles(String,String,SearchOption)
+ [m]	String[] GetFileSystemEntries(String)
+ [m]	String[] GetFileSystemEntries(String,String)
+ [m]	String[] GetFileSystemEntries(String,String,SearchOption)
+ [m]	DateTime GetLastAccessTime(String)
+ [m]	DateTime GetLastAccessTimeUtc(String)
+ [m]	DateTime GetLastWriteTime(String)
+ [m]	DateTime GetLastWriteTimeUtc(String)
+ [m]	DirectoryInfo GetParent(String)
+ [m]	Void Move(String,String)
+ [m]	Void SetCreationTime(String,DateTime)
+ [m]	Void SetCreationTimeUtc(String,DateTime)
+ [m]	Void SetCurrentDirectory(String)
+ [m]	Void SetLastAccessTime(String,DateTime)
+ [m]	Void SetLastAccessTimeUtc(String,DateTime)
+ [m]	Void SetLastWriteTime(String,DateTime)
+ [m]	Void SetLastWriteTimeUtc(String,DateTime)

f [t] System.IO.DirectoryInfo
+ [m]	Void .ctor(String)
+ [m]	Boolean get_Exists()
+ [m]	String get_Name()
+ [m]	DirectoryInfo get_Parent()
+ [m]	DirectoryInfo get_Root()
+ [m]	Void Create()
+ [m]	DirectoryInfo CreateSubdirectory(String)
+ [m]	Void Delete()
+ [m]	Void Delete(Boolean)
+ [m]	IEnumerable`1 EnumerateDirectories()
+ [m]	IEnumerable`1 EnumerateDirectories(String)
+ [m]	IEnumerable`1 EnumerateDirectories(String,SearchOption)
+ [m]	IEnumerable`1 EnumerateFiles()
+ [m]	IEnumerable`1 EnumerateFiles(String)
+ [m]	IEnumerable`1 EnumerateFiles(String,SearchOption)
+ [m]	IEnumerable`1 EnumerateFileSystemInfos()
+ [m]	IEnumerable`1 EnumerateFileSystemInfos(String)
+ [m]	IEnumerable`1 EnumerateFileSystemInfos(String,SearchOption)
+ [m]	DirectoryInfo[] GetDirectories()
+ [m]	DirectoryInfo[] GetDirectories(String)
+ [m]	DirectoryInfo[] GetDirectories(String,SearchOption)
+ [m]	FileInfo[] GetFiles()
+ [m]	FileInfo[] GetFiles(String)
+ [m]	FileInfo[] GetFiles(String,SearchOption)
+ [m]	FileSystemInfo[] GetFileSystemInfos()
+ [m]	FileSystemInfo[] GetFileSystemInfos(String)
+ [m]	FileSystemInfo[] GetFileSystemInfos(String,SearchOption)
+ [m]	Void MoveTo(String)
+ [m]	String ToString()

f [t] System.IO.File
+ [m]	Void AppendAllLines(String,IEnumerable`1)
+ [m]	Void AppendAllLines(String,IEnumerable`1,Encoding)
+ [m]	Void AppendAllText(String,String)
+ [m]	Void AppendAllText(String,String,Encoding)
+ [m]	StreamWriter AppendText(String)
+ [m]	Void Copy(String,String)
+ [m]	Void Copy(String,String,Boolean)
+ [m]	FileStream Create(String)
+ [m]	FileStream Create(String,Int32)
- [m]	FileStream Create(String,Int32,FileOptions)
+ [m]	StreamWriter CreateText(String)
+ [m]	Void Delete(String)
+ [m]	Boolean Exists(String)
+ [m]	FileAttributes GetAttributes(String)
+ [m]	DateTime GetCreationTime(String)
+ [m]	DateTime GetCreationTimeUtc(String)
+ [m]	DateTime GetLastAccessTime(String)
+ [m]	DateTime GetLastAccessTimeUtc(String)
+ [m]	DateTime GetLastWriteTime(String)
+ [m]	DateTime GetLastWriteTimeUtc(String)
+ [m]	Void Move(String,String)
+ [m]	FileStream Open(String,FileMode)
+ [m]	FileStream Open(String,FileMode,FileAccess)
+ [m]	FileStream Open(String,FileMode,FileAccess,FileShare)
+ [m]	FileStream OpenRead(String)
+ [m]	StreamReader OpenText(String)
+ [m]	FileStream OpenWrite(String)
+ [m]	Byte[] ReadAllBytes(String)
+ [m]	String[] ReadAllLines(String)
+ [m]	String[] ReadAllLines(String,Encoding)
+ [m]	String ReadAllText(String)
+ [m]	String ReadAllText(String,Encoding)
+ [m]	IEnumerable`1 ReadLines(String)
+ [m]	IEnumerable`1 ReadLines(String,Encoding)
+ [m]	Void SetAttributes(String,FileAttributes)
+ [m]	Void SetCreationTime(String,DateTime)
+ [m]	Void SetCreationTimeUtc(String,DateTime)
+ [m]	Void SetLastAccessTime(String,DateTime)
+ [m]	Void SetLastAccessTimeUtc(String,DateTime)
+ [m]	Void SetLastWriteTime(String,DateTime)
+ [m]	Void SetLastWriteTimeUtc(String,DateTime)
+ [m]	Void WriteAllBytes(String,Byte[])
+ [m]	Void WriteAllLines(String,IEnumerable`1)
+ [m]	Void WriteAllLines(String,IEnumerable`1,Encoding)
+ [m]	Void WriteAllText(String,String)
+ [m]	Void WriteAllText(String,String,Encoding)

f [t] System.IO.FileInfo
+ [m]	Void .ctor(String)
+ [m]	DirectoryInfo get_Directory()
+ [m]	String get_DirectoryName()
+ [m]	Boolean get_Exists()
+ [m]	Boolean get_IsReadOnly()
+ [m]	Void set_IsReadOnly(Boolean)
+ [m]	Int64 get_Length()
+ [m]	String get_Name()
+ [m]	StreamWriter AppendText()
+ [m]	FileInfo CopyTo(String)
+ [m]	FileInfo CopyTo(String,Boolean)
+ [m]	FileStream Create()
+ [m]	StreamWriter CreateText()
+ [m]	Void Delete()
+ [m]	Void MoveTo(String)
+ [m]	FileStream Open(FileMode)
+ [m]	FileStream Open(FileMode,FileAccess)
+ [m]	FileStream Open(FileMode,FileAccess,FileShare)
+ [m]	FileStream OpenRead()
+ [m]	StreamReader OpenText()
+ [m]	FileStream OpenWrite()
+ [m]	String ToString()

f [t] System.IO.FileOptions

f [t] System.IO.FileStream
+ [m]	Void .ctor(SafeFileHandle,FileAccess)
+ [m]	Void .ctor(SafeFileHandle,FileAccess,Int32)
+ [m]	Void .ctor(SafeFileHandle,FileAccess,Int32,Boolean)
+ [m]	Void .ctor(String,FileMode)
+ [m]	Void .ctor(String,FileMode,FileAccess)
+ [m]	Void .ctor(String,FileMode,FileAccess,FileShare)
+ [m]	Void .ctor(String,FileMode,FileAccess,FileShare,Int32)
+ [m]	Void .ctor(String,FileMode,FileAccess,FileShare,Int32,Boolean)
+ [m]	Void .ctor(String,FileMode,FileAccess,FileShare,Int32,FileOptions)
+ [m]	Boolean get_CanRead()
+ [m]	Boolean get_CanSeek()
+ [m]	Boolean get_CanWrite()
+ [m]	Boolean get_IsAsync()
+ [m]	Int64 get_Length()
+ [m]	String get_Name()
+ [m]	Int64 get_Position()
+ [m]	Void set_Position(Int64)
+ [m]	SafeFileHandle get_SafeFileHandle()
+ [m]	Void Dispose(Boolean)
+ [m]	Void Finalize()
+ [m]	Void Flush()
+ [m]	Void Flush(Boolean)
+ [m]	Task FlushAsync(CancellationToken)
+ [m]	Int32 Read(Byte[],Int32,Int32)
+ [m]	Task`1 ReadAsync(Byte[],Int32,Int32,CancellationToken)
+ [m]	Int32 ReadByte()
+ [m]	Int64 Seek(Int64,SeekOrigin)
+ [m]	Void SetLength(Int64)
+ [m]	Void Write(Byte[],Int32,Int32)
+ [m]	Task WriteAsync(Byte[],Int32,Int32,CancellationToken)
+ [m]	Void WriteByte(Byte)

f [t] System.IO.FileSystemInfo
+ [m]	Void .ctor()
+ [m]	FileAttributes get_Attributes()
+ [m]	Void set_Attributes(FileAttributes)
+ [m]	DateTime get_CreationTime()
+ [m]	Void set_CreationTime(DateTime)
+ [m]	DateTime get_CreationTimeUtc()
+ [m]	Void set_CreationTimeUtc(DateTime)
+ [m]	Boolean get_Exists()
+ [m]	String get_Extension()
+ [m]	String get_FullName()
+ [m]	DateTime get_LastAccessTime()
+ [m]	Void set_LastAccessTime(DateTime)
+ [m]	DateTime get_LastAccessTimeUtc()
+ [m]	Void set_LastAccessTimeUtc(DateTime)
+ [m]	DateTime get_LastWriteTime()
+ [m]	Void set_LastWriteTime(DateTime)
+ [m]	DateTime get_LastWriteTimeUtc()
+ [m]	Void set_LastWriteTimeUtc(DateTime)
+ [m]	String get_Name()
+ [m]	Void Delete()
+ [m]	Void Refresh()

f [t] System.IO.SearchOption

f [t] Microsoft.Win32.SafeHandles.SafeFileHandle
+ [m]	Void .ctor(IntPtr,Boolean)
+ [m]	Boolean ReleaseHandle()
- [m]	Boolean get_IsInvalid()

---------------------------------------
+ [a] System.IO.FileSystem.AccessControl.dll
ref: ./netstandard/packages/System.IO.FileSystem.AccessControl/ref/netstandard1.3/System.IO.FileSystem.AccessControl.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.IO.FileSystem.AccessControl.dll

f [t] System.Security.AccessControl.DirectoryObjectSecurity
+ [m]	Void .ctor()
+ [m]	Void .ctor(CommonSecurityDescriptor)
+ [m]	AccessRule AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType,Guid,Guid)
+ [m]	Void AddAccessRule(ObjectAccessRule)
+ [m]	Void AddAuditRule(ObjectAuditRule)
+ [m]	AuditRule AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags,Guid,Guid)
+ [m]	AuthorizationRuleCollection GetAccessRules(Boolean,Boolean,Type)
+ [m]	AuthorizationRuleCollection GetAuditRules(Boolean,Boolean,Type)
+ [m]	Boolean ModifyAccess(AccessControlModification,AccessRule,Boolean&)
+ [m]	Boolean ModifyAudit(AccessControlModification,AuditRule,Boolean&)
+ [m]	Boolean RemoveAccessRule(ObjectAccessRule)
+ [m]	Void RemoveAccessRuleAll(ObjectAccessRule)
+ [m]	Void RemoveAccessRuleSpecific(ObjectAccessRule)
+ [m]	Boolean RemoveAuditRule(ObjectAuditRule)
+ [m]	Void RemoveAuditRuleAll(ObjectAuditRule)
+ [m]	Void RemoveAuditRuleSpecific(ObjectAuditRule)
+ [m]	Void ResetAccessRule(ObjectAccessRule)
+ [m]	Void SetAccessRule(ObjectAccessRule)
+ [m]	Void SetAuditRule(ObjectAuditRule)

f [t] System.Security.AccessControl.DirectorySecurity
+ [m]	Void .ctor()
+ [m]	Void .ctor(String,AccessControlSections)

f [t] System.Security.AccessControl.FileSecurity
+ [m]	Void .ctor()
+ [m]	Void .ctor(String,AccessControlSections)

f [t] System.Security.AccessControl.FileSystemAccessRule
+ [m]	Void .ctor(IdentityReference,FileSystemRights,AccessControlType)
+ [m]	Void .ctor(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
+ [m]	Void .ctor(String,FileSystemRights,AccessControlType)
+ [m]	Void .ctor(String,FileSystemRights,InheritanceFlags,PropagationFlags,AccessControlType)
+ [m]	FileSystemRights get_FileSystemRights()

f [t] System.Security.AccessControl.FileSystemAuditRule
+ [m]	Void .ctor(IdentityReference,FileSystemRights,AuditFlags)
+ [m]	Void .ctor(IdentityReference,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
+ [m]	Void .ctor(String,FileSystemRights,AuditFlags)
+ [m]	Void .ctor(String,FileSystemRights,InheritanceFlags,PropagationFlags,AuditFlags)
+ [m]	FileSystemRights get_FileSystemRights()

f [t] System.Security.AccessControl.FileSystemRights

f [t] System.Security.AccessControl.FileSystemSecurity
- [m]	Void .ctor()
+ [m]	Type get_AccessRightType()
+ [m]	Type get_AccessRuleType()
+ [m]	Type get_AuditRuleType()
+ [m]	AccessRule AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
+ [m]	Void AddAccessRule(FileSystemAccessRule)
+ [m]	Void AddAuditRule(FileSystemAuditRule)
+ [m]	AuditRule AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
+ [m]	Boolean RemoveAccessRule(FileSystemAccessRule)
+ [m]	Void RemoveAccessRuleAll(FileSystemAccessRule)
+ [m]	Void RemoveAccessRuleSpecific(FileSystemAccessRule)
+ [m]	Boolean RemoveAuditRule(FileSystemAuditRule)
+ [m]	Void RemoveAuditRuleAll(FileSystemAuditRule)
+ [m]	Void RemoveAuditRuleSpecific(FileSystemAuditRule)
+ [m]	Void ResetAccessRule(FileSystemAccessRule)
+ [m]	Void SetAccessRule(FileSystemAccessRule)
+ [m]	Void SetAuditRule(FileSystemAuditRule)

+ [t] System.IO.FileSystemAclExtensions
! [m]	DirectorySecurity GetAccessControl(DirectoryInfo)
! [m]	DirectorySecurity GetAccessControl(DirectoryInfo,AccessControlSections)
! [m]	FileSecurity GetAccessControl(FileInfo)
! [m]	FileSecurity GetAccessControl(FileInfo,AccessControlSections)
! [m]	FileSecurity GetAccessControl(FileStream)
! [m]	Void SetAccessControl(DirectoryInfo,DirectorySecurity)
! [m]	Void SetAccessControl(FileInfo,FileSecurity)
! [m]	Void SetAccessControl(FileStream,FileSecurity)

---------------------------------------
+ [a] System.IO.FileSystem.DriveInfo.dll
ref: ./netstandard/packages/System.IO.FileSystem.DriveInfo/ref/netstandard1.3/System.IO.FileSystem.DriveInfo.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.IO.FileSystem.DriveInfo.dll

f [t] System.IO.DriveInfo
+ [m]	Void .ctor(String)
+ [m]	Int64 get_AvailableFreeSpace()
+ [m]	String get_DriveFormat()
+ [m]	DriveType get_DriveType()
+ [m]	Boolean get_IsReady()
+ [m]	String get_Name()
+ [m]	DirectoryInfo get_RootDirectory()
+ [m]	Int64 get_TotalFreeSpace()
+ [m]	Int64 get_TotalSize()
+ [m]	String get_VolumeLabel()
! [m]	Void set_VolumeLabel(String)
+ [m]	DriveInfo[] GetDrives()
+ [m]	String ToString()

f [t] System.IO.DriveNotFoundException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.IO.DriveType

---------------------------------------
+ [a] System.IO.FileSystem.Primitives.dll
ref: ./netstandard/packages/System.IO.FileSystem.Primitives/ref/netstandard1.3/System.IO.FileSystem.Primitives.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.IO.FileSystem.Primitives.dll

f [t] System.IO.FileAccess

f [t] System.IO.FileAttributes

f [t] System.IO.FileMode

f [t] System.IO.FileShare

---------------------------------------
+ [a] System.IO.FileSystem.Watcher.dll
ref: ./netstandard/packages/System.IO.FileSystem.Watcher/ref/netstandard1.3/System.IO.FileSystem.Watcher.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.IO.FileSystem.Watcher.dll

f [t] System.IO.ErrorEventArgs
+ [m]	Void .ctor(Exception)
+ [m]	Exception GetException()

f [t] System.IO.ErrorEventHandler
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object,ErrorEventArgs)
+ [m]	IAsyncResult BeginInvoke(Object,ErrorEventArgs,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.IO.FileSystemEventArgs
+ [m]	Void .ctor(WatcherChangeTypes,String,String)
+ [m]	WatcherChangeTypes get_ChangeType()
+ [m]	String get_FullPath()
+ [m]	String get_Name()

f [t] System.IO.FileSystemEventHandler
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object,FileSystemEventArgs)
+ [m]	IAsyncResult BeginInvoke(Object,FileSystemEventArgs,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.IO.FileSystemWatcher
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,String)
! [m]	Boolean get_EnableRaisingEvents()
! [m]	Void set_EnableRaisingEvents(Boolean)
! [m]	String get_Filter()
+ [m]	Void set_Filter(String)
! [m]	Boolean get_IncludeSubdirectories()
+ [m]	Void set_IncludeSubdirectories(Boolean)
! [m]	Int32 get_InternalBufferSize()
+ [m]	Void set_InternalBufferSize(Int32)
! [m]	NotifyFilters get_NotifyFilter()
+ [m]	Void set_NotifyFilter(NotifyFilters)
! [m]	String get_Path()
+ [m]	Void set_Path(String)
+ [m]	Void add_Changed(FileSystemEventHandler)
+ [m]	Void remove_Changed(FileSystemEventHandler)
+ [m]	Void add_Created(FileSystemEventHandler)
+ [m]	Void remove_Created(FileSystemEventHandler)
+ [m]	Void add_Deleted(FileSystemEventHandler)
+ [m]	Void remove_Deleted(FileSystemEventHandler)
+ [m]	Void add_Error(ErrorEventHandler)
+ [m]	Void remove_Error(ErrorEventHandler)
+ [m]	Void add_Renamed(RenamedEventHandler)
+ [m]	Void remove_Renamed(RenamedEventHandler)
! [m]	Void OnChanged(FileSystemEventArgs)
! [m]	Void OnCreated(FileSystemEventArgs)
! [m]	Void OnDeleted(FileSystemEventArgs)
! [m]	Void OnError(ErrorEventArgs)
! [m]	Void OnRenamed(RenamedEventArgs)
! [m]	WaitForChangedResult WaitForChanged(WatcherChangeTypes)
! [m]	WaitForChangedResult WaitForChanged(WatcherChangeTypes,Int32)
- [m]	Void Dispose(Boolean)
- [m]	Void Dispose()

f [t] System.IO.NotifyFilters

f [t] System.IO.RenamedEventArgs
+ [m]	Void .ctor(WatcherChangeTypes,String,String,String)
+ [m]	String get_OldFullPath()
+ [m]	String get_OldName()

f [t] System.IO.RenamedEventHandler
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object,RenamedEventArgs)
+ [m]	IAsyncResult BeginInvoke(Object,RenamedEventArgs,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.IO.WaitForChangedResult
+ [m]	WatcherChangeTypes get_ChangeType()
+ [m]	Void set_ChangeType(WatcherChangeTypes)
+ [m]	String get_Name()
+ [m]	Void set_Name(String)
+ [m]	String get_OldName()
+ [m]	Void set_OldName(String)
+ [m]	Boolean get_TimedOut()
+ [m]	Void set_TimedOut(Boolean)

f [t] System.IO.WatcherChangeTypes

---------------------------------------
+ [a] System.IO.IsolatedStorage.dll
ref: ./netstandard/packages/System.IO.IsolatedStorage/ref/netstandard1.4/System.IO.IsolatedStorage.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.IO.IsolatedStorage.dll

f [t] System.IO.IsolatedStorage.IsolatedStorageException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.IO.IsolatedStorage.IsolatedStorageFile
- [m]	Void .ctor()
+ [m]	Void CopyFile(String,String)
+ [m]	Void CopyFile(String,String,Boolean)
+ [m]	Void CreateDirectory(String)
+ [m]	IsolatedStorageFileStream CreateFile(String)
+ [m]	Void DeleteDirectory(String)
+ [m]	Void DeleteFile(String)
+ [m]	Boolean DirectoryExists(String)
+ [m]	Void Dispose()
+ [m]	Boolean FileExists(String)
+ [m]	DateTimeOffset GetCreationTime(String)
+ [m]	String[] GetDirectoryNames()
+ [m]	String[] GetDirectoryNames(String)
+ [m]	String[] GetFileNames()
+ [m]	String[] GetFileNames(String)
+ [m]	DateTimeOffset GetLastAccessTime(String)
+ [m]	DateTimeOffset GetLastWriteTime(String)
+ [m]	IsolatedStorageFile GetUserStoreForApplication()
+ [m]	Void MoveDirectory(String,String)
+ [m]	Void MoveFile(String,String)
+ [m]	IsolatedStorageFileStream OpenFile(String,FileMode)
+ [m]	IsolatedStorageFileStream OpenFile(String,FileMode,FileAccess)
+ [m]	IsolatedStorageFileStream OpenFile(String,FileMode,FileAccess,FileShare)

f [t] System.IO.IsolatedStorage.IsolatedStorageFileStream
+ [m]	Void .ctor(String,FileMode,FileAccess,FileShare,IsolatedStorageFile)
+ [m]	Void .ctor(String,FileMode,FileAccess,IsolatedStorageFile)
+ [m]	Void .ctor(String,FileMode,IsolatedStorageFile)
+ [m]	Boolean get_CanRead()
+ [m]	Boolean get_CanSeek()
+ [m]	Boolean get_CanWrite()
+ [m]	Int64 get_Length()
+ [m]	Int64 get_Position()
+ [m]	Void set_Position(Int64)
+ [m]	Void Dispose(Boolean)
+ [m]	Void Flush()
- [m]	Task FlushAsync(CancellationToken)
+ [m]	Int32 Read(Byte[],Int32,Int32)
- [m]	Task`1 ReadAsync(Byte[],Int32,Int32,CancellationToken)
+ [m]	Int32 ReadByte()
+ [m]	Int64 Seek(Int64,SeekOrigin)
+ [m]	Void SetLength(Int64)
+ [m]	Void Write(Byte[],Int32,Int32)
- [m]	Task WriteAsync(Byte[],Int32,Int32,CancellationToken)
+ [m]	Void WriteByte(Byte)

---------------------------------------
+ [a] System.IO.MemoryMappedFiles.dll
ref: ./netstandard/packages/System.IO.MemoryMappedFiles/ref/netstandard1.3/System.IO.MemoryMappedFiles.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.IO.MemoryMappedFiles.dll

f [t] System.IO.MemoryMappedFiles.MemoryMappedFile
+ [m]	Void .ctor()
! [m]	SafeMemoryMappedFileHandle get_SafeMemoryMappedFileHandle()
- [m]	MemoryMappedFile CreateFromFile(FileStream,String,Int64,MemoryMappedFileAccess,HandleInheritability,Boolean)
+ [m]	MemoryMappedFile CreateFromFile(String)
+ [m]	MemoryMappedFile CreateFromFile(String,FileMode)
+ [m]	MemoryMappedFile CreateFromFile(String,FileMode,String)
+ [m]	MemoryMappedFile CreateFromFile(String,FileMode,String,Int64)
+ [m]	MemoryMappedFile CreateFromFile(String,FileMode,String,Int64,MemoryMappedFileAccess)
+ [m]	MemoryMappedFile CreateNew(String,Int64)
+ [m]	MemoryMappedFile CreateNew(String,Int64,MemoryMappedFileAccess)
- [m]	MemoryMappedFile CreateNew(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
+ [m]	MemoryMappedFile CreateOrOpen(String,Int64)
+ [m]	MemoryMappedFile CreateOrOpen(String,Int64,MemoryMappedFileAccess)
- [m]	MemoryMappedFile CreateOrOpen(String,Int64,MemoryMappedFileAccess,MemoryMappedFileOptions,HandleInheritability)
+ [m]	MemoryMappedViewAccessor CreateViewAccessor()
+ [m]	MemoryMappedViewAccessor CreateViewAccessor(Int64,Int64)
+ [m]	MemoryMappedViewAccessor CreateViewAccessor(Int64,Int64,MemoryMappedFileAccess)
+ [m]	MemoryMappedViewStream CreateViewStream()
+ [m]	MemoryMappedViewStream CreateViewStream(Int64,Int64)
+ [m]	MemoryMappedViewStream CreateViewStream(Int64,Int64,MemoryMappedFileAccess)
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
! [m]	MemoryMappedFile OpenExisting(String)
! [m]	MemoryMappedFile OpenExisting(String,MemoryMappedFileRights)
! [m]	MemoryMappedFile OpenExisting(String,MemoryMappedFileRights,HandleInheritability)

f [t] System.IO.MemoryMappedFiles.MemoryMappedFileAccess

f [t] System.IO.MemoryMappedFiles.MemoryMappedFileOptions

f [t] System.IO.MemoryMappedFiles.MemoryMappedFileRights

f [t] System.IO.MemoryMappedFiles.MemoryMappedViewAccessor
- [m]	Void .ctor()
+ [m]	Int64 get_PointerOffset()
+ [m]	SafeMemoryMappedViewHandle get_SafeMemoryMappedViewHandle()
+ [m]	Void Dispose(Boolean)
+ [m]	Void Flush()

f [t] System.IO.MemoryMappedFiles.MemoryMappedViewStream
- [m]	Void .ctor()
+ [m]	Int64 get_PointerOffset()
+ [m]	SafeMemoryMappedViewHandle get_SafeMemoryMappedViewHandle()
+ [m]	Void Dispose(Boolean)
+ [m]	Void Flush()
+ [m]	Void SetLength(Int64)

f [t] Microsoft.Win32.SafeHandles.SafeMemoryMappedFileHandle
- [m]	Void .ctor()
! [m]	Boolean ReleaseHandle()
- [m]	Boolean get_IsInvalid()

f [t] Microsoft.Win32.SafeHandles.SafeMemoryMappedViewHandle
- [m]	Void .ctor()
+ [m]	Boolean ReleaseHandle()

---------------------------------------
- [a] System.IO.Packaging.dll
---------------------------------------
+ [a] System.IO.Pipes.dll
ref: ./netstandard/packages/System.IO.Pipes/ref/netstandard1.3/System.IO.Pipes.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.IO.Pipes.dll

f [t] System.IO.Pipes.AnonymousPipeClientStream
+ [m]	Void .ctor(PipeDirection,SafePipeHandle)
+ [m]	Void .ctor(PipeDirection,String)
+ [m]	Void .ctor(String)
+ [m]	Void set_ReadMode(PipeTransmissionMode)
+ [m]	PipeTransmissionMode get_TransmissionMode()
+ [m]	Void Finalize()

f [t] System.IO.Pipes.AnonymousPipeServerStream
+ [m]	Void .ctor()
+ [m]	Void .ctor(PipeDirection)
+ [m]	Void .ctor(PipeDirection,SafePipeHandle,SafePipeHandle)
+ [m]	Void .ctor(PipeDirection,HandleInheritability)
+ [m]	Void .ctor(PipeDirection,HandleInheritability,Int32)
+ [m]	SafePipeHandle get_ClientSafePipeHandle()
+ [m]	Void set_ReadMode(PipeTransmissionMode)
+ [m]	PipeTransmissionMode get_TransmissionMode()
- [m]	Void Dispose(Boolean)
+ [m]	Void DisposeLocalCopyOfClientHandle()
+ [m]	Void Finalize()
+ [m]	String GetClientHandleAsString()

f [t] System.IO.Pipes.NamedPipeClientStream
+ [m]	Void .ctor(PipeDirection,Boolean,Boolean,SafePipeHandle)
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,String)
+ [m]	Void .ctor(String,String,PipeDirection)
+ [m]	Void .ctor(String,String,PipeDirection,PipeOptions)
+ [m]	Void .ctor(String,String,PipeDirection,PipeOptions,TokenImpersonationLevel)
+ [m]	Int32 get_NumberOfServerInstances()
! [m]	Void Connect()
! [m]	Void Connect(Int32)
- [m]	Task ConnectAsync()
- [m]	Task ConnectAsync(Int32)
- [m]	Task ConnectAsync(Int32,CancellationToken)
- [m]	Task ConnectAsync(CancellationToken)
- [m]	Void Finalize()

f [t] System.IO.Pipes.NamedPipeServerStream
+ [m]	Void .ctor(PipeDirection,Boolean,Boolean,SafePipeHandle)
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,PipeDirection)
+ [m]	Void .ctor(String,PipeDirection,Int32)
+ [m]	Void .ctor(String,PipeDirection,Int32,PipeTransmissionMode)
+ [m]	Void .ctor(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions)
+ [m]	Void .ctor(String,PipeDirection,Int32,PipeTransmissionMode,PipeOptions,Int32,Int32)
+ [m]	Void Disconnect()
+ [m]	Void Finalize()
! [m]	String GetImpersonationUserName()
+ [m]	Void WaitForConnection()
- [m]	Task WaitForConnectionAsync()
- [m]	Task WaitForConnectionAsync(CancellationToken)

f [t] System.IO.Pipes.PipeDirection

f [t] System.IO.Pipes.PipeOptions

f [t] System.IO.Pipes.PipeStream
+ [m]	Void .ctor(PipeDirection,Int32)
+ [m]	Void .ctor(PipeDirection,PipeTransmissionMode,Int32)
+ [m]	Boolean get_CanRead()
+ [m]	Boolean get_CanSeek()
+ [m]	Boolean get_CanWrite()
+ [m]	Int32 get_InBufferSize()
+ [m]	Boolean get_IsAsync()
+ [m]	Boolean get_IsConnected()
+ [m]	Void set_IsConnected(Boolean)
+ [m]	Boolean get_IsMessageComplete()
+ [m]	Int64 get_Length()
+ [m]	Int32 get_OutBufferSize()
+ [m]	Int64 get_Position()
+ [m]	Void set_Position(Int64)
+ [m]	PipeTransmissionMode get_ReadMode()
+ [m]	Void set_ReadMode(PipeTransmissionMode)
+ [m]	SafePipeHandle get_SafePipeHandle()
+ [m]	PipeTransmissionMode get_TransmissionMode()
+ [m]	Void Dispose(Boolean)
+ [m]	Void Flush()
+ [m]	Int32 Read(Byte[],Int32,Int32)
+ [m]	Int32 ReadByte()
+ [m]	Int64 Seek(Int64,SeekOrigin)
+ [m]	Void SetLength(Int64)
- [m]	Void WaitForPipeDrain()
+ [m]	Void Write(Byte[],Int32,Int32)
+ [m]	Void WriteByte(Byte)
- [m]	Task`1 ReadAsync(Byte[],Int32,Int32,CancellationToken)
- [m]	Task WriteAsync(Byte[],Int32,Int32,CancellationToken)

f [t] System.IO.Pipes.PipeTransmissionMode

f [t] Microsoft.Win32.SafeHandles.SafePipeHandle
+ [m]	Void .ctor(IntPtr,Boolean)
+ [m]	Boolean ReleaseHandle()
- [m]	Boolean get_IsInvalid()

---------------------------------------
+ [a] System.IO.UnmanagedMemoryStream.dll
ref: ./netstandard/packages/System.IO.UnmanagedMemoryStream/ref/netstandard1.3/System.IO.UnmanagedMemoryStream.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.IO.UnmanagedMemoryStream.dll

f [t] System.IO.UnmanagedMemoryAccessor
+ [m]	Void .ctor()
+ [m]	Void .ctor(SafeBuffer,Int64,Int64)
+ [m]	Void .ctor(SafeBuffer,Int64,Int64,FileAccess)
+ [m]	Boolean get_CanRead()
+ [m]	Boolean get_CanWrite()
+ [m]	Int64 get_Capacity()
+ [m]	Boolean get_IsOpen()
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Void Initialize(SafeBuffer,Int64,Int64,FileAccess)
+ [m]	Boolean ReadBoolean(Int64)
+ [m]	Byte ReadByte(Int64)
+ [m]	Char ReadChar(Int64)
+ [m]	Decimal ReadDecimal(Int64)
+ [m]	Double ReadDouble(Int64)
+ [m]	Int16 ReadInt16(Int64)
+ [m]	Int32 ReadInt32(Int64)
+ [m]	Int64 ReadInt64(Int64)
+ [m]	SByte ReadSByte(Int64)
+ [m]	Single ReadSingle(Int64)
+ [m]	UInt16 ReadUInt16(Int64)
+ [m]	UInt32 ReadUInt32(Int64)
+ [m]	UInt64 ReadUInt64(Int64)
+ [m]	Void Write(Int64,Boolean)
+ [m]	Void Write(Int64,Byte)
+ [m]	Void Write(Int64,Char)
+ [m]	Void Write(Int64,Decimal)
+ [m]	Void Write(Int64,Double)
+ [m]	Void Write(Int64,Int16)
+ [m]	Void Write(Int64,Int32)
+ [m]	Void Write(Int64,Int64)
+ [m]	Void Write(Int64,SByte)
+ [m]	Void Write(Int64,Single)
+ [m]	Void Write(Int64,UInt16)
+ [m]	Void Write(Int64,UInt32)
+ [m]	Void Write(Int64,UInt64)

f [t] System.IO.UnmanagedMemoryStream
+ [m]	Void .ctor()
+ [m]	Void .ctor(Byte*,Int64)
+ [m]	Void .ctor(Byte*,Int64,Int64,FileAccess)
+ [m]	Void .ctor(SafeBuffer,Int64,Int64)
+ [m]	Void .ctor(SafeBuffer,Int64,Int64,FileAccess)
+ [m]	Boolean get_CanRead()
+ [m]	Boolean get_CanSeek()
+ [m]	Boolean get_CanWrite()
+ [m]	Int64 get_Capacity()
+ [m]	Int64 get_Length()
+ [m]	Int64 get_Position()
+ [m]	Void set_Position(Int64)
+ [m]	Byte* get_PositionPointer()
+ [m]	Void set_PositionPointer(Byte*)
+ [m]	Void Dispose(Boolean)
+ [m]	Void Flush()
+ [m]	Task FlushAsync(CancellationToken)
+ [m]	Void Initialize(Byte*,Int64,Int64,FileAccess)
+ [m]	Void Initialize(SafeBuffer,Int64,Int64,FileAccess)
+ [m]	Int32 Read(Byte[],Int32,Int32)
+ [m]	Task`1 ReadAsync(Byte[],Int32,Int32,CancellationToken)
+ [m]	Int32 ReadByte()
+ [m]	Int64 Seek(Int64,SeekOrigin)
+ [m]	Void SetLength(Int64)
+ [m]	Void Write(Byte[],Int32,Int32)
+ [m]	Task WriteAsync(Byte[],Int32,Int32,CancellationToken)
+ [m]	Void WriteByte(Byte)

---------------------------------------
+ [a] System.Linq.dll
ref: ./netstandard/packages/System.Linq/ref/netstandard1.6/System.Linq.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Linq.dll

f [t] System.Linq.Enumerable
+ [m]	TSource Aggregate(IEnumerable`1,Func`3)
+ [m]	TAccumulate Aggregate(IEnumerable`1,TAccumulate,Func`3)
+ [m]	TResult Aggregate(IEnumerable`1,TAccumulate,Func`3,Func`2)
+ [m]	Boolean All(IEnumerable`1,Func`2)
+ [m]	Boolean Any(IEnumerable`1)
+ [m]	Boolean Any(IEnumerable`1,Func`2)
+ [m]	IEnumerable`1 AsEnumerable(IEnumerable`1)
+ [m]	Decimal Average(IEnumerable`1)
+ [m]	Double Average(IEnumerable`1)
+ [m]	Double Average(IEnumerable`1)
+ [m]	Double Average(IEnumerable`1)
+ [m]	Nullable`1 Average(IEnumerable`1)
+ [m]	Nullable`1 Average(IEnumerable`1)
+ [m]	Nullable`1 Average(IEnumerable`1)
+ [m]	Nullable`1 Average(IEnumerable`1)
+ [m]	Nullable`1 Average(IEnumerable`1)
+ [m]	Single Average(IEnumerable`1)
+ [m]	Decimal Average(IEnumerable`1,Func`2)
+ [m]	Double Average(IEnumerable`1,Func`2)
+ [m]	Double Average(IEnumerable`1,Func`2)
+ [m]	Double Average(IEnumerable`1,Func`2)
+ [m]	Nullable`1 Average(IEnumerable`1,Func`2)
+ [m]	Nullable`1 Average(IEnumerable`1,Func`2)
+ [m]	Nullable`1 Average(IEnumerable`1,Func`2)
+ [m]	Nullable`1 Average(IEnumerable`1,Func`2)
+ [m]	Nullable`1 Average(IEnumerable`1,Func`2)
+ [m]	Single Average(IEnumerable`1,Func`2)
+ [m]	IEnumerable`1 Cast(IEnumerable)
+ [m]	IEnumerable`1 Concat(IEnumerable`1,IEnumerable`1)
- [m]	IEnumerable`1 Append(IEnumerable`1,TSource)
- [m]	IEnumerable`1 Prepend(IEnumerable`1,TSource)
+ [m]	Boolean Contains(IEnumerable`1,TSource)
+ [m]	Boolean Contains(IEnumerable`1,TSource,IEqualityComparer`1)
+ [m]	Int32 Count(IEnumerable`1)
+ [m]	Int32 Count(IEnumerable`1,Func`2)
+ [m]	IEnumerable`1 DefaultIfEmpty(IEnumerable`1)
+ [m]	IEnumerable`1 DefaultIfEmpty(IEnumerable`1,TSource)
+ [m]	IEnumerable`1 Distinct(IEnumerable`1)
+ [m]	IEnumerable`1 Distinct(IEnumerable`1,IEqualityComparer`1)
+ [m]	TSource ElementAt(IEnumerable`1,Int32)
+ [m]	TSource ElementAtOrDefault(IEnumerable`1,Int32)
+ [m]	IEnumerable`1 Empty()
+ [m]	IEnumerable`1 Except(IEnumerable`1,IEnumerable`1)
+ [m]	IEnumerable`1 Except(IEnumerable`1,IEnumerable`1,IEqualityComparer`1)
+ [m]	TSource First(IEnumerable`1)
+ [m]	TSource First(IEnumerable`1,Func`2)
+ [m]	TSource FirstOrDefault(IEnumerable`1)
+ [m]	TSource FirstOrDefault(IEnumerable`1,Func`2)
+ [m]	IEnumerable`1 GroupBy(IEnumerable`1,Func`2)
+ [m]	IEnumerable`1 GroupBy(IEnumerable`1,Func`2,IEqualityComparer`1)
+ [m]	IEnumerable`1 GroupBy(IEnumerable`1,Func`2,Func`2)
+ [m]	IEnumerable`1 GroupBy(IEnumerable`1,Func`2,Func`2,IEqualityComparer`1)
+ [m]	IEnumerable`1 GroupBy(IEnumerable`1,Func`2,Func`3)
+ [m]	IEnumerable`1 GroupBy(IEnumerable`1,Func`2,Func`3,IEqualityComparer`1)
+ [m]	IEnumerable`1 GroupBy(IEnumerable`1,Func`2,Func`2,Func`3)
+ [m]	IEnumerable`1 GroupBy(IEnumerable`1,Func`2,Func`2,Func`3,IEqualityComparer`1)
+ [m]	IEnumerable`1 GroupJoin(IEnumerable`1,IEnumerable`1,Func`2,Func`2,Func`3)
+ [m]	IEnumerable`1 GroupJoin(IEnumerable`1,IEnumerable`1,Func`2,Func`2,Func`3,IEqualityComparer`1)
+ [m]	IEnumerable`1 Intersect(IEnumerable`1,IEnumerable`1)
+ [m]	IEnumerable`1 Intersect(IEnumerable`1,IEnumerable`1,IEqualityComparer`1)
+ [m]	IEnumerable`1 Join(IEnumerable`1,IEnumerable`1,Func`2,Func`2,Func`3)
+ [m]	IEnumerable`1 Join(IEnumerable`1,IEnumerable`1,Func`2,Func`2,Func`3,IEqualityComparer`1)
+ [m]	TSource Last(IEnumerable`1)
+ [m]	TSource Last(IEnumerable`1,Func`2)
+ [m]	TSource LastOrDefault(IEnumerable`1)
+ [m]	TSource LastOrDefault(IEnumerable`1,Func`2)
+ [m]	Int64 LongCount(IEnumerable`1)
+ [m]	Int64 LongCount(IEnumerable`1,Func`2)
+ [m]	Decimal Max(IEnumerable`1)
+ [m]	Double Max(IEnumerable`1)
+ [m]	Int32 Max(IEnumerable`1)
+ [m]	Int64 Max(IEnumerable`1)
+ [m]	Nullable`1 Max(IEnumerable`1)
+ [m]	Nullable`1 Max(IEnumerable`1)
+ [m]	Nullable`1 Max(IEnumerable`1)
+ [m]	Nullable`1 Max(IEnumerable`1)
+ [m]	Nullable`1 Max(IEnumerable`1)
+ [m]	Single Max(IEnumerable`1)
+ [m]	TSource Max(IEnumerable`1)
+ [m]	Decimal Max(IEnumerable`1,Func`2)
+ [m]	Double Max(IEnumerable`1,Func`2)
+ [m]	Int32 Max(IEnumerable`1,Func`2)
+ [m]	Int64 Max(IEnumerable`1,Func`2)
+ [m]	Nullable`1 Max(IEnumerable`1,Func`2)
+ [m]	Nullable`1 Max(IEnumerable`1,Func`2)
+ [m]	Nullable`1 Max(IEnumerable`1,Func`2)
+ [m]	Nullable`1 Max(IEnumerable`1,Func`2)
+ [m]	Nullable`1 Max(IEnumerable`1,Func`2)
+ [m]	Single Max(IEnumerable`1,Func`2)
+ [m]	TResult Max(IEnumerable`1,Func`2)
+ [m]	Decimal Min(IEnumerable`1)
+ [m]	Double Min(IEnumerable`1)
+ [m]	Int32 Min(IEnumerable`1)
+ [m]	Int64 Min(IEnumerable`1)
+ [m]	Nullable`1 Min(IEnumerable`1)
+ [m]	Nullable`1 Min(IEnumerable`1)
+ [m]	Nullable`1 Min(IEnumerable`1)
+ [m]	Nullable`1 Min(IEnumerable`1)
+ [m]	Nullable`1 Min(IEnumerable`1)
+ [m]	Single Min(IEnumerable`1)
+ [m]	TSource Min(IEnumerable`1)
+ [m]	Decimal Min(IEnumerable`1,Func`2)
+ [m]	Double Min(IEnumerable`1,Func`2)
+ [m]	Int32 Min(IEnumerable`1,Func`2)
+ [m]	Int64 Min(IEnumerable`1,Func`2)
+ [m]	Nullable`1 Min(IEnumerable`1,Func`2)
+ [m]	Nullable`1 Min(IEnumerable`1,Func`2)
+ [m]	Nullable`1 Min(IEnumerable`1,Func`2)
+ [m]	Nullable`1 Min(IEnumerable`1,Func`2)
+ [m]	Nullable`1 Min(IEnumerable`1,Func`2)
+ [m]	Single Min(IEnumerable`1,Func`2)
+ [m]	TResult Min(IEnumerable`1,Func`2)
+ [m]	IEnumerable`1 OfType(IEnumerable)
+ [m]	IOrderedEnumerable`1 OrderBy(IEnumerable`1,Func`2)
+ [m]	IOrderedEnumerable`1 OrderBy(IEnumerable`1,Func`2,IComparer`1)
+ [m]	IOrderedEnumerable`1 OrderByDescending(IEnumerable`1,Func`2)
+ [m]	IOrderedEnumerable`1 OrderByDescending(IEnumerable`1,Func`2,IComparer`1)
+ [m]	IEnumerable`1 Range(Int32,Int32)
+ [m]	IEnumerable`1 Repeat(TResult,Int32)
+ [m]	IEnumerable`1 Reverse(IEnumerable`1)
+ [m]	IEnumerable`1 Select(IEnumerable`1,Func`2)
+ [m]	IEnumerable`1 Select(IEnumerable`1,Func`3)
+ [m]	IEnumerable`1 SelectMany(IEnumerable`1,Func`2)
+ [m]	IEnumerable`1 SelectMany(IEnumerable`1,Func`3)
+ [m]	IEnumerable`1 SelectMany(IEnumerable`1,Func`2,Func`3)
+ [m]	IEnumerable`1 SelectMany(IEnumerable`1,Func`3,Func`3)
+ [m]	Boolean SequenceEqual(IEnumerable`1,IEnumerable`1)
+ [m]	Boolean SequenceEqual(IEnumerable`1,IEnumerable`1,IEqualityComparer`1)
+ [m]	TSource Single(IEnumerable`1)
+ [m]	TSource Single(IEnumerable`1,Func`2)
+ [m]	TSource SingleOrDefault(IEnumerable`1)
+ [m]	TSource SingleOrDefault(IEnumerable`1,Func`2)
+ [m]	IEnumerable`1 Skip(IEnumerable`1,Int32)
+ [m]	IEnumerable`1 SkipWhile(IEnumerable`1,Func`2)
+ [m]	IEnumerable`1 SkipWhile(IEnumerable`1,Func`3)
+ [m]	Decimal Sum(IEnumerable`1)
+ [m]	Double Sum(IEnumerable`1)
+ [m]	Int32 Sum(IEnumerable`1)
+ [m]	Int64 Sum(IEnumerable`1)
+ [m]	Nullable`1 Sum(IEnumerable`1)
+ [m]	Nullable`1 Sum(IEnumerable`1)
+ [m]	Nullable`1 Sum(IEnumerable`1)
+ [m]	Nullable`1 Sum(IEnumerable`1)
+ [m]	Nullable`1 Sum(IEnumerable`1)
+ [m]	Single Sum(IEnumerable`1)
+ [m]	Decimal Sum(IEnumerable`1,Func`2)
+ [m]	Double Sum(IEnumerable`1,Func`2)
+ [m]	Int32 Sum(IEnumerable`1,Func`2)
+ [m]	Int64 Sum(IEnumerable`1,Func`2)
+ [m]	Nullable`1 Sum(IEnumerable`1,Func`2)
+ [m]	Nullable`1 Sum(IEnumerable`1,Func`2)
+ [m]	Nullable`1 Sum(IEnumerable`1,Func`2)
+ [m]	Nullable`1 Sum(IEnumerable`1,Func`2)
+ [m]	Nullable`1 Sum(IEnumerable`1,Func`2)
+ [m]	Single Sum(IEnumerable`1,Func`2)
+ [m]	IEnumerable`1 Take(IEnumerable`1,Int32)
+ [m]	IEnumerable`1 TakeWhile(IEnumerable`1,Func`2)
+ [m]	IEnumerable`1 TakeWhile(IEnumerable`1,Func`3)
+ [m]	IOrderedEnumerable`1 ThenBy(IOrderedEnumerable`1,Func`2)
+ [m]	IOrderedEnumerable`1 ThenBy(IOrderedEnumerable`1,Func`2,IComparer`1)
+ [m]	IOrderedEnumerable`1 ThenByDescending(IOrderedEnumerable`1,Func`2)
+ [m]	IOrderedEnumerable`1 ThenByDescending(IOrderedEnumerable`1,Func`2,IComparer`1)
+ [m]	TSource[] ToArray(IEnumerable`1)
+ [m]	Dictionary`2 ToDictionary(IEnumerable`1,Func`2)
+ [m]	Dictionary`2 ToDictionary(IEnumerable`1,Func`2,IEqualityComparer`1)
+ [m]	Dictionary`2 ToDictionary(IEnumerable`1,Func`2,Func`2)
+ [m]	Dictionary`2 ToDictionary(IEnumerable`1,Func`2,Func`2,IEqualityComparer`1)
+ [m]	List`1 ToList(IEnumerable`1)
+ [m]	ILookup`2 ToLookup(IEnumerable`1,Func`2)
+ [m]	ILookup`2 ToLookup(IEnumerable`1,Func`2,IEqualityComparer`1)
+ [m]	ILookup`2 ToLookup(IEnumerable`1,Func`2,Func`2)
+ [m]	ILookup`2 ToLookup(IEnumerable`1,Func`2,Func`2,IEqualityComparer`1)
+ [m]	IEnumerable`1 Union(IEnumerable`1,IEnumerable`1)
+ [m]	IEnumerable`1 Union(IEnumerable`1,IEnumerable`1,IEqualityComparer`1)
+ [m]	IEnumerable`1 Where(IEnumerable`1,Func`2)
+ [m]	IEnumerable`1 Where(IEnumerable`1,Func`3)
+ [m]	IEnumerable`1 Zip(IEnumerable`1,IEnumerable`1,Func`3)

f [t] System.Linq.IGrouping`2
+ [m]	TKey get_Key()

f [t] System.Linq.ILookup`2
+ [m]	Int32 get_Count()
+ [m]	IEnumerable`1 get_Item(TKey)
+ [m]	Boolean Contains(TKey)

f [t] System.Linq.IOrderedEnumerable`1
+ [m]	IOrderedEnumerable`1 CreateOrderedEnumerable(Func`2,IComparer`1,Boolean)

f [t] System.Linq.Lookup`2
- [m]	Void .ctor()
+ [m]	Int32 get_Count()
+ [m]	IEnumerable`1 get_Item(TKey)
+ [m]	IEnumerable`1 ApplyResultSelector(Func`3)
+ [m]	Boolean Contains(TKey)
+ [m]	IEnumerator`1 GetEnumerator()
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()

---------------------------------------
+ [a] System.Linq.Expressions.dll
ref: ./netstandard/packages/System.Linq.Expressions/ref/netstandard1.6/System.Linq.Expressions.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Linq.Expressions.dll

f [t] System.Linq.IOrderedQueryable

f [t] System.Linq.IOrderedQueryable`1

f [t] System.Linq.IQueryable
+ [m]	Type get_ElementType()
+ [m]	Expression get_Expression()
+ [m]	IQueryProvider get_Provider()

f [t] System.Linq.IQueryable`1

f [t] System.Linq.IQueryProvider
+ [m]	IQueryable CreateQuery(Expression)
+ [m]	IQueryable`1 CreateQuery(Expression)
+ [m]	Object Execute(Expression)
+ [m]	TResult Execute(Expression)

f [t] System.Linq.Expressions.BinaryExpression
- [m]	Void .ctor()
+ [m]	Boolean get_CanReduce()
+ [m]	LambdaExpression get_Conversion()
+ [m]	Boolean get_IsLifted()
+ [m]	Boolean get_IsLiftedToNull()
+ [m]	Expression get_Left()
+ [m]	MethodInfo get_Method()
+ [m]	Expression get_Right()
+ [m]	Expression Accept(ExpressionVisitor)
+ [m]	Expression Reduce()
+ [m]	BinaryExpression Update(Expression,LambdaExpression,Expression)

f [t] System.Linq.Expressions.BlockExpression
+ [m]	Void .ctor()
+ [m]	ReadOnlyCollection`1 get_Expressions()
+ [m]	ExpressionType get_NodeType()
+ [m]	Expression get_Result()
+ [m]	Type get_Type()
+ [m]	ReadOnlyCollection`1 get_Variables()
+ [m]	Expression Accept(ExpressionVisitor)
+ [m]	BlockExpression Update(IEnumerable`1,IEnumerable`1)

f [t] System.Linq.Expressions.CatchBlock
- [m]	Void .ctor()
+ [m]	Expression get_Body()
+ [m]	Expression get_Filter()
+ [m]	Type get_Test()
+ [m]	ParameterExpression get_Variable()
+ [m]	String ToString()
+ [m]	CatchBlock Update(ParameterExpression,Expression,Expression)

f [t] System.Linq.Expressions.ConditionalExpression
- [m]	Void .ctor()
+ [m]	Expression get_IfFalse()
+ [m]	Expression get_IfTrue()
+ [m]	ExpressionType get_NodeType()
+ [m]	Expression get_Test()
+ [m]	Type get_Type()
+ [m]	Expression Accept(ExpressionVisitor)
+ [m]	ConditionalExpression Update(Expression,Expression,Expression)

f [t] System.Linq.Expressions.ConstantExpression
- [m]	Void .ctor()
+ [m]	ExpressionType get_NodeType()
+ [m]	Type get_Type()
+ [m]	Object get_Value()
+ [m]	Expression Accept(ExpressionVisitor)

f [t] System.Linq.Expressions.DebugInfoExpression
- [m]	Void .ctor()
+ [m]	SymbolDocumentInfo get_Document()
+ [m]	Int32 get_EndColumn()
+ [m]	Int32 get_EndLine()
+ [m]	Boolean get_IsClear()
+ [m]	ExpressionType get_NodeType()
+ [m]	Int32 get_StartColumn()
+ [m]	Int32 get_StartLine()
+ [m]	Type get_Type()
+ [m]	Expression Accept(ExpressionVisitor)

f [t] System.Linq.Expressions.DefaultExpression
- [m]	Void .ctor()
+ [m]	ExpressionType get_NodeType()
+ [m]	Type get_Type()
+ [m]	Expression Accept(ExpressionVisitor)

f [t] System.Linq.Expressions.ElementInit
- [m]	Void .ctor()
+ [m]	MethodInfo get_AddMethod()
+ [m]	ReadOnlyCollection`1 get_Arguments()
+ [m]	Int32 System.Linq.Expressions.IArgumentProvider.get_ArgumentCount()
+ [m]	Expression System.Linq.Expressions.IArgumentProvider.GetArgument(Int32)
+ [m]	String ToString()
+ [m]	ElementInit Update(IEnumerable`1)

f [t] System.Linq.Expressions.Expression
+ [m]	Void .ctor()
+ [m]	Boolean get_CanReduce()
+ [m]	ExpressionType get_NodeType()
+ [m]	Type get_Type()
+ [m]	Expression Accept(ExpressionVisitor)
+ [m]	BinaryExpression Add(Expression,Expression)
+ [m]	BinaryExpression Add(Expression,Expression,MethodInfo)
+ [m]	BinaryExpression AddAssign(Expression,Expression)
+ [m]	BinaryExpression AddAssign(Expression,Expression,MethodInfo)
+ [m]	BinaryExpression AddAssign(Expression,Expression,MethodInfo,LambdaExpression)
+ [m]	BinaryExpression AddAssignChecked(Expression,Expression)
+ [m]	BinaryExpression AddAssignChecked(Expression,Expression,MethodInfo)
+ [m]	BinaryExpression AddAssignChecked(Expression,Expression,MethodInfo,LambdaExpression)
+ [m]	BinaryExpression AddChecked(Expression,Expression)
+ [m]	BinaryExpression AddChecked(Expression,Expression,MethodInfo)
+ [m]	BinaryExpression And(Expression,Expression)
+ [m]	BinaryExpression And(Expression,Expression,MethodInfo)
+ [m]	BinaryExpression AndAlso(Expression,Expression)
+ [m]	BinaryExpression AndAlso(Expression,Expression,MethodInfo)
+ [m]	BinaryExpression AndAssign(Expression,Expression)
+ [m]	BinaryExpression AndAssign(Expression,Expression,MethodInfo)
+ [m]	BinaryExpression AndAssign(Expression,Expression,MethodInfo,LambdaExpression)
+ [m]	IndexExpression ArrayAccess(Expression,IEnumerable`1)
+ [m]	IndexExpression ArrayAccess(Expression,Expression[])
+ [m]	MethodCallExpression ArrayIndex(Expression,IEnumerable`1)
+ [m]	BinaryExpression ArrayIndex(Expression,Expression)
+ [m]	MethodCallExpression ArrayIndex(Expression,Expression[])
+ [m]	UnaryExpression ArrayLength(Expression)
+ [m]	BinaryExpression Assign(Expression,Expression)
+ [m]	MemberAssignment Bind(MemberInfo,Expression)
+ [m]	MemberAssignment Bind(MethodInfo,Expression)
+ [m]	BlockExpression Block(IEnumerable`1)
+ [m]	BlockExpression Block(IEnumerable`1,IEnumerable`1)
+ [m]	BlockExpression Block(IEnumerable`1,Expression[])
+ [m]	BlockExpression Block(Expression,Expression)
+ [m]	BlockExpression Block(Expression,Expression,Expression)
+ [m]	BlockExpression Block(Expression,Expression,Expression,Expression)
+ [m]	BlockExpression Block(Expression,Expression,Expression,Expression,Expression)
+ [m]	BlockExpression Block(Expression[])
+ [m]	BlockExpression Block(Type,IEnumerable`1)
+ [m]	BlockExpression Block(Type,IEnumerable`1,IEnumerable`1)
+ [m]	BlockExpression Block(Type,IEnumerable`1,Expression[])
+ [m]	BlockExpression Block(Type,Expression[])
+ [m]	GotoExpression Break(LabelTarget)
+ [m]	GotoExpression Break(LabelTarget,Expression)
+ [m]	GotoExpression Break(LabelTarget,Expression,Type)
+ [m]	GotoExpression Break(LabelTarget,Type)
+ [m]	MethodCallExpression Call(Expression,MethodInfo)
+ [m]	MethodCallExpression Call(Expression,MethodInfo,IEnumerable`1)
+ [m]	MethodCallExpression Call(Expression,MethodInfo,Expression,Expression)
+ [m]	MethodCallExpression Call(Expression,MethodInfo,Expression,Expression,Expression)
+ [m]	MethodCallExpression Call(Expression,MethodInfo,Expression[])
+ [m]	MethodCallExpression Call(Expression,String,Type[],Expression[])
+ [m]	MethodCallExpression Call(MethodInfo,IEnumerable`1)
+ [m]	MethodCallExpression Call(MethodInfo,Expression)
+ [m]	MethodCallExpression Call(MethodInfo,Expression,Expression)
+ [m]	MethodCallExpression Call(MethodInfo,Expression,Expression,Expression)
+ [m]	MethodCallExpression Call(MethodInfo,Expression,Expression,Expression,Expression)
+ [m]	MethodCallExpression Call(MethodInfo,Expression,Expression,Expression,Expression,Expression)
+ [m]	MethodCallExpression Call(MethodInfo,Expression[])
+ [m]	MethodCallExpression Call(Type,String,Type[],Expression[])
+ [m]	CatchBlock Catch(ParameterExpression,Expression)
+ [m]	CatchBlock Catch(ParameterExpression,Expression,Expression)
+ [m]	CatchBlock Catch(Type,Expression)
+ [m]	CatchBlock Catch(Type,Expression,Expression)
+ [m]	DebugInfoExpression ClearDebugInfo(SymbolDocumentInfo)
+ [m]	BinaryExpression Coalesce(Expression,Expression)
+ [m]	BinaryExpression Coalesce(Expression,Expression,LambdaExpression)
+ [m]	ConditionalExpression Condition(Expression,Expression,Expression)
+ [m]	ConditionalExpression Condition(Expression,Expression,Expression,Type)
+ [m]	ConstantExpression Constant(Object)
+ [m]	ConstantExpression Constant(Object,Type)
+ [m]	GotoExpression Continue(LabelTarget)
+ [m]	GotoExpression Continue(LabelTarget,Type)
+ [m]	UnaryExpression Convert(Expression,Type)
+ [m]	UnaryExpression Convert(Expression,Type,MethodInfo)
+ [m]	UnaryExpression ConvertChecked(Expression,Type)
+ [m]	UnaryExpression ConvertChecked(Expression,Type,MethodInfo)
+ [m]	DebugInfoExpression DebugInfo(SymbolDocumentInfo,Int32,Int32,Int32,Int32)
+ [m]	UnaryExpression Decrement(Expression)
+ [m]	UnaryExpression Decrement(Expression,MethodInfo)
+ [m]	DefaultExpression Default(Type)
+ [m]	BinaryExpression Divide(Expression,Expression)
+ [m]	BinaryExpression Divide(Expression,Expression,MethodInfo)
+ [m]	BinaryExpression DivideAssign(Expression,Expression)
+ [m]	BinaryExpression DivideAssign(Expression,Expression,MethodInfo)
+ [m]	BinaryExpression DivideAssign(Expression,Expression,MethodInfo,LambdaExpression)
+ [m]	ElementInit ElementInit(MethodInfo,IEnumerable`1)
+ [m]	ElementInit ElementInit(MethodInfo,Expression[])
+ [m]	DefaultExpression Empty()
+ [m]	BinaryExpression Equal(Expression,Expression)
+ [m]	BinaryExpression Equal(Expression,Expression,Boolean,MethodInfo)
+ [m]	BinaryExpression ExclusiveOr(Expression,Expression)
+ [m]	BinaryExpression ExclusiveOr(Expression,Expression,MethodInfo)
+ [m]	BinaryExpression ExclusiveOrAssign(Expression,Expression)
+ [m]	BinaryExpression ExclusiveOrAssign(Expression,Expression,MethodInfo)
+ [m]	BinaryExpression ExclusiveOrAssign(Expression,Expression,MethodInfo,LambdaExpression)
+ [m]	MemberExpression Field(Expression,FieldInfo)
+ [m]	MemberExpression Field(Expression,String)
+ [m]	MemberExpression Field(Expression,Type,String)
+ [m]	Type GetActionType(Type[])
+ [m]	Type GetDelegateType(Type[])
+ [m]	Type GetFuncType(Type[])
+ [m]	GotoExpression Goto(LabelTarget)
+ [m]	GotoExpression Goto(LabelTarget,Expression)
+ [m]	GotoExpression Goto(LabelTarget,Expression,Type)
+ [m]	GotoExpression Goto(LabelTarget,Type)
+ [m]	BinaryExpression GreaterThan(Expression,Expression)
+ [m]	BinaryExpression GreaterThan(Expression,Expression,Boolean,MethodInfo)
+ [m]	BinaryExpression GreaterThanOrEqual(Expression,Expression)
+ [m]	BinaryExpression GreaterThanOrEqual(Expression,Expression,Boolean,MethodInfo)
+ [m]	ConditionalExpression IfThen(Expression,Expression)
+ [m]	ConditionalExpression IfThenElse(Expression,Expression,Expression)
+ [m]	UnaryExpression Increment(Expression)
+ [m]	UnaryExpression Increment(Expression,MethodInfo)
+ [m]	InvocationExpression Invoke(Expression,IEnumerable`1)
+ [m]	InvocationExpression Invoke(Expression,Expression[])
+ [m]	UnaryExpression IsFalse(Expression)
+ [m]	UnaryExpression IsFalse(Expression,MethodInfo)
+ [m]	UnaryExpression IsTrue(Expression)
+ [m]	UnaryExpression IsTrue(Expression,MethodInfo)
+ [m]	LabelTarget Label()
+ [m]	LabelExpression Label(LabelTarget)
+ [m]	LabelExpression Label(LabelTarget,Expression)
+ [m]	LabelTarget Label(String)
+ [m]	LabelTarget Label(Type)
+ [m]	LabelTarget Label(Type,String)
+ [m]	LambdaExpression Lambda(Expression,Boolean,IEnumerable`1)
+ [m]	LambdaExpression Lambda(Expression,Boolean,ParameterExpression[])
+ [m]	LambdaExpression Lambda(Expression,IEnumerable`1)
+ [m]	LambdaExpression Lambda(Expression,ParameterExpression[])
+ [m]	LambdaExpression Lambda(Expression,String,Boolean,IEnumerable`1)
+ [m]	LambdaExpression Lambda(Expression,String,IEnumerable`1)
+ [m]	LambdaExpression Lambda(Type,Expression,Boolean,IEnumerable`1)
+ [m]	LambdaExpression Lambda(Type,Expression,Boolean,ParameterExpression[])
+ [m]	LambdaExpression Lambda(Type,Expression,IEnumerable`1)
+ [m]	LambdaExpression Lambda(Type,Expression,ParameterExpression[])
+ [m]	LambdaExpression Lambda(Type,Expression,String,Boolean,IEnumerable`1)
+ [m]	LambdaExpression Lambda(Type,Expression,String,IEnumerable`1)
+ [m]	Expression`1 Lambda(Expression,Boolean,IEnumerable`1)
+ [m]	Expression`1 Lambda(Expression,Boolean,ParameterExpression[])
+ [m]	Expression`1 Lambda(Expression,IEnumerable`1)
+ [m]	Expression`1 Lambda(Expression,ParameterExpression[])
+ [m]	Expression`1 Lambda(Expression,String,Boolean,IEnumerable`1)
+ [m]	Expression`1 Lambda(Expression,String,IEnumerable`1)
+ [m]	BinaryExpression LeftShift(Expression,Expression)
+ [m]	BinaryExpression LeftShift(Expression,Expression,MethodInfo)
+ [m]	BinaryExpression LeftShiftAssign(Expression,Expression)
+ [m]	BinaryExpression LeftShiftAssign(Expression,Expression,MethodInfo)
+ [m]	BinaryExpression LeftShiftAssign(Expression,Expression,MethodInfo,LambdaExpression)
+ [m]	BinaryExpression LessThan(Expression,Expression)
+ [m]	BinaryExpression LessThan(Expression,Expression,Boolean,MethodInfo)
+ [m]	BinaryExpression LessThanOrEqual(Expression,Expression)
+ [m]	BinaryExpression LessThanOrEqual(Expression,Expression,Boolean,MethodInfo)
+ [m]	MemberListBinding ListBind(MemberInfo,IEnumerable`1)
+ [m]	MemberListBinding ListBind(MemberInfo,ElementInit[])
+ [m]	MemberListBinding ListBind(MethodInfo,IEnumerable`1)
+ [m]	MemberListBinding ListBind(MethodInfo,ElementInit[])
+ [m]	ListInitExpression ListInit(NewExpression,IEnumerable`1)
+ [m]	ListInitExpression ListInit(NewExpression,IEnumerable`1)
+ [m]	ListInitExpression ListInit(NewExpression,ElementInit[])
+ [m]	ListInitExpression ListInit(NewExpression,Expression[])
+ [m]	ListInitExpression ListInit(NewExpression,MethodInfo,IEnumerable`1)
+ [m]	ListInitExpression ListInit(NewExpression,MethodInfo,Expression[])
+ [m]	LoopExpression Loop(Expression)
+ [m]	LoopExpression Loop(Expression,LabelTarget)
+ [m]	LoopExpression Loop(Expression,LabelTarget,LabelTarget)
+ [m]	BinaryExpression MakeBinary(ExpressionType,Expression,Expression)
+ [m]	BinaryExpression MakeBinary(ExpressionType,Expression,Expression,Boolean,MethodInfo)
+ [m]	BinaryExpression MakeBinary(ExpressionType,Expression,Expression,Boolean,MethodInfo,LambdaExpression)
+ [m]	CatchBlock MakeCatchBlock(Type,ParameterExpression,Expression,Expression)
+ [m]	GotoExpression MakeGoto(GotoExpressionKind,LabelTarget,Expression,Type)
+ [m]	IndexExpression MakeIndex(Expression,PropertyInfo,IEnumerable`1)
+ [m]	MemberExpression MakeMemberAccess(Expression,MemberInfo)
+ [m]	TryExpression MakeTry(Type,Expression,Expression,Expression,IEnumerable`1)
+ [m]	UnaryExpression MakeUnary(ExpressionType,Expression,Type)
+ [m]	UnaryExpression MakeUnary(ExpressionType,Expression,Type,MethodInfo)
+ [m]	MemberMemberBinding MemberBind(MemberInfo,IEnumerable`1)
+ [m]	MemberMemberBinding MemberBind(MemberInfo,MemberBinding[])
+ [m]	MemberMemberBinding MemberBind(MethodInfo,IEnumerable`1)
+ [m]	MemberMemberBinding MemberBind(MethodInfo,MemberBinding[])
+ [m]	MemberInitExpression MemberInit(NewExpression,IEnumerable`1)
+ [m]	MemberInitExpression MemberInit(NewExpression,MemberBinding[])
+ [m]	BinaryExpression Modulo(Expression,Expression)
+ [m]	BinaryExpression Modulo(Expression,Expression,MethodInfo)
+ [m]	BinaryExpression ModuloAssign(Expression,Expression)
+ [m]	BinaryExpression ModuloAssign(Expression,Expression,MethodInfo)
+ [m]	BinaryExpression ModuloAssign(Expression,Expression,MethodInfo,LambdaExpression)
+ [m]	BinaryExpression Multiply(Expression,Expression)
+ [m]	BinaryExpression Multiply(Expression,Expression,MethodInfo)
+ [m]	BinaryExpression MultiplyAssign(Expression,Expression)
+ [m]	BinaryExpression MultiplyAssign(Expression,Expression,MethodInfo)
+ [m]	BinaryExpression MultiplyAssign(Expression,Expression,MethodInfo,LambdaExpression)
+ [m]	BinaryExpression MultiplyAssignChecked(Expression,Expression)
+ [m]	BinaryExpression MultiplyAssignChecked(Expression,Expression,MethodInfo)
+ [m]	BinaryExpression MultiplyAssignChecked(Expression,Expression,MethodInfo,LambdaExpression)
+ [m]	BinaryExpression MultiplyChecked(Expression,Expression)
+ [m]	BinaryExpression MultiplyChecked(Expression,Expression,MethodInfo)
+ [m]	UnaryExpression Negate(Expression)
+ [m]	UnaryExpression Negate(Expression,MethodInfo)
+ [m]	UnaryExpression NegateChecked(Expression)
+ [m]	UnaryExpression NegateChecked(Expression,MethodInfo)
+ [m]	NewExpression New(ConstructorInfo)
+ [m]	NewExpression New(ConstructorInfo,IEnumerable`1)
+ [m]	NewExpression New(ConstructorInfo,IEnumerable`1,IEnumerable`1)
+ [m]	NewExpression New(ConstructorInfo,IEnumerable`1,MemberInfo[])
+ [m]	NewExpression New(ConstructorInfo,Expression[])
+ [m]	NewExpression New(Type)
+ [m]	NewArrayExpression NewArrayBounds(Type,IEnumerable`1)
+ [m]	NewArrayExpression NewArrayBounds(Type,Expression[])
+ [m]	NewArrayExpression NewArrayInit(Type,IEnumerable`1)
+ [m]	NewArrayExpression NewArrayInit(Type,Expression[])
+ [m]	UnaryExpression Not(Expression)
+ [m]	UnaryExpression Not(Expression,MethodInfo)
+ [m]	BinaryExpression NotEqual(Expression,Expression)
+ [m]	BinaryExpression NotEqual(Expression,Expression,Boolean,MethodInfo)
+ [m]	UnaryExpression OnesComplement(Expression)
+ [m]	UnaryExpression OnesComplement(Expression,MethodInfo)
+ [m]	BinaryExpression Or(Expression,Expression)
+ [m]	BinaryExpression Or(Expression,Expression,MethodInfo)
+ [m]	BinaryExpression OrAssign(Expression,Expression)
+ [m]	BinaryExpression OrAssign(Expression,Expression,MethodInfo)
+ [m]	BinaryExpression OrAssign(Expression,Expression,MethodInfo,LambdaExpression)
+ [m]	BinaryExpression OrElse(Expression,Expression)
+ [m]	BinaryExpression OrElse(Expression,Expression,MethodInfo)
+ [m]	ParameterExpression Parameter(Type)
+ [m]	ParameterExpression Parameter(Type,String)
+ [m]	UnaryExpression PostDecrementAssign(Expression)
+ [m]	UnaryExpression PostDecrementAssign(Expression,MethodInfo)
+ [m]	UnaryExpression PostIncrementAssign(Expression)
+ [m]	UnaryExpression PostIncrementAssign(Expression,MethodInfo)
+ [m]	BinaryExpression Power(Expression,Expression)
+ [m]	BinaryExpression Power(Expression,Expression,MethodInfo)
+ [m]	BinaryExpression PowerAssign(Expression,Expression)
+ [m]	BinaryExpression PowerAssign(Expression,Expression,MethodInfo)
+ [m]	BinaryExpression PowerAssign(Expression,Expression,MethodInfo,LambdaExpression)
+ [m]	UnaryExpression PreDecrementAssign(Expression)
+ [m]	UnaryExpression PreDecrementAssign(Expression,MethodInfo)
+ [m]	UnaryExpression PreIncrementAssign(Expression)
+ [m]	UnaryExpression PreIncrementAssign(Expression,MethodInfo)
+ [m]	MemberExpression Property(Expression,MethodInfo)
+ [m]	MemberExpression Property(Expression,PropertyInfo)
+ [m]	IndexExpression Property(Expression,PropertyInfo,IEnumerable`1)
+ [m]	IndexExpression Property(Expression,PropertyInfo,Expression[])
+ [m]	MemberExpression Property(Expression,String)
+ [m]	IndexExpression Property(Expression,String,Expression[])
+ [m]	MemberExpression Property(Expression,Type,String)
+ [m]	MemberExpression PropertyOrField(Expression,String)
+ [m]	UnaryExpression Quote(Expression)
+ [m]	Expression Reduce()
+ [m]	Expression ReduceAndCheck()
+ [m]	Expression ReduceExtensions()
+ [m]	BinaryExpression ReferenceEqual(Expression,Expression)
+ [m]	BinaryExpression ReferenceNotEqual(Expression,Expression)
+ [m]	UnaryExpression Rethrow()
+ [m]	UnaryExpression Rethrow(Type)
+ [m]	GotoExpression Return(LabelTarget)
+ [m]	GotoExpression Return(LabelTarget,Expression)
+ [m]	GotoExpression Return(LabelTarget,Expression,Type)
+ [m]	GotoExpression Return(LabelTarget,Type)
+ [m]	BinaryExpression RightShift(Expression,Expression)
+ [m]	BinaryExpression RightShift(Expression,Expression,MethodInfo)
+ [m]	BinaryExpression RightShiftAssign(Expression,Expression)
+ [m]	BinaryExpression RightShiftAssign(Expression,Expression,MethodInfo)
+ [m]	BinaryExpression RightShiftAssign(Expression,Expression,MethodInfo,LambdaExpression)
+ [m]	RuntimeVariablesExpression RuntimeVariables(IEnumerable`1)
+ [m]	RuntimeVariablesExpression RuntimeVariables(ParameterExpression[])
+ [m]	BinaryExpression Subtract(Expression,Expression)
+ [m]	BinaryExpression Subtract(Expression,Expression,MethodInfo)
+ [m]	BinaryExpression SubtractAssign(Expression,Expression)
+ [m]	BinaryExpression SubtractAssign(Expression,Expression,MethodInfo)
+ [m]	BinaryExpression SubtractAssign(Expression,Expression,MethodInfo,LambdaExpression)
+ [m]	BinaryExpression SubtractAssignChecked(Expression,Expression)
+ [m]	BinaryExpression SubtractAssignChecked(Expression,Expression,MethodInfo)
+ [m]	BinaryExpression SubtractAssignChecked(Expression,Expression,MethodInfo,LambdaExpression)
+ [m]	BinaryExpression SubtractChecked(Expression,Expression)
+ [m]	BinaryExpression SubtractChecked(Expression,Expression,MethodInfo)
+ [m]	SwitchExpression Switch(Expression,Expression,SwitchCase[])
+ [m]	SwitchExpression Switch(Expression,Expression,MethodInfo,IEnumerable`1)
+ [m]	SwitchExpression Switch(Expression,Expression,MethodInfo,SwitchCase[])
+ [m]	SwitchExpression Switch(Expression,SwitchCase[])
+ [m]	SwitchExpression Switch(Type,Expression,Expression,MethodInfo,IEnumerable`1)
+ [m]	SwitchExpression Switch(Type,Expression,Expression,MethodInfo,SwitchCase[])
+ [m]	SwitchCase SwitchCase(Expression,IEnumerable`1)
+ [m]	SwitchCase SwitchCase(Expression,Expression[])
+ [m]	SymbolDocumentInfo SymbolDocument(String)
+ [m]	SymbolDocumentInfo SymbolDocument(String,Guid)
+ [m]	SymbolDocumentInfo SymbolDocument(String,Guid,Guid)
+ [m]	SymbolDocumentInfo SymbolDocument(String,Guid,Guid,Guid)
+ [m]	UnaryExpression Throw(Expression)
+ [m]	UnaryExpression Throw(Expression,Type)
+ [m]	String ToString()
+ [m]	TryExpression TryCatch(Expression,CatchBlock[])
+ [m]	TryExpression TryCatchFinally(Expression,Expression,CatchBlock[])
+ [m]	TryExpression TryFault(Expression,Expression)
+ [m]	TryExpression TryFinally(Expression,Expression)
+ [m]	Boolean TryGetActionType(Type[],Type&)
+ [m]	Boolean TryGetFuncType(Type[],Type&)
+ [m]	UnaryExpression TypeAs(Expression,Type)
+ [m]	TypeBinaryExpression TypeEqual(Expression,Type)
+ [m]	TypeBinaryExpression TypeIs(Expression,Type)
+ [m]	UnaryExpression UnaryPlus(Expression)
+ [m]	UnaryExpression UnaryPlus(Expression,MethodInfo)
+ [m]	UnaryExpression Unbox(Expression,Type)
+ [m]	ParameterExpression Variable(Type)
+ [m]	ParameterExpression Variable(Type,String)
+ [m]	Expression VisitChildren(ExpressionVisitor)

f [t] System.Linq.Expressions.Expression`1
- [m]	Void .ctor()
+ [m]	Expression Accept(ExpressionVisitor)
+ [m]	TDelegate Compile()
- [m]	TDelegate Compile(Boolean)
+ [m]	Expression`1 Update(Expression,IEnumerable`1)

f [t] System.Linq.Expressions.ExpressionType

f [t] System.Linq.Expressions.ExpressionVisitor
+ [m]	Void .ctor()
+ [m]	ReadOnlyCollection`1 Visit(ReadOnlyCollection`1)
+ [m]	Expression Visit(Expression)
+ [m]	ReadOnlyCollection`1 Visit(ReadOnlyCollection`1,Func`2)
+ [m]	T VisitAndConvert(T,String)
+ [m]	ReadOnlyCollection`1 VisitAndConvert(ReadOnlyCollection`1,String)
+ [m]	Expression VisitBinary(BinaryExpression)
+ [m]	Expression VisitBlock(BlockExpression)
+ [m]	CatchBlock VisitCatchBlock(CatchBlock)
+ [m]	Expression VisitConditional(ConditionalExpression)
+ [m]	Expression VisitConstant(ConstantExpression)
+ [m]	Expression VisitDebugInfo(DebugInfoExpression)
+ [m]	Expression VisitDefault(DefaultExpression)
+ [m]	ElementInit VisitElementInit(ElementInit)
+ [m]	Expression VisitExtension(Expression)
+ [m]	Expression VisitGoto(GotoExpression)
+ [m]	Expression VisitIndex(IndexExpression)
+ [m]	Expression VisitInvocation(InvocationExpression)
+ [m]	Expression VisitLabel(LabelExpression)
+ [m]	LabelTarget VisitLabelTarget(LabelTarget)
+ [m]	Expression VisitLambda(Expression`1)
+ [m]	Expression VisitListInit(ListInitExpression)
+ [m]	Expression VisitLoop(LoopExpression)
+ [m]	Expression VisitMember(MemberExpression)
+ [m]	MemberAssignment VisitMemberAssignment(MemberAssignment)
+ [m]	MemberBinding VisitMemberBinding(MemberBinding)
+ [m]	Expression VisitMemberInit(MemberInitExpression)
+ [m]	MemberListBinding VisitMemberListBinding(MemberListBinding)
+ [m]	MemberMemberBinding VisitMemberMemberBinding(MemberMemberBinding)
+ [m]	Expression VisitMethodCall(MethodCallExpression)
+ [m]	Expression VisitNew(NewExpression)
+ [m]	Expression VisitNewArray(NewArrayExpression)
+ [m]	Expression VisitParameter(ParameterExpression)
+ [m]	Expression VisitRuntimeVariables(RuntimeVariablesExpression)
+ [m]	Expression VisitSwitch(SwitchExpression)
+ [m]	SwitchCase VisitSwitchCase(SwitchCase)
+ [m]	Expression VisitTry(TryExpression)
+ [m]	Expression VisitTypeBinary(TypeBinaryExpression)
+ [m]	Expression VisitUnary(UnaryExpression)

f [t] System.Linq.Expressions.GotoExpression
- [m]	Void .ctor()
+ [m]	GotoExpressionKind get_Kind()
+ [m]	ExpressionType get_NodeType()
+ [m]	LabelTarget get_Target()
+ [m]	Type get_Type()
+ [m]	Expression get_Value()
+ [m]	Expression Accept(ExpressionVisitor)
+ [m]	GotoExpression Update(LabelTarget,Expression)

f [t] System.Linq.Expressions.GotoExpressionKind

f [t] System.Linq.Expressions.IArgumentProvider
+ [m]	Int32 get_ArgumentCount()
+ [m]	Expression GetArgument(Int32)

f [t] System.Linq.Expressions.IDynamicExpression
+ [m]	Type get_DelegateType()
+ [m]	Object CreateCallSite()
+ [m]	Expression Rewrite(Expression[])

f [t] System.Linq.Expressions.IndexExpression
- [m]	Void .ctor()
+ [m]	ReadOnlyCollection`1 get_Arguments()
+ [m]	PropertyInfo get_Indexer()
+ [m]	ExpressionType get_NodeType()
+ [m]	Expression get_Object()
+ [m]	Int32 System.Linq.Expressions.IArgumentProvider.get_ArgumentCount()
+ [m]	Type get_Type()
+ [m]	Expression Accept(ExpressionVisitor)
+ [m]	Expression System.Linq.Expressions.IArgumentProvider.GetArgument(Int32)
+ [m]	IndexExpression Update(Expression,IEnumerable`1)

f [t] System.Linq.Expressions.InvocationExpression
- [m]	Void .ctor()
+ [m]	ReadOnlyCollection`1 get_Arguments()
+ [m]	Expression get_Expression()
+ [m]	ExpressionType get_NodeType()
+ [m]	Int32 System.Linq.Expressions.IArgumentProvider.get_ArgumentCount()
+ [m]	Type get_Type()
+ [m]	Expression Accept(ExpressionVisitor)
+ [m]	Expression System.Linq.Expressions.IArgumentProvider.GetArgument(Int32)
+ [m]	InvocationExpression Update(Expression,IEnumerable`1)

f [t] System.Linq.Expressions.LabelExpression
- [m]	Void .ctor()
+ [m]	Expression get_DefaultValue()
+ [m]	ExpressionType get_NodeType()
+ [m]	LabelTarget get_Target()
+ [m]	Type get_Type()
+ [m]	Expression Accept(ExpressionVisitor)
+ [m]	LabelExpression Update(LabelTarget,Expression)

f [t] System.Linq.Expressions.LabelTarget
- [m]	Void .ctor()
+ [m]	String get_Name()
+ [m]	Type get_Type()
+ [m]	String ToString()

f [t] System.Linq.Expressions.LambdaExpression
- [m]	Void .ctor()
+ [m]	Expression get_Body()
+ [m]	String get_Name()
+ [m]	ExpressionType get_NodeType()
+ [m]	ReadOnlyCollection`1 get_Parameters()
+ [m]	Type get_ReturnType()
+ [m]	Boolean get_TailCall()
+ [m]	Type get_Type()
+ [m]	Delegate Compile()
- [m]	Delegate Compile(Boolean)

f [t] System.Linq.Expressions.ListInitExpression
- [m]	Void .ctor()
+ [m]	Boolean get_CanReduce()
+ [m]	ReadOnlyCollection`1 get_Initializers()
+ [m]	NewExpression get_NewExpression()
+ [m]	ExpressionType get_NodeType()
+ [m]	Type get_Type()
+ [m]	Expression Accept(ExpressionVisitor)
+ [m]	Expression Reduce()
+ [m]	ListInitExpression Update(NewExpression,IEnumerable`1)

f [t] System.Linq.Expressions.LoopExpression
- [m]	Void .ctor()
+ [m]	Expression get_Body()
+ [m]	LabelTarget get_BreakLabel()
+ [m]	LabelTarget get_ContinueLabel()
+ [m]	ExpressionType get_NodeType()
+ [m]	Type get_Type()
+ [m]	Expression Accept(ExpressionVisitor)
+ [m]	LoopExpression Update(LabelTarget,LabelTarget,Expression)

f [t] System.Linq.Expressions.MemberAssignment
- [m]	Void .ctor()
+ [m]	Expression get_Expression()
+ [m]	MemberAssignment Update(Expression)

f [t] System.Linq.Expressions.MemberBinding
- [m]	Void .ctor()
+ [m]	MemberBindingType get_BindingType()
+ [m]	MemberInfo get_Member()
+ [m]	String ToString()

f [t] System.Linq.Expressions.MemberBindingType

f [t] System.Linq.Expressions.MemberExpression
- [m]	Void .ctor()
+ [m]	Expression get_Expression()
+ [m]	MemberInfo get_Member()
+ [m]	ExpressionType get_NodeType()
+ [m]	Expression Accept(ExpressionVisitor)
+ [m]	MemberExpression Update(Expression)

f [t] System.Linq.Expressions.MemberInitExpression
- [m]	Void .ctor()
+ [m]	ReadOnlyCollection`1 get_Bindings()
+ [m]	Boolean get_CanReduce()
+ [m]	NewExpression get_NewExpression()
+ [m]	ExpressionType get_NodeType()
+ [m]	Type get_Type()
+ [m]	Expression Accept(ExpressionVisitor)
+ [m]	Expression Reduce()
+ [m]	MemberInitExpression Update(NewExpression,IEnumerable`1)

f [t] System.Linq.Expressions.MemberListBinding
- [m]	Void .ctor()
+ [m]	ReadOnlyCollection`1 get_Initializers()
+ [m]	MemberListBinding Update(IEnumerable`1)

f [t] System.Linq.Expressions.MemberMemberBinding
- [m]	Void .ctor()
+ [m]	ReadOnlyCollection`1 get_Bindings()
+ [m]	MemberMemberBinding Update(IEnumerable`1)

f [t] System.Linq.Expressions.MethodCallExpression
- [m]	Void .ctor()
+ [m]	ReadOnlyCollection`1 get_Arguments()
+ [m]	MethodInfo get_Method()
+ [m]	ExpressionType get_NodeType()
+ [m]	Expression get_Object()
+ [m]	Int32 System.Linq.Expressions.IArgumentProvider.get_ArgumentCount()
+ [m]	Type get_Type()
+ [m]	Expression Accept(ExpressionVisitor)
+ [m]	Expression System.Linq.Expressions.IArgumentProvider.GetArgument(Int32)
+ [m]	MethodCallExpression Update(Expression,IEnumerable`1)

f [t] System.Linq.Expressions.NewArrayExpression
- [m]	Void .ctor()
+ [m]	ReadOnlyCollection`1 get_Expressions()
+ [m]	Type get_Type()
+ [m]	Expression Accept(ExpressionVisitor)
+ [m]	NewArrayExpression Update(IEnumerable`1)

f [t] System.Linq.Expressions.NewExpression
- [m]	Void .ctor()
+ [m]	ReadOnlyCollection`1 get_Arguments()
+ [m]	ConstructorInfo get_Constructor()
+ [m]	ReadOnlyCollection`1 get_Members()
+ [m]	ExpressionType get_NodeType()
+ [m]	Int32 System.Linq.Expressions.IArgumentProvider.get_ArgumentCount()
+ [m]	Type get_Type()
+ [m]	Expression Accept(ExpressionVisitor)
+ [m]	Expression System.Linq.Expressions.IArgumentProvider.GetArgument(Int32)
+ [m]	NewExpression Update(IEnumerable`1)

f [t] System.Linq.Expressions.ParameterExpression
- [m]	Void .ctor()
+ [m]	Boolean get_IsByRef()
+ [m]	String get_Name()
+ [m]	ExpressionType get_NodeType()
+ [m]	Type get_Type()
+ [m]	Expression Accept(ExpressionVisitor)

f [t] System.Linq.Expressions.RuntimeVariablesExpression
- [m]	Void .ctor()
+ [m]	ExpressionType get_NodeType()
+ [m]	Type get_Type()
+ [m]	ReadOnlyCollection`1 get_Variables()
+ [m]	Expression Accept(ExpressionVisitor)
+ [m]	RuntimeVariablesExpression Update(IEnumerable`1)

f [t] System.Linq.Expressions.SwitchCase
- [m]	Void .ctor()
+ [m]	Expression get_Body()
+ [m]	ReadOnlyCollection`1 get_TestValues()
+ [m]	String ToString()
+ [m]	SwitchCase Update(IEnumerable`1,Expression)

f [t] System.Linq.Expressions.SwitchExpression
- [m]	Void .ctor()
+ [m]	ReadOnlyCollection`1 get_Cases()
+ [m]	MethodInfo get_Comparison()
+ [m]	Expression get_DefaultBody()
+ [m]	ExpressionType get_NodeType()
+ [m]	Expression get_SwitchValue()
+ [m]	Type get_Type()
+ [m]	Expression Accept(ExpressionVisitor)
+ [m]	SwitchExpression Update(Expression,IEnumerable`1,Expression)

f [t] System.Linq.Expressions.SymbolDocumentInfo
- [m]	Void .ctor()
+ [m]	Guid get_DocumentType()
+ [m]	String get_FileName()
+ [m]	Guid get_Language()
+ [m]	Guid get_LanguageVendor()

f [t] System.Linq.Expressions.TryExpression
- [m]	Void .ctor()
+ [m]	Expression get_Body()
+ [m]	Expression get_Fault()
+ [m]	Expression get_Finally()
+ [m]	ReadOnlyCollection`1 get_Handlers()
+ [m]	ExpressionType get_NodeType()
+ [m]	Type get_Type()
+ [m]	Expression Accept(ExpressionVisitor)
+ [m]	TryExpression Update(Expression,IEnumerable`1,Expression,Expression)

f [t] System.Linq.Expressions.TypeBinaryExpression
- [m]	Void .ctor()
+ [m]	Expression get_Expression()
+ [m]	ExpressionType get_NodeType()
+ [m]	Type get_Type()
+ [m]	Type get_TypeOperand()
+ [m]	Expression Accept(ExpressionVisitor)
+ [m]	TypeBinaryExpression Update(Expression)

f [t] System.Linq.Expressions.UnaryExpression
- [m]	Void .ctor()
+ [m]	Boolean get_CanReduce()
+ [m]	Boolean get_IsLifted()
+ [m]	Boolean get_IsLiftedToNull()
+ [m]	MethodInfo get_Method()
+ [m]	ExpressionType get_NodeType()
+ [m]	Expression get_Operand()
+ [m]	Type get_Type()
+ [m]	Expression Accept(ExpressionVisitor)
+ [m]	Expression Reduce()
+ [m]	UnaryExpression Update(Expression)

---------------------------------------
+ [a] System.Linq.Parallel.dll
ref: ./netstandard/packages/System.Linq.Parallel/ref/netstandard1.1/System.Linq.Parallel.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Linq.Parallel.dll

f [t] System.Linq.OrderedParallelQuery`1
- [m]	Void .ctor()
+ [m]	IEnumerator`1 GetEnumerator()

f [t] System.Linq.ParallelEnumerable
+ [m]	TSource Aggregate(ParallelQuery`1,Func`3)
+ [m]	TAccumulate Aggregate(ParallelQuery`1,TAccumulate,Func`3)
+ [m]	TResult Aggregate(ParallelQuery`1,TAccumulate,Func`3,Func`3,Func`2)
+ [m]	TResult Aggregate(ParallelQuery`1,TAccumulate,Func`3,Func`2)
+ [m]	TResult Aggregate(ParallelQuery`1,Func`1,Func`3,Func`3,Func`2)
+ [m]	Boolean All(ParallelQuery`1,Func`2)
+ [m]	Boolean Any(ParallelQuery`1)
+ [m]	Boolean Any(ParallelQuery`1,Func`2)
+ [m]	IEnumerable`1 AsEnumerable(ParallelQuery`1)
+ [m]	ParallelQuery AsOrdered(ParallelQuery)
+ [m]	ParallelQuery`1 AsOrdered(ParallelQuery`1)
+ [m]	ParallelQuery AsParallel(IEnumerable)
+ [m]	ParallelQuery`1 AsParallel(Partitioner`1)
+ [m]	ParallelQuery`1 AsParallel(IEnumerable`1)
+ [m]	IEnumerable`1 AsSequential(ParallelQuery`1)
+ [m]	ParallelQuery`1 AsUnordered(ParallelQuery`1)
+ [m]	Decimal Average(ParallelQuery`1)
+ [m]	Double Average(ParallelQuery`1)
+ [m]	Double Average(ParallelQuery`1)
+ [m]	Double Average(ParallelQuery`1)
+ [m]	Nullable`1 Average(ParallelQuery`1)
+ [m]	Nullable`1 Average(ParallelQuery`1)
+ [m]	Nullable`1 Average(ParallelQuery`1)
+ [m]	Nullable`1 Average(ParallelQuery`1)
+ [m]	Nullable`1 Average(ParallelQuery`1)
+ [m]	Single Average(ParallelQuery`1)
+ [m]	Decimal Average(ParallelQuery`1,Func`2)
+ [m]	Double Average(ParallelQuery`1,Func`2)
+ [m]	Double Average(ParallelQuery`1,Func`2)
+ [m]	Double Average(ParallelQuery`1,Func`2)
+ [m]	Nullable`1 Average(ParallelQuery`1,Func`2)
+ [m]	Nullable`1 Average(ParallelQuery`1,Func`2)
+ [m]	Nullable`1 Average(ParallelQuery`1,Func`2)
+ [m]	Nullable`1 Average(ParallelQuery`1,Func`2)
+ [m]	Nullable`1 Average(ParallelQuery`1,Func`2)
+ [m]	Single Average(ParallelQuery`1,Func`2)
+ [m]	ParallelQuery`1 Cast(ParallelQuery)
+ [m]	ParallelQuery`1 Concat(ParallelQuery`1,IEnumerable`1)
+ [m]	ParallelQuery`1 Concat(ParallelQuery`1,ParallelQuery`1)
+ [m]	Boolean Contains(ParallelQuery`1,TSource)
+ [m]	Boolean Contains(ParallelQuery`1,TSource,IEqualityComparer`1)
+ [m]	Int32 Count(ParallelQuery`1)
+ [m]	Int32 Count(ParallelQuery`1,Func`2)
+ [m]	ParallelQuery`1 DefaultIfEmpty(ParallelQuery`1)
+ [m]	ParallelQuery`1 DefaultIfEmpty(ParallelQuery`1,TSource)
+ [m]	ParallelQuery`1 Distinct(ParallelQuery`1)
+ [m]	ParallelQuery`1 Distinct(ParallelQuery`1,IEqualityComparer`1)
+ [m]	TSource ElementAt(ParallelQuery`1,Int32)
+ [m]	TSource ElementAtOrDefault(ParallelQuery`1,Int32)
+ [m]	ParallelQuery`1 Empty()
+ [m]	ParallelQuery`1 Except(ParallelQuery`1,IEnumerable`1)
+ [m]	ParallelQuery`1 Except(ParallelQuery`1,IEnumerable`1,IEqualityComparer`1)
+ [m]	ParallelQuery`1 Except(ParallelQuery`1,ParallelQuery`1)
+ [m]	ParallelQuery`1 Except(ParallelQuery`1,ParallelQuery`1,IEqualityComparer`1)
+ [m]	TSource First(ParallelQuery`1)
+ [m]	TSource First(ParallelQuery`1,Func`2)
+ [m]	TSource FirstOrDefault(ParallelQuery`1)
+ [m]	TSource FirstOrDefault(ParallelQuery`1,Func`2)
+ [m]	Void ForAll(ParallelQuery`1,Action`1)
+ [m]	ParallelQuery`1 GroupBy(ParallelQuery`1,Func`2)
+ [m]	ParallelQuery`1 GroupBy(ParallelQuery`1,Func`2,IEqualityComparer`1)
+ [m]	ParallelQuery`1 GroupBy(ParallelQuery`1,Func`2,Func`2)
+ [m]	ParallelQuery`1 GroupBy(ParallelQuery`1,Func`2,Func`2,IEqualityComparer`1)
+ [m]	ParallelQuery`1 GroupBy(ParallelQuery`1,Func`2,Func`3)
+ [m]	ParallelQuery`1 GroupBy(ParallelQuery`1,Func`2,Func`3,IEqualityComparer`1)
+ [m]	ParallelQuery`1 GroupBy(ParallelQuery`1,Func`2,Func`2,Func`3)
+ [m]	ParallelQuery`1 GroupBy(ParallelQuery`1,Func`2,Func`2,Func`3,IEqualityComparer`1)
+ [m]	ParallelQuery`1 GroupJoin(ParallelQuery`1,IEnumerable`1,Func`2,Func`2,Func`3)
+ [m]	ParallelQuery`1 GroupJoin(ParallelQuery`1,IEnumerable`1,Func`2,Func`2,Func`3,IEqualityComparer`1)
+ [m]	ParallelQuery`1 GroupJoin(ParallelQuery`1,ParallelQuery`1,Func`2,Func`2,Func`3)
+ [m]	ParallelQuery`1 GroupJoin(ParallelQuery`1,ParallelQuery`1,Func`2,Func`2,Func`3,IEqualityComparer`1)
+ [m]	ParallelQuery`1 Intersect(ParallelQuery`1,IEnumerable`1)
+ [m]	ParallelQuery`1 Intersect(ParallelQuery`1,IEnumerable`1,IEqualityComparer`1)
+ [m]	ParallelQuery`1 Intersect(ParallelQuery`1,ParallelQuery`1)
+ [m]	ParallelQuery`1 Intersect(ParallelQuery`1,ParallelQuery`1,IEqualityComparer`1)
+ [m]	ParallelQuery`1 Join(ParallelQuery`1,IEnumerable`1,Func`2,Func`2,Func`3)
+ [m]	ParallelQuery`1 Join(ParallelQuery`1,IEnumerable`1,Func`2,Func`2,Func`3,IEqualityComparer`1)
+ [m]	ParallelQuery`1 Join(ParallelQuery`1,ParallelQuery`1,Func`2,Func`2,Func`3)
+ [m]	ParallelQuery`1 Join(ParallelQuery`1,ParallelQuery`1,Func`2,Func`2,Func`3,IEqualityComparer`1)
+ [m]	TSource Last(ParallelQuery`1)
+ [m]	TSource Last(ParallelQuery`1,Func`2)
+ [m]	TSource LastOrDefault(ParallelQuery`1)
+ [m]	TSource LastOrDefault(ParallelQuery`1,Func`2)
+ [m]	Int64 LongCount(ParallelQuery`1)
+ [m]	Int64 LongCount(ParallelQuery`1,Func`2)
+ [m]	Decimal Max(ParallelQuery`1)
+ [m]	Double Max(ParallelQuery`1)
+ [m]	Int32 Max(ParallelQuery`1)
+ [m]	Int64 Max(ParallelQuery`1)
+ [m]	Nullable`1 Max(ParallelQuery`1)
+ [m]	Nullable`1 Max(ParallelQuery`1)
+ [m]	Nullable`1 Max(ParallelQuery`1)
+ [m]	Nullable`1 Max(ParallelQuery`1)
+ [m]	Nullable`1 Max(ParallelQuery`1)
+ [m]	Single Max(ParallelQuery`1)
+ [m]	TSource Max(ParallelQuery`1)
+ [m]	Decimal Max(ParallelQuery`1,Func`2)
+ [m]	Double Max(ParallelQuery`1,Func`2)
+ [m]	Int32 Max(ParallelQuery`1,Func`2)
+ [m]	Int64 Max(ParallelQuery`1,Func`2)
+ [m]	Nullable`1 Max(ParallelQuery`1,Func`2)
+ [m]	Nullable`1 Max(ParallelQuery`1,Func`2)
+ [m]	Nullable`1 Max(ParallelQuery`1,Func`2)
+ [m]	Nullable`1 Max(ParallelQuery`1,Func`2)
+ [m]	Nullable`1 Max(ParallelQuery`1,Func`2)
+ [m]	Single Max(ParallelQuery`1,Func`2)
+ [m]	TResult Max(ParallelQuery`1,Func`2)
+ [m]	Decimal Min(ParallelQuery`1)
+ [m]	Double Min(ParallelQuery`1)
+ [m]	Int32 Min(ParallelQuery`1)
+ [m]	Int64 Min(ParallelQuery`1)
+ [m]	Nullable`1 Min(ParallelQuery`1)
+ [m]	Nullable`1 Min(ParallelQuery`1)
+ [m]	Nullable`1 Min(ParallelQuery`1)
+ [m]	Nullable`1 Min(ParallelQuery`1)
+ [m]	Nullable`1 Min(ParallelQuery`1)
+ [m]	Single Min(ParallelQuery`1)
+ [m]	TSource Min(ParallelQuery`1)
+ [m]	Decimal Min(ParallelQuery`1,Func`2)
+ [m]	Double Min(ParallelQuery`1,Func`2)
+ [m]	Int32 Min(ParallelQuery`1,Func`2)
+ [m]	Int64 Min(ParallelQuery`1,Func`2)
+ [m]	Nullable`1 Min(ParallelQuery`1,Func`2)
+ [m]	Nullable`1 Min(ParallelQuery`1,Func`2)
+ [m]	Nullable`1 Min(ParallelQuery`1,Func`2)
+ [m]	Nullable`1 Min(ParallelQuery`1,Func`2)
+ [m]	Nullable`1 Min(ParallelQuery`1,Func`2)
+ [m]	Single Min(ParallelQuery`1,Func`2)
+ [m]	TResult Min(ParallelQuery`1,Func`2)
+ [m]	ParallelQuery`1 OfType(ParallelQuery)
+ [m]	OrderedParallelQuery`1 OrderBy(ParallelQuery`1,Func`2)
+ [m]	OrderedParallelQuery`1 OrderBy(ParallelQuery`1,Func`2,IComparer`1)
+ [m]	OrderedParallelQuery`1 OrderByDescending(ParallelQuery`1,Func`2)
+ [m]	OrderedParallelQuery`1 OrderByDescending(ParallelQuery`1,Func`2,IComparer`1)
+ [m]	ParallelQuery`1 Range(Int32,Int32)
+ [m]	ParallelQuery`1 Repeat(TResult,Int32)
+ [m]	ParallelQuery`1 Reverse(ParallelQuery`1)
+ [m]	ParallelQuery`1 Select(ParallelQuery`1,Func`2)
+ [m]	ParallelQuery`1 Select(ParallelQuery`1,Func`3)
+ [m]	ParallelQuery`1 SelectMany(ParallelQuery`1,Func`2)
+ [m]	ParallelQuery`1 SelectMany(ParallelQuery`1,Func`3)
+ [m]	ParallelQuery`1 SelectMany(ParallelQuery`1,Func`2,Func`3)
+ [m]	ParallelQuery`1 SelectMany(ParallelQuery`1,Func`3,Func`3)
+ [m]	Boolean SequenceEqual(ParallelQuery`1,IEnumerable`1)
+ [m]	Boolean SequenceEqual(ParallelQuery`1,IEnumerable`1,IEqualityComparer`1)
+ [m]	Boolean SequenceEqual(ParallelQuery`1,ParallelQuery`1)
+ [m]	Boolean SequenceEqual(ParallelQuery`1,ParallelQuery`1,IEqualityComparer`1)
+ [m]	TSource Single(ParallelQuery`1)
+ [m]	TSource Single(ParallelQuery`1,Func`2)
+ [m]	TSource SingleOrDefault(ParallelQuery`1)
+ [m]	TSource SingleOrDefault(ParallelQuery`1,Func`2)
+ [m]	ParallelQuery`1 Skip(ParallelQuery`1,Int32)
+ [m]	ParallelQuery`1 SkipWhile(ParallelQuery`1,Func`2)
+ [m]	ParallelQuery`1 SkipWhile(ParallelQuery`1,Func`3)
+ [m]	Decimal Sum(ParallelQuery`1)
+ [m]	Double Sum(ParallelQuery`1)
+ [m]	Int32 Sum(ParallelQuery`1)
+ [m]	Int64 Sum(ParallelQuery`1)
+ [m]	Nullable`1 Sum(ParallelQuery`1)
+ [m]	Nullable`1 Sum(ParallelQuery`1)
+ [m]	Nullable`1 Sum(ParallelQuery`1)
+ [m]	Nullable`1 Sum(ParallelQuery`1)
+ [m]	Nullable`1 Sum(ParallelQuery`1)
+ [m]	Single Sum(ParallelQuery`1)
+ [m]	Decimal Sum(ParallelQuery`1,Func`2)
+ [m]	Double Sum(ParallelQuery`1,Func`2)
+ [m]	Int32 Sum(ParallelQuery`1,Func`2)
+ [m]	Int64 Sum(ParallelQuery`1,Func`2)
+ [m]	Nullable`1 Sum(ParallelQuery`1,Func`2)
+ [m]	Nullable`1 Sum(ParallelQuery`1,Func`2)
+ [m]	Nullable`1 Sum(ParallelQuery`1,Func`2)
+ [m]	Nullable`1 Sum(ParallelQuery`1,Func`2)
+ [m]	Nullable`1 Sum(ParallelQuery`1,Func`2)
+ [m]	Single Sum(ParallelQuery`1,Func`2)
+ [m]	ParallelQuery`1 Take(ParallelQuery`1,Int32)
+ [m]	ParallelQuery`1 TakeWhile(ParallelQuery`1,Func`2)
+ [m]	ParallelQuery`1 TakeWhile(ParallelQuery`1,Func`3)
+ [m]	OrderedParallelQuery`1 ThenBy(OrderedParallelQuery`1,Func`2)
+ [m]	OrderedParallelQuery`1 ThenBy(OrderedParallelQuery`1,Func`2,IComparer`1)
+ [m]	OrderedParallelQuery`1 ThenByDescending(OrderedParallelQuery`1,Func`2)
+ [m]	OrderedParallelQuery`1 ThenByDescending(OrderedParallelQuery`1,Func`2,IComparer`1)
+ [m]	TSource[] ToArray(ParallelQuery`1)
+ [m]	Dictionary`2 ToDictionary(ParallelQuery`1,Func`2)
+ [m]	Dictionary`2 ToDictionary(ParallelQuery`1,Func`2,IEqualityComparer`1)
+ [m]	Dictionary`2 ToDictionary(ParallelQuery`1,Func`2,Func`2)
+ [m]	Dictionary`2 ToDictionary(ParallelQuery`1,Func`2,Func`2,IEqualityComparer`1)
+ [m]	List`1 ToList(ParallelQuery`1)
+ [m]	ILookup`2 ToLookup(ParallelQuery`1,Func`2)
+ [m]	ILookup`2 ToLookup(ParallelQuery`1,Func`2,IEqualityComparer`1)
+ [m]	ILookup`2 ToLookup(ParallelQuery`1,Func`2,Func`2)
+ [m]	ILookup`2 ToLookup(ParallelQuery`1,Func`2,Func`2,IEqualityComparer`1)
+ [m]	ParallelQuery`1 Union(ParallelQuery`1,IEnumerable`1)
+ [m]	ParallelQuery`1 Union(ParallelQuery`1,IEnumerable`1,IEqualityComparer`1)
+ [m]	ParallelQuery`1 Union(ParallelQuery`1,ParallelQuery`1)
+ [m]	ParallelQuery`1 Union(ParallelQuery`1,ParallelQuery`1,IEqualityComparer`1)
+ [m]	ParallelQuery`1 Where(ParallelQuery`1,Func`2)
+ [m]	ParallelQuery`1 Where(ParallelQuery`1,Func`3)
+ [m]	ParallelQuery`1 WithCancellation(ParallelQuery`1,CancellationToken)
+ [m]	ParallelQuery`1 WithDegreeOfParallelism(ParallelQuery`1,Int32)
+ [m]	ParallelQuery`1 WithExecutionMode(ParallelQuery`1,ParallelExecutionMode)
+ [m]	ParallelQuery`1 WithMergeOptions(ParallelQuery`1,ParallelMergeOptions)
+ [m]	ParallelQuery`1 Zip(ParallelQuery`1,IEnumerable`1,Func`3)
+ [m]	ParallelQuery`1 Zip(ParallelQuery`1,ParallelQuery`1,Func`3)

f [t] System.Linq.ParallelExecutionMode

f [t] System.Linq.ParallelMergeOptions

f [t] System.Linq.ParallelQuery
- [m]	Void .ctor()
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()

f [t] System.Linq.ParallelQuery`1
- [m]	Void .ctor()
+ [m]	IEnumerator`1 GetEnumerator()

---------------------------------------
+ [a] System.Linq.Queryable.dll
ref: ./netstandard/packages/System.Linq.Queryable/ref/netstandard1.0/System.Linq.Queryable.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Linq.Queryable.dll

f [t] System.Linq.EnumerableExecutor
+ [m]	Void .ctor()

f [t] System.Linq.EnumerableExecutor`1
+ [m]	Void .ctor(Expression)

f [t] System.Linq.EnumerableQuery
+ [m]	Void .ctor()

f [t] System.Linq.EnumerableQuery`1
+ [m]	Void .ctor(IEnumerable`1)
+ [m]	Void .ctor(Expression)
+ [m]	Type System.Linq.IQueryable.get_ElementType()
+ [m]	Expression System.Linq.IQueryable.get_Expression()
+ [m]	IQueryProvider System.Linq.IQueryable.get_Provider()
+ [m]	IEnumerator`1 System.Collections.Generic.IEnumerable<T>.GetEnumerator()
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	IQueryable System.Linq.IQueryProvider.CreateQuery(Expression)
+ [m]	IQueryable`1 System.Linq.IQueryProvider.CreateQuery(Expression)
+ [m]	Object System.Linq.IQueryProvider.Execute(Expression)
+ [m]	S System.Linq.IQueryProvider.Execute(Expression)
+ [m]	String ToString()

f [t] System.Linq.Queryable
+ [m]	TSource Aggregate(IQueryable`1,Expression`1)
+ [m]	TAccumulate Aggregate(IQueryable`1,TAccumulate,Expression`1)
+ [m]	TResult Aggregate(IQueryable`1,TAccumulate,Expression`1,Expression`1)
+ [m]	Boolean All(IQueryable`1,Expression`1)
+ [m]	Boolean Any(IQueryable`1)
+ [m]	Boolean Any(IQueryable`1,Expression`1)
+ [m]	IQueryable AsQueryable(IEnumerable)
+ [m]	IQueryable`1 AsQueryable(IEnumerable`1)
+ [m]	Decimal Average(IQueryable`1)
+ [m]	Double Average(IQueryable`1)
+ [m]	Double Average(IQueryable`1)
+ [m]	Double Average(IQueryable`1)
+ [m]	Nullable`1 Average(IQueryable`1)
+ [m]	Nullable`1 Average(IQueryable`1)
+ [m]	Nullable`1 Average(IQueryable`1)
+ [m]	Nullable`1 Average(IQueryable`1)
+ [m]	Nullable`1 Average(IQueryable`1)
+ [m]	Single Average(IQueryable`1)
+ [m]	Decimal Average(IQueryable`1,Expression`1)
+ [m]	Double Average(IQueryable`1,Expression`1)
+ [m]	Double Average(IQueryable`1,Expression`1)
+ [m]	Double Average(IQueryable`1,Expression`1)
+ [m]	Nullable`1 Average(IQueryable`1,Expression`1)
+ [m]	Nullable`1 Average(IQueryable`1,Expression`1)
+ [m]	Nullable`1 Average(IQueryable`1,Expression`1)
+ [m]	Nullable`1 Average(IQueryable`1,Expression`1)
+ [m]	Nullable`1 Average(IQueryable`1,Expression`1)
+ [m]	Single Average(IQueryable`1,Expression`1)
+ [m]	IQueryable`1 Cast(IQueryable)
+ [m]	IQueryable`1 Concat(IQueryable`1,IEnumerable`1)
+ [m]	Boolean Contains(IQueryable`1,TSource)
+ [m]	Boolean Contains(IQueryable`1,TSource,IEqualityComparer`1)
+ [m]	Int32 Count(IQueryable`1)
+ [m]	Int32 Count(IQueryable`1,Expression`1)
+ [m]	IQueryable`1 DefaultIfEmpty(IQueryable`1)
+ [m]	IQueryable`1 DefaultIfEmpty(IQueryable`1,TSource)
+ [m]	IQueryable`1 Distinct(IQueryable`1)
+ [m]	IQueryable`1 Distinct(IQueryable`1,IEqualityComparer`1)
+ [m]	TSource ElementAt(IQueryable`1,Int32)
+ [m]	TSource ElementAtOrDefault(IQueryable`1,Int32)
+ [m]	IQueryable`1 Except(IQueryable`1,IEnumerable`1)
+ [m]	IQueryable`1 Except(IQueryable`1,IEnumerable`1,IEqualityComparer`1)
+ [m]	TSource First(IQueryable`1)
+ [m]	TSource First(IQueryable`1,Expression`1)
+ [m]	TSource FirstOrDefault(IQueryable`1)
+ [m]	TSource FirstOrDefault(IQueryable`1,Expression`1)
+ [m]	IQueryable`1 GroupBy(IQueryable`1,Expression`1)
+ [m]	IQueryable`1 GroupBy(IQueryable`1,Expression`1,IEqualityComparer`1)
+ [m]	IQueryable`1 GroupBy(IQueryable`1,Expression`1,Expression`1)
+ [m]	IQueryable`1 GroupBy(IQueryable`1,Expression`1,Expression`1,IEqualityComparer`1)
+ [m]	IQueryable`1 GroupBy(IQueryable`1,Expression`1,Expression`1)
+ [m]	IQueryable`1 GroupBy(IQueryable`1,Expression`1,Expression`1,IEqualityComparer`1)
+ [m]	IQueryable`1 GroupBy(IQueryable`1,Expression`1,Expression`1,Expression`1)
+ [m]	IQueryable`1 GroupBy(IQueryable`1,Expression`1,Expression`1,Expression`1,IEqualityComparer`1)
+ [m]	IQueryable`1 GroupJoin(IQueryable`1,IEnumerable`1,Expression`1,Expression`1,Expression`1)
+ [m]	IQueryable`1 GroupJoin(IQueryable`1,IEnumerable`1,Expression`1,Expression`1,Expression`1,IEqualityComparer`1)
+ [m]	IQueryable`1 Intersect(IQueryable`1,IEnumerable`1)
+ [m]	IQueryable`1 Intersect(IQueryable`1,IEnumerable`1,IEqualityComparer`1)
+ [m]	IQueryable`1 Join(IQueryable`1,IEnumerable`1,Expression`1,Expression`1,Expression`1)
+ [m]	IQueryable`1 Join(IQueryable`1,IEnumerable`1,Expression`1,Expression`1,Expression`1,IEqualityComparer`1)
+ [m]	TSource Last(IQueryable`1)
+ [m]	TSource Last(IQueryable`1,Expression`1)
+ [m]	TSource LastOrDefault(IQueryable`1)
+ [m]	TSource LastOrDefault(IQueryable`1,Expression`1)
+ [m]	Int64 LongCount(IQueryable`1)
+ [m]	Int64 LongCount(IQueryable`1,Expression`1)
+ [m]	TSource Max(IQueryable`1)
+ [m]	TResult Max(IQueryable`1,Expression`1)
+ [m]	TSource Min(IQueryable`1)
+ [m]	TResult Min(IQueryable`1,Expression`1)
+ [m]	IQueryable`1 OfType(IQueryable)
+ [m]	IOrderedQueryable`1 OrderBy(IQueryable`1,Expression`1)
+ [m]	IOrderedQueryable`1 OrderBy(IQueryable`1,Expression`1,IComparer`1)
+ [m]	IOrderedQueryable`1 OrderByDescending(IQueryable`1,Expression`1)
+ [m]	IOrderedQueryable`1 OrderByDescending(IQueryable`1,Expression`1,IComparer`1)
+ [m]	IQueryable`1 Reverse(IQueryable`1)
+ [m]	IQueryable`1 Select(IQueryable`1,Expression`1)
+ [m]	IQueryable`1 Select(IQueryable`1,Expression`1)
+ [m]	IQueryable`1 SelectMany(IQueryable`1,Expression`1)
+ [m]	IQueryable`1 SelectMany(IQueryable`1,Expression`1)
+ [m]	IQueryable`1 SelectMany(IQueryable`1,Expression`1,Expression`1)
+ [m]	IQueryable`1 SelectMany(IQueryable`1,Expression`1,Expression`1)
+ [m]	Boolean SequenceEqual(IQueryable`1,IEnumerable`1)
+ [m]	Boolean SequenceEqual(IQueryable`1,IEnumerable`1,IEqualityComparer`1)
+ [m]	TSource Single(IQueryable`1)
+ [m]	TSource Single(IQueryable`1,Expression`1)
+ [m]	TSource SingleOrDefault(IQueryable`1)
+ [m]	TSource SingleOrDefault(IQueryable`1,Expression`1)
+ [m]	IQueryable`1 Skip(IQueryable`1,Int32)
+ [m]	IQueryable`1 SkipWhile(IQueryable`1,Expression`1)
+ [m]	IQueryable`1 SkipWhile(IQueryable`1,Expression`1)
+ [m]	Decimal Sum(IQueryable`1)
+ [m]	Double Sum(IQueryable`1)
+ [m]	Int32 Sum(IQueryable`1)
+ [m]	Int64 Sum(IQueryable`1)
+ [m]	Nullable`1 Sum(IQueryable`1)
+ [m]	Nullable`1 Sum(IQueryable`1)
+ [m]	Nullable`1 Sum(IQueryable`1)
+ [m]	Nullable`1 Sum(IQueryable`1)
+ [m]	Nullable`1 Sum(IQueryable`1)
+ [m]	Single Sum(IQueryable`1)
+ [m]	Decimal Sum(IQueryable`1,Expression`1)
+ [m]	Double Sum(IQueryable`1,Expression`1)
+ [m]	Int32 Sum(IQueryable`1,Expression`1)
+ [m]	Int64 Sum(IQueryable`1,Expression`1)
+ [m]	Nullable`1 Sum(IQueryable`1,Expression`1)
+ [m]	Nullable`1 Sum(IQueryable`1,Expression`1)
+ [m]	Nullable`1 Sum(IQueryable`1,Expression`1)
+ [m]	Nullable`1 Sum(IQueryable`1,Expression`1)
+ [m]	Nullable`1 Sum(IQueryable`1,Expression`1)
+ [m]	Single Sum(IQueryable`1,Expression`1)
+ [m]	IQueryable`1 Take(IQueryable`1,Int32)
+ [m]	IQueryable`1 TakeWhile(IQueryable`1,Expression`1)
+ [m]	IQueryable`1 TakeWhile(IQueryable`1,Expression`1)
+ [m]	IOrderedQueryable`1 ThenBy(IOrderedQueryable`1,Expression`1)
+ [m]	IOrderedQueryable`1 ThenBy(IOrderedQueryable`1,Expression`1,IComparer`1)
+ [m]	IOrderedQueryable`1 ThenByDescending(IOrderedQueryable`1,Expression`1)
+ [m]	IOrderedQueryable`1 ThenByDescending(IOrderedQueryable`1,Expression`1,IComparer`1)
+ [m]	IQueryable`1 Union(IQueryable`1,IEnumerable`1)
+ [m]	IQueryable`1 Union(IQueryable`1,IEnumerable`1,IEqualityComparer`1)
+ [m]	IQueryable`1 Where(IQueryable`1,Expression`1)
+ [m]	IQueryable`1 Where(IQueryable`1,Expression`1)
+ [m]	IQueryable`1 Zip(IQueryable`1,IEnumerable`1,Expression`1)

---------------------------------------
+ [a] System.Net.Http.dll
ref: ./netstandard/packages/System.Net.Http/ref/netstandard1.3/System.Net.Http.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/mono/2.1/System.Net.Http.dll

+ [t] System.Net.Http.ByteArrayContent
+ [m]	Void .ctor(Byte[])
+ [m]	Void .ctor(Byte[],Int32,Int32)
+ [m]	Task`1 CreateContentReadStreamAsync()
+ [m]	Task SerializeToStreamAsync(Stream,TransportContext)
+ [m]	Boolean TryComputeLength(Int64&)

+ [t] System.Net.Http.ClientCertificateOption

+ [t] System.Net.Http.DelegatingHandler
+ [m]	Void .ctor()
+ [m]	Void .ctor(HttpMessageHandler)
+ [m]	HttpMessageHandler get_InnerHandler()
+ [m]	Void set_InnerHandler(HttpMessageHandler)
+ [m]	Void Dispose(Boolean)
+ [m]	Task`1 SendAsync(HttpRequestMessage,CancellationToken)

+ [t] System.Net.Http.FormUrlEncodedContent
+ [m]	Void .ctor(IEnumerable`1)

+ [t] System.Net.Http.HttpClient
+ [m]	Void .ctor()
+ [m]	Void .ctor(HttpMessageHandler)
+ [m]	Void .ctor(HttpMessageHandler,Boolean)
+ [m]	Uri get_BaseAddress()
+ [m]	Void set_BaseAddress(Uri)
+ [m]	HttpRequestHeaders get_DefaultRequestHeaders()
+ [m]	Int64 get_MaxResponseContentBufferSize()
+ [m]	Void set_MaxResponseContentBufferSize(Int64)
+ [m]	TimeSpan get_Timeout()
+ [m]	Void set_Timeout(TimeSpan)
+ [m]	Void CancelPendingRequests()
+ [m]	Task`1 DeleteAsync(String)
+ [m]	Task`1 DeleteAsync(String,CancellationToken)
+ [m]	Task`1 DeleteAsync(Uri)
+ [m]	Task`1 DeleteAsync(Uri,CancellationToken)
+ [m]	Void Dispose(Boolean)
+ [m]	Task`1 GetAsync(String)
+ [m]	Task`1 GetAsync(String,HttpCompletionOption)
+ [m]	Task`1 GetAsync(String,HttpCompletionOption,CancellationToken)
+ [m]	Task`1 GetAsync(String,CancellationToken)
+ [m]	Task`1 GetAsync(Uri)
+ [m]	Task`1 GetAsync(Uri,HttpCompletionOption)
+ [m]	Task`1 GetAsync(Uri,HttpCompletionOption,CancellationToken)
+ [m]	Task`1 GetAsync(Uri,CancellationToken)
+ [m]	Task`1 GetByteArrayAsync(String)
+ [m]	Task`1 GetByteArrayAsync(Uri)
+ [m]	Task`1 GetStreamAsync(String)
+ [m]	Task`1 GetStreamAsync(Uri)
+ [m]	Task`1 GetStringAsync(String)
+ [m]	Task`1 GetStringAsync(Uri)
+ [m]	Task`1 PostAsync(String,HttpContent)
+ [m]	Task`1 PostAsync(String,HttpContent,CancellationToken)
+ [m]	Task`1 PostAsync(Uri,HttpContent)
+ [m]	Task`1 PostAsync(Uri,HttpContent,CancellationToken)
+ [m]	Task`1 PutAsync(String,HttpContent)
+ [m]	Task`1 PutAsync(String,HttpContent,CancellationToken)
+ [m]	Task`1 PutAsync(Uri,HttpContent)
+ [m]	Task`1 PutAsync(Uri,HttpContent,CancellationToken)
+ [m]	Task`1 SendAsync(HttpRequestMessage)
+ [m]	Task`1 SendAsync(HttpRequestMessage,HttpCompletionOption)
+ [m]	Task`1 SendAsync(HttpRequestMessage,HttpCompletionOption,CancellationToken)
+ [m]	Task`1 SendAsync(HttpRequestMessage,CancellationToken)

+ [t] System.Net.Http.HttpClientHandler
+ [m]	Void .ctor()
+ [m]	Boolean get_AllowAutoRedirect()
+ [m]	Void set_AllowAutoRedirect(Boolean)
+ [m]	DecompressionMethods get_AutomaticDecompression()
+ [m]	Void set_AutomaticDecompression(DecompressionMethods)
- [m]	Boolean get_CheckCertificateRevocationList()
- [m]	Void set_CheckCertificateRevocationList(Boolean)
+ [m]	ClientCertificateOption get_ClientCertificateOptions()
+ [m]	Void set_ClientCertificateOptions(ClientCertificateOption)
- [m]	X509CertificateCollection get_ClientCertificates()
+ [m]	CookieContainer get_CookieContainer()
+ [m]	Void set_CookieContainer(CookieContainer)
+ [m]	ICredentials get_Credentials()
+ [m]	Void set_Credentials(ICredentials)
- [m]	ICredentials get_DefaultProxyCredentials()
- [m]	Void set_DefaultProxyCredentials(ICredentials)
+ [m]	Int32 get_MaxAutomaticRedirections()
+ [m]	Void set_MaxAutomaticRedirections(Int32)
- [m]	Int32 get_MaxConnectionsPerServer()
- [m]	Void set_MaxConnectionsPerServer(Int32)
+ [m]	Int64 get_MaxRequestContentBufferSize()
+ [m]	Void set_MaxRequestContentBufferSize(Int64)
- [m]	Int32 get_MaxResponseHeadersLength()
- [m]	Void set_MaxResponseHeadersLength(Int32)
+ [m]	Boolean get_PreAuthenticate()
+ [m]	Void set_PreAuthenticate(Boolean)
- [m]	IDictionary`2 get_Properties()
+ [m]	IWebProxy get_Proxy()
+ [m]	Void set_Proxy(IWebProxy)
- [m]	Func`5 get_ServerCertificateCustomValidationCallback()
- [m]	Void set_ServerCertificateCustomValidationCallback(Func`5)
- [m]	SslProtocols get_SslProtocols()
- [m]	Void set_SslProtocols(SslProtocols)
+ [m]	Boolean get_SupportsAutomaticDecompression()
+ [m]	Boolean get_SupportsProxy()
+ [m]	Boolean get_SupportsRedirectConfiguration()
+ [m]	Boolean get_UseCookies()
+ [m]	Void set_UseCookies(Boolean)
+ [m]	Boolean get_UseDefaultCredentials()
+ [m]	Void set_UseDefaultCredentials(Boolean)
+ [m]	Boolean get_UseProxy()
+ [m]	Void set_UseProxy(Boolean)
+ [m]	Void Dispose(Boolean)
+ [m]	Task`1 SendAsync(HttpRequestMessage,CancellationToken)

+ [t] System.Net.Http.HttpCompletionOption

+ [t] System.Net.Http.HttpContent
+ [m]	Void .ctor()
+ [m]	HttpContentHeaders get_Headers()
+ [m]	Task CopyToAsync(Stream)
+ [m]	Task CopyToAsync(Stream,TransportContext)
+ [m]	Task`1 CreateContentReadStreamAsync()
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Task LoadIntoBufferAsync()
+ [m]	Task LoadIntoBufferAsync(Int64)
+ [m]	Task`1 ReadAsByteArrayAsync()
+ [m]	Task`1 ReadAsStreamAsync()
+ [m]	Task`1 ReadAsStringAsync()
+ [m]	Task SerializeToStreamAsync(Stream,TransportContext)
+ [m]	Boolean TryComputeLength(Int64&)

+ [t] System.Net.Http.HttpMessageHandler
+ [m]	Void .ctor()
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Task`1 SendAsync(HttpRequestMessage,CancellationToken)

+ [t] System.Net.Http.HttpMessageInvoker
+ [m]	Void .ctor(HttpMessageHandler)
+ [m]	Void .ctor(HttpMessageHandler,Boolean)
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Task`1 SendAsync(HttpRequestMessage,CancellationToken)

+ [t] System.Net.Http.HttpMethod
+ [m]	Void .ctor(String)
+ [m]	HttpMethod get_Delete()
+ [m]	HttpMethod get_Get()
+ [m]	HttpMethod get_Head()
+ [m]	String get_Method()
+ [m]	HttpMethod get_Options()
+ [m]	HttpMethod get_Post()
+ [m]	HttpMethod get_Put()
+ [m]	HttpMethod get_Trace()
+ [m]	Boolean Equals(HttpMethod)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(HttpMethod,HttpMethod)
+ [m]	Boolean op_Inequality(HttpMethod,HttpMethod)
+ [m]	String ToString()

+ [t] System.Net.Http.HttpRequestException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

+ [t] System.Net.Http.HttpRequestMessage
+ [m]	Void .ctor()
+ [m]	Void .ctor(HttpMethod,String)
+ [m]	Void .ctor(HttpMethod,Uri)
+ [m]	HttpContent get_Content()
+ [m]	Void set_Content(HttpContent)
+ [m]	HttpRequestHeaders get_Headers()
+ [m]	HttpMethod get_Method()
+ [m]	Void set_Method(HttpMethod)
+ [m]	IDictionary`2 get_Properties()
+ [m]	Uri get_RequestUri()
+ [m]	Void set_RequestUri(Uri)
+ [m]	Version get_Version()
+ [m]	Void set_Version(Version)
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	String ToString()

+ [t] System.Net.Http.HttpResponseMessage
+ [m]	Void .ctor()
+ [m]	Void .ctor(HttpStatusCode)
+ [m]	HttpContent get_Content()
+ [m]	Void set_Content(HttpContent)
+ [m]	HttpResponseHeaders get_Headers()
+ [m]	Boolean get_IsSuccessStatusCode()
+ [m]	String get_ReasonPhrase()
+ [m]	Void set_ReasonPhrase(String)
+ [m]	HttpRequestMessage get_RequestMessage()
+ [m]	Void set_RequestMessage(HttpRequestMessage)
+ [m]	HttpStatusCode get_StatusCode()
+ [m]	Void set_StatusCode(HttpStatusCode)
+ [m]	Version get_Version()
+ [m]	Void set_Version(Version)
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	HttpResponseMessage EnsureSuccessStatusCode()
+ [m]	String ToString()

+ [t] System.Net.Http.MessageProcessingHandler
+ [m]	Void .ctor()
+ [m]	Void .ctor(HttpMessageHandler)
+ [m]	HttpRequestMessage ProcessRequest(HttpRequestMessage,CancellationToken)
+ [m]	HttpResponseMessage ProcessResponse(HttpResponseMessage,CancellationToken)
+ [m]	Task`1 SendAsync(HttpRequestMessage,CancellationToken)

+ [t] System.Net.Http.MultipartContent
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,String)
+ [m]	Void Add(HttpContent)
+ [m]	Void Dispose(Boolean)
+ [m]	IEnumerator`1 GetEnumerator()
+ [m]	Task SerializeToStreamAsync(Stream,TransportContext)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	Boolean TryComputeLength(Int64&)

+ [t] System.Net.Http.MultipartFormDataContent
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void Add(HttpContent)
+ [m]	Void Add(HttpContent,String)
+ [m]	Void Add(HttpContent,String,String)

+ [t] System.Net.Http.StreamContent
+ [m]	Void .ctor(Stream)
+ [m]	Void .ctor(Stream,Int32)
+ [m]	Task`1 CreateContentReadStreamAsync()
+ [m]	Void Dispose(Boolean)
+ [m]	Task SerializeToStreamAsync(Stream,TransportContext)
+ [m]	Boolean TryComputeLength(Int64&)

+ [t] System.Net.Http.StringContent
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Encoding)
+ [m]	Void .ctor(String,Encoding,String)

+ [t] System.Net.Http.Headers.AuthenticationHeaderValue
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,String)
+ [m]	String get_Parameter()
+ [m]	String get_Scheme()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	AuthenticationHeaderValue Parse(String)
+ [m]	String ToString()
+ [m]	Boolean TryParse(String,AuthenticationHeaderValue&)

+ [t] System.Net.Http.Headers.CacheControlHeaderValue
+ [m]	Void .ctor()
+ [m]	ICollection`1 get_Extensions()
+ [m]	Nullable`1 get_MaxAge()
+ [m]	Void set_MaxAge(Nullable`1)
+ [m]	Boolean get_MaxStale()
+ [m]	Void set_MaxStale(Boolean)
+ [m]	Nullable`1 get_MaxStaleLimit()
+ [m]	Void set_MaxStaleLimit(Nullable`1)
+ [m]	Nullable`1 get_MinFresh()
+ [m]	Void set_MinFresh(Nullable`1)
+ [m]	Boolean get_MustRevalidate()
+ [m]	Void set_MustRevalidate(Boolean)
+ [m]	Boolean get_NoCache()
+ [m]	Void set_NoCache(Boolean)
+ [m]	ICollection`1 get_NoCacheHeaders()
+ [m]	Boolean get_NoStore()
+ [m]	Void set_NoStore(Boolean)
+ [m]	Boolean get_NoTransform()
+ [m]	Void set_NoTransform(Boolean)
+ [m]	Boolean get_OnlyIfCached()
+ [m]	Void set_OnlyIfCached(Boolean)
+ [m]	Boolean get_Private()
+ [m]	Void set_Private(Boolean)
+ [m]	ICollection`1 get_PrivateHeaders()
+ [m]	Boolean get_ProxyRevalidate()
+ [m]	Void set_ProxyRevalidate(Boolean)
+ [m]	Boolean get_Public()
+ [m]	Void set_Public(Boolean)
+ [m]	Nullable`1 get_SharedMaxAge()
+ [m]	Void set_SharedMaxAge(Nullable`1)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	CacheControlHeaderValue Parse(String)
+ [m]	String ToString()
+ [m]	Boolean TryParse(String,CacheControlHeaderValue&)

+ [t] System.Net.Http.Headers.ContentDispositionHeaderValue
+ [m]	Void .ctor(ContentDispositionHeaderValue)
+ [m]	Void .ctor(String)
+ [m]	Nullable`1 get_CreationDate()
+ [m]	Void set_CreationDate(Nullable`1)
+ [m]	String get_DispositionType()
+ [m]	Void set_DispositionType(String)
+ [m]	String get_FileName()
+ [m]	Void set_FileName(String)
+ [m]	String get_FileNameStar()
+ [m]	Void set_FileNameStar(String)
+ [m]	Nullable`1 get_ModificationDate()
+ [m]	Void set_ModificationDate(Nullable`1)
+ [m]	String get_Name()
+ [m]	Void set_Name(String)
+ [m]	ICollection`1 get_Parameters()
+ [m]	Nullable`1 get_ReadDate()
+ [m]	Void set_ReadDate(Nullable`1)
+ [m]	Nullable`1 get_Size()
+ [m]	Void set_Size(Nullable`1)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	ContentDispositionHeaderValue Parse(String)
+ [m]	String ToString()
+ [m]	Boolean TryParse(String,ContentDispositionHeaderValue&)

+ [t] System.Net.Http.Headers.ContentRangeHeaderValue
+ [m]	Void .ctor(Int64)
+ [m]	Void .ctor(Int64,Int64)
+ [m]	Void .ctor(Int64,Int64,Int64)
+ [m]	Nullable`1 get_From()
+ [m]	Boolean get_HasLength()
+ [m]	Boolean get_HasRange()
+ [m]	Nullable`1 get_Length()
+ [m]	Nullable`1 get_To()
+ [m]	String get_Unit()
+ [m]	Void set_Unit(String)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	ContentRangeHeaderValue Parse(String)
+ [m]	String ToString()
+ [m]	Boolean TryParse(String,ContentRangeHeaderValue&)

+ [t] System.Net.Http.Headers.EntityTagHeaderValue
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Boolean)
+ [m]	EntityTagHeaderValue get_Any()
+ [m]	Boolean get_IsWeak()
+ [m]	String get_Tag()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	EntityTagHeaderValue Parse(String)
+ [m]	String ToString()
+ [m]	Boolean TryParse(String,EntityTagHeaderValue&)

+ [t] System.Net.Http.Headers.HttpContentHeaders
- [m]	Void .ctor()
+ [m]	ICollection`1 get_Allow()
+ [m]	ContentDispositionHeaderValue get_ContentDisposition()
+ [m]	Void set_ContentDisposition(ContentDispositionHeaderValue)
+ [m]	ICollection`1 get_ContentEncoding()
+ [m]	ICollection`1 get_ContentLanguage()
+ [m]	Nullable`1 get_ContentLength()
+ [m]	Void set_ContentLength(Nullable`1)
+ [m]	Uri get_ContentLocation()
+ [m]	Void set_ContentLocation(Uri)
+ [m]	Byte[] get_ContentMD5()
+ [m]	Void set_ContentMD5(Byte[])
+ [m]	ContentRangeHeaderValue get_ContentRange()
+ [m]	Void set_ContentRange(ContentRangeHeaderValue)
+ [m]	MediaTypeHeaderValue get_ContentType()
+ [m]	Void set_ContentType(MediaTypeHeaderValue)
+ [m]	Nullable`1 get_Expires()
+ [m]	Void set_Expires(Nullable`1)
+ [m]	Nullable`1 get_LastModified()
+ [m]	Void set_LastModified(Nullable`1)

+ [t] System.Net.Http.Headers.HttpHeaders
+ [m]	Void .ctor()
+ [m]	Void Add(String,IEnumerable`1)
+ [m]	Void Add(String,String)
+ [m]	Void Clear()
+ [m]	Boolean Contains(String)
+ [m]	IEnumerator`1 GetEnumerator()
+ [m]	IEnumerable`1 GetValues(String)
+ [m]	Boolean Remove(String)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	String ToString()
+ [m]	Boolean TryAddWithoutValidation(String,IEnumerable`1)
+ [m]	Boolean TryAddWithoutValidation(String,String)
+ [m]	Boolean TryGetValues(String,IEnumerable`1&)

+ [t] System.Net.Http.Headers.HttpHeaderValueCollection`1
- [m]	Void .ctor()
+ [m]	Int32 get_Count()
+ [m]	Boolean get_IsReadOnly()
+ [m]	Void Add(T)
+ [m]	Void Clear()
+ [m]	Boolean Contains(T)
+ [m]	Void CopyTo(T[],Int32)
+ [m]	IEnumerator`1 GetEnumerator()
+ [m]	Void ParseAdd(String)
+ [m]	Boolean Remove(T)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	String ToString()
+ [m]	Boolean TryParseAdd(String)

+ [t] System.Net.Http.Headers.HttpRequestHeaders
+ [m]	Void .ctor()
+ [m]	HttpHeaderValueCollection`1 get_Accept()
+ [m]	HttpHeaderValueCollection`1 get_AcceptCharset()
+ [m]	HttpHeaderValueCollection`1 get_AcceptEncoding()
+ [m]	HttpHeaderValueCollection`1 get_AcceptLanguage()
+ [m]	AuthenticationHeaderValue get_Authorization()
+ [m]	Void set_Authorization(AuthenticationHeaderValue)
+ [m]	CacheControlHeaderValue get_CacheControl()
+ [m]	Void set_CacheControl(CacheControlHeaderValue)
+ [m]	HttpHeaderValueCollection`1 get_Connection()
+ [m]	Nullable`1 get_ConnectionClose()
+ [m]	Void set_ConnectionClose(Nullable`1)
+ [m]	Nullable`1 get_Date()
+ [m]	Void set_Date(Nullable`1)
+ [m]	HttpHeaderValueCollection`1 get_Expect()
+ [m]	Nullable`1 get_ExpectContinue()
+ [m]	Void set_ExpectContinue(Nullable`1)
+ [m]	String get_From()
+ [m]	Void set_From(String)
+ [m]	String get_Host()
+ [m]	Void set_Host(String)
+ [m]	HttpHeaderValueCollection`1 get_IfMatch()
+ [m]	Nullable`1 get_IfModifiedSince()
+ [m]	Void set_IfModifiedSince(Nullable`1)
+ [m]	HttpHeaderValueCollection`1 get_IfNoneMatch()
+ [m]	RangeConditionHeaderValue get_IfRange()
+ [m]	Void set_IfRange(RangeConditionHeaderValue)
+ [m]	Nullable`1 get_IfUnmodifiedSince()
+ [m]	Void set_IfUnmodifiedSince(Nullable`1)
+ [m]	Nullable`1 get_MaxForwards()
+ [m]	Void set_MaxForwards(Nullable`1)
+ [m]	HttpHeaderValueCollection`1 get_Pragma()
+ [m]	AuthenticationHeaderValue get_ProxyAuthorization()
+ [m]	Void set_ProxyAuthorization(AuthenticationHeaderValue)
+ [m]	RangeHeaderValue get_Range()
+ [m]	Void set_Range(RangeHeaderValue)
+ [m]	Uri get_Referrer()
+ [m]	Void set_Referrer(Uri)
+ [m]	HttpHeaderValueCollection`1 get_TE()
+ [m]	HttpHeaderValueCollection`1 get_Trailer()
+ [m]	HttpHeaderValueCollection`1 get_TransferEncoding()
+ [m]	Nullable`1 get_TransferEncodingChunked()
+ [m]	Void set_TransferEncodingChunked(Nullable`1)
+ [m]	HttpHeaderValueCollection`1 get_Upgrade()
+ [m]	HttpHeaderValueCollection`1 get_UserAgent()
+ [m]	HttpHeaderValueCollection`1 get_Via()
+ [m]	HttpHeaderValueCollection`1 get_Warning()

+ [t] System.Net.Http.Headers.HttpResponseHeaders
+ [m]	Void .ctor()
+ [m]	HttpHeaderValueCollection`1 get_AcceptRanges()
+ [m]	Nullable`1 get_Age()
+ [m]	Void set_Age(Nullable`1)
+ [m]	CacheControlHeaderValue get_CacheControl()
+ [m]	Void set_CacheControl(CacheControlHeaderValue)
+ [m]	HttpHeaderValueCollection`1 get_Connection()
+ [m]	Nullable`1 get_ConnectionClose()
+ [m]	Void set_ConnectionClose(Nullable`1)
+ [m]	Nullable`1 get_Date()
+ [m]	Void set_Date(Nullable`1)
+ [m]	EntityTagHeaderValue get_ETag()
+ [m]	Void set_ETag(EntityTagHeaderValue)
+ [m]	Uri get_Location()
+ [m]	Void set_Location(Uri)
+ [m]	HttpHeaderValueCollection`1 get_Pragma()
+ [m]	HttpHeaderValueCollection`1 get_ProxyAuthenticate()
+ [m]	RetryConditionHeaderValue get_RetryAfter()
+ [m]	Void set_RetryAfter(RetryConditionHeaderValue)
+ [m]	HttpHeaderValueCollection`1 get_Server()
+ [m]	HttpHeaderValueCollection`1 get_Trailer()
+ [m]	HttpHeaderValueCollection`1 get_TransferEncoding()
+ [m]	Nullable`1 get_TransferEncodingChunked()
+ [m]	Void set_TransferEncodingChunked(Nullable`1)
+ [m]	HttpHeaderValueCollection`1 get_Upgrade()
+ [m]	HttpHeaderValueCollection`1 get_Vary()
+ [m]	HttpHeaderValueCollection`1 get_Via()
+ [m]	HttpHeaderValueCollection`1 get_Warning()
+ [m]	HttpHeaderValueCollection`1 get_WwwAuthenticate()

+ [t] System.Net.Http.Headers.MediaTypeHeaderValue
+ [m]	Void .ctor(MediaTypeHeaderValue)
+ [m]	Void .ctor(String)
+ [m]	String get_CharSet()
+ [m]	Void set_CharSet(String)
+ [m]	String get_MediaType()
+ [m]	Void set_MediaType(String)
+ [m]	ICollection`1 get_Parameters()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	MediaTypeHeaderValue Parse(String)
+ [m]	String ToString()
+ [m]	Boolean TryParse(String,MediaTypeHeaderValue&)

+ [t] System.Net.Http.Headers.MediaTypeWithQualityHeaderValue
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Double)
+ [m]	Nullable`1 get_Quality()
+ [m]	Void set_Quality(Nullable`1)
+ [m]	MediaTypeWithQualityHeaderValue Parse(String)
+ [m]	Boolean TryParse(String,MediaTypeWithQualityHeaderValue&)

+ [t] System.Net.Http.Headers.NameValueHeaderValue
+ [m]	Void .ctor(NameValueHeaderValue)
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,String)
+ [m]	String get_Name()
+ [m]	String get_Value()
+ [m]	Void set_Value(String)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	NameValueHeaderValue Parse(String)
+ [m]	String ToString()
+ [m]	Boolean TryParse(String,NameValueHeaderValue&)

+ [t] System.Net.Http.Headers.NameValueWithParametersHeaderValue
+ [m]	Void .ctor(NameValueWithParametersHeaderValue)
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,String)
+ [m]	ICollection`1 get_Parameters()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	NameValueWithParametersHeaderValue Parse(String)
+ [m]	String ToString()
+ [m]	Boolean TryParse(String,NameValueWithParametersHeaderValue&)

+ [t] System.Net.Http.Headers.ProductHeaderValue
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,String)
+ [m]	String get_Name()
+ [m]	String get_Version()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	ProductHeaderValue Parse(String)
+ [m]	String ToString()
+ [m]	Boolean TryParse(String,ProductHeaderValue&)

+ [t] System.Net.Http.Headers.ProductInfoHeaderValue
+ [m]	Void .ctor(ProductHeaderValue)
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,String)
+ [m]	String get_Comment()
+ [m]	ProductHeaderValue get_Product()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	ProductInfoHeaderValue Parse(String)
+ [m]	String ToString()
+ [m]	Boolean TryParse(String,ProductInfoHeaderValue&)

+ [t] System.Net.Http.Headers.RangeConditionHeaderValue
+ [m]	Void .ctor(DateTimeOffset)
+ [m]	Void .ctor(EntityTagHeaderValue)
+ [m]	Void .ctor(String)
+ [m]	Nullable`1 get_Date()
+ [m]	EntityTagHeaderValue get_EntityTag()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	RangeConditionHeaderValue Parse(String)
+ [m]	String ToString()
+ [m]	Boolean TryParse(String,RangeConditionHeaderValue&)

+ [t] System.Net.Http.Headers.RangeHeaderValue
+ [m]	Void .ctor()
+ [m]	Void .ctor(Nullable`1,Nullable`1)
+ [m]	ICollection`1 get_Ranges()
+ [m]	String get_Unit()
+ [m]	Void set_Unit(String)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	RangeHeaderValue Parse(String)
+ [m]	String ToString()
+ [m]	Boolean TryParse(String,RangeHeaderValue&)

+ [t] System.Net.Http.Headers.RangeItemHeaderValue
+ [m]	Void .ctor(Nullable`1,Nullable`1)
+ [m]	Nullable`1 get_From()
+ [m]	Nullable`1 get_To()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	String ToString()

+ [t] System.Net.Http.Headers.RetryConditionHeaderValue
+ [m]	Void .ctor(DateTimeOffset)
+ [m]	Void .ctor(TimeSpan)
+ [m]	Nullable`1 get_Date()
+ [m]	Nullable`1 get_Delta()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	RetryConditionHeaderValue Parse(String)
+ [m]	String ToString()
+ [m]	Boolean TryParse(String,RetryConditionHeaderValue&)

+ [t] System.Net.Http.Headers.StringWithQualityHeaderValue
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Double)
+ [m]	Nullable`1 get_Quality()
+ [m]	String get_Value()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	StringWithQualityHeaderValue Parse(String)
+ [m]	String ToString()
+ [m]	Boolean TryParse(String,StringWithQualityHeaderValue&)

+ [t] System.Net.Http.Headers.TransferCodingHeaderValue
+ [m]	Void .ctor(TransferCodingHeaderValue)
+ [m]	Void .ctor(String)
+ [m]	ICollection`1 get_Parameters()
+ [m]	String get_Value()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	TransferCodingHeaderValue Parse(String)
+ [m]	String ToString()
+ [m]	Boolean TryParse(String,TransferCodingHeaderValue&)

+ [t] System.Net.Http.Headers.TransferCodingWithQualityHeaderValue
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Double)
+ [m]	Nullable`1 get_Quality()
+ [m]	Void set_Quality(Nullable`1)
+ [m]	TransferCodingWithQualityHeaderValue Parse(String)
+ [m]	Boolean TryParse(String,TransferCodingWithQualityHeaderValue&)

+ [t] System.Net.Http.Headers.ViaHeaderValue
+ [m]	Void .ctor(String,String)
+ [m]	Void .ctor(String,String,String)
+ [m]	Void .ctor(String,String,String,String)
+ [m]	String get_Comment()
+ [m]	String get_ProtocolName()
+ [m]	String get_ProtocolVersion()
+ [m]	String get_ReceivedBy()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	ViaHeaderValue Parse(String)
+ [m]	String ToString()
+ [m]	Boolean TryParse(String,ViaHeaderValue&)

+ [t] System.Net.Http.Headers.WarningHeaderValue
+ [m]	Void .ctor(Int32,String,String)
+ [m]	Void .ctor(Int32,String,String,DateTimeOffset)
+ [m]	String get_Agent()
+ [m]	Int32 get_Code()
+ [m]	Nullable`1 get_Date()
+ [m]	String get_Text()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	WarningHeaderValue Parse(String)
+ [m]	String ToString()
+ [m]	Boolean TryParse(String,WarningHeaderValue&)

---------------------------------------
- [a] System.Net.Http.Rtc.dll
---------------------------------------
+ [a] System.Net.Http.WinHttpHandler.dll
ref: ./netstandard/packages/System.Net.Http.WinHttpHandler/ref/netstandard1.3/System.Net.Http.WinHttpHandler.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/mono/2.1/System.Net.Http.WinHttpHandler.dll

+ [t] System.Net.Http.CookieUsePolicy

+ [t] System.Net.Http.WindowsProxyUsePolicy

+ [t] System.Net.Http.WinHttpHandler
+ [m]	Void .ctor()
+ [m]	DecompressionMethods get_AutomaticDecompression()
+ [m]	Void set_AutomaticDecompression(DecompressionMethods)
+ [m]	Boolean get_AutomaticRedirection()
+ [m]	Void set_AutomaticRedirection(Boolean)
+ [m]	Boolean get_CheckCertificateRevocationList()
+ [m]	Void set_CheckCertificateRevocationList(Boolean)
+ [m]	ClientCertificateOption get_ClientCertificateOption()
+ [m]	Void set_ClientCertificateOption(ClientCertificateOption)
+ [m]	X509Certificate2Collection get_ClientCertificates()
+ [m]	CookieContainer get_CookieContainer()
+ [m]	Void set_CookieContainer(CookieContainer)
+ [m]	CookieUsePolicy get_CookieUsePolicy()
+ [m]	Void set_CookieUsePolicy(CookieUsePolicy)
+ [m]	ICredentials get_DefaultProxyCredentials()
+ [m]	Void set_DefaultProxyCredentials(ICredentials)
+ [m]	Int32 get_MaxAutomaticRedirections()
+ [m]	Void set_MaxAutomaticRedirections(Int32)
+ [m]	Int32 get_MaxConnectionsPerServer()
+ [m]	Void set_MaxConnectionsPerServer(Int32)
+ [m]	Int32 get_MaxResponseDrainSize()
+ [m]	Void set_MaxResponseDrainSize(Int32)
+ [m]	Int32 get_MaxResponseHeadersLength()
+ [m]	Void set_MaxResponseHeadersLength(Int32)
+ [m]	Boolean get_PreAuthenticate()
+ [m]	Void set_PreAuthenticate(Boolean)
+ [m]	IDictionary`2 get_Properties()
+ [m]	IWebProxy get_Proxy()
+ [m]	Void set_Proxy(IWebProxy)
+ [m]	TimeSpan get_ReceiveDataTimeout()
+ [m]	Void set_ReceiveDataTimeout(TimeSpan)
+ [m]	TimeSpan get_ReceiveHeadersTimeout()
+ [m]	Void set_ReceiveHeadersTimeout(TimeSpan)
+ [m]	TimeSpan get_SendTimeout()
+ [m]	Void set_SendTimeout(TimeSpan)
+ [m]	Func`5 get_ServerCertificateValidationCallback()
+ [m]	Void set_ServerCertificateValidationCallback(Func`5)
+ [m]	ICredentials get_ServerCredentials()
+ [m]	Void set_ServerCredentials(ICredentials)
+ [m]	SslProtocols get_SslProtocols()
+ [m]	Void set_SslProtocols(SslProtocols)
+ [m]	WindowsProxyUsePolicy get_WindowsProxyUsePolicy()
+ [m]	Void set_WindowsProxyUsePolicy(WindowsProxyUsePolicy)
+ [m]	Void Dispose(Boolean)
+ [m]	Task`1 SendAsync(HttpRequestMessage,CancellationToken)

---------------------------------------
+ [a] System.Net.NameResolution.dll
ref: ./netstandard/packages/System.Net.NameResolution/ref/netstandard1.3/System.Net.NameResolution.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Net.NameResolution.dll

f [t] System.Net.Dns
+ [m]	Task`1 GetHostAddressesAsync(String)
+ [m]	Task`1 GetHostEntryAsync(IPAddress)
+ [m]	Task`1 GetHostEntryAsync(String)
+ [m]	String GetHostName()

f [t] System.Net.IPHostEntry
+ [m]	Void .ctor()
+ [m]	IPAddress[] get_AddressList()
+ [m]	Void set_AddressList(IPAddress[])
+ [m]	String[] get_Aliases()
+ [m]	Void set_Aliases(String[])
+ [m]	String get_HostName()
+ [m]	Void set_HostName(String)

---------------------------------------
+ [a] System.Net.NetworkInformation.dll
ref: ./netstandard/packages/System.Net.NetworkInformation/ref/netstandard1.3/System.Net.NetworkInformation.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Net.NetworkInformation.dll

f [t] System.Net.NetworkInformation.DuplicateAddressDetectionState

f [t] System.Net.NetworkInformation.GatewayIPAddressInformation
+ [m]	Void .ctor()
+ [m]	IPAddress get_Address()

f [t] System.Net.NetworkInformation.GatewayIPAddressInformationCollection
+ [m]	Void .ctor()
+ [m]	Int32 get_Count()
+ [m]	Boolean get_IsReadOnly()
+ [m]	GatewayIPAddressInformation get_Item(Int32)
+ [m]	Void Add(GatewayIPAddressInformation)
+ [m]	Void Clear()
+ [m]	Boolean Contains(GatewayIPAddressInformation)
+ [m]	Void CopyTo(GatewayIPAddressInformation[],Int32)
+ [m]	IEnumerator`1 GetEnumerator()
+ [m]	Boolean Remove(GatewayIPAddressInformation)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()

f [t] System.Net.NetworkInformation.IcmpV4Statistics
+ [m]	Void .ctor()
+ [m]	Int64 get_AddressMaskRepliesReceived()
+ [m]	Int64 get_AddressMaskRepliesSent()
+ [m]	Int64 get_AddressMaskRequestsReceived()
+ [m]	Int64 get_AddressMaskRequestsSent()
+ [m]	Int64 get_DestinationUnreachableMessagesReceived()
+ [m]	Int64 get_DestinationUnreachableMessagesSent()
+ [m]	Int64 get_EchoRepliesReceived()
+ [m]	Int64 get_EchoRepliesSent()
+ [m]	Int64 get_EchoRequestsReceived()
+ [m]	Int64 get_EchoRequestsSent()
+ [m]	Int64 get_ErrorsReceived()
+ [m]	Int64 get_ErrorsSent()
+ [m]	Int64 get_MessagesReceived()
+ [m]	Int64 get_MessagesSent()
+ [m]	Int64 get_ParameterProblemsReceived()
+ [m]	Int64 get_ParameterProblemsSent()
+ [m]	Int64 get_RedirectsReceived()
+ [m]	Int64 get_RedirectsSent()
+ [m]	Int64 get_SourceQuenchesReceived()
+ [m]	Int64 get_SourceQuenchesSent()
+ [m]	Int64 get_TimeExceededMessagesReceived()
+ [m]	Int64 get_TimeExceededMessagesSent()
+ [m]	Int64 get_TimestampRepliesReceived()
+ [m]	Int64 get_TimestampRepliesSent()
+ [m]	Int64 get_TimestampRequestsReceived()
+ [m]	Int64 get_TimestampRequestsSent()

f [t] System.Net.NetworkInformation.IcmpV6Statistics
+ [m]	Void .ctor()
+ [m]	Int64 get_DestinationUnreachableMessagesReceived()
+ [m]	Int64 get_DestinationUnreachableMessagesSent()
+ [m]	Int64 get_EchoRepliesReceived()
+ [m]	Int64 get_EchoRepliesSent()
+ [m]	Int64 get_EchoRequestsReceived()
+ [m]	Int64 get_EchoRequestsSent()
+ [m]	Int64 get_ErrorsReceived()
+ [m]	Int64 get_ErrorsSent()
+ [m]	Int64 get_MembershipQueriesReceived()
+ [m]	Int64 get_MembershipQueriesSent()
+ [m]	Int64 get_MembershipReductionsReceived()
+ [m]	Int64 get_MembershipReductionsSent()
+ [m]	Int64 get_MembershipReportsReceived()
+ [m]	Int64 get_MembershipReportsSent()
+ [m]	Int64 get_MessagesReceived()
+ [m]	Int64 get_MessagesSent()
+ [m]	Int64 get_NeighborAdvertisementsReceived()
+ [m]	Int64 get_NeighborAdvertisementsSent()
+ [m]	Int64 get_NeighborSolicitsReceived()
+ [m]	Int64 get_NeighborSolicitsSent()
+ [m]	Int64 get_PacketTooBigMessagesReceived()
+ [m]	Int64 get_PacketTooBigMessagesSent()
+ [m]	Int64 get_ParameterProblemsReceived()
+ [m]	Int64 get_ParameterProblemsSent()
+ [m]	Int64 get_RedirectsReceived()
+ [m]	Int64 get_RedirectsSent()
+ [m]	Int64 get_RouterAdvertisementsReceived()
+ [m]	Int64 get_RouterAdvertisementsSent()
+ [m]	Int64 get_RouterSolicitsReceived()
+ [m]	Int64 get_RouterSolicitsSent()
+ [m]	Int64 get_TimeExceededMessagesReceived()
+ [m]	Int64 get_TimeExceededMessagesSent()

f [t] System.Net.NetworkInformation.IPAddressInformation
+ [m]	Void .ctor()
+ [m]	IPAddress get_Address()
+ [m]	Boolean get_IsDnsEligible()
+ [m]	Boolean get_IsTransient()

f [t] System.Net.NetworkInformation.IPAddressInformationCollection
+ [m]	Void .ctor()
+ [m]	Int32 get_Count()
+ [m]	Boolean get_IsReadOnly()
+ [m]	IPAddressInformation get_Item(Int32)
+ [m]	Void Add(IPAddressInformation)
+ [m]	Void Clear()
+ [m]	Boolean Contains(IPAddressInformation)
+ [m]	Void CopyTo(IPAddressInformation[],Int32)
+ [m]	IEnumerator`1 GetEnumerator()
+ [m]	Boolean Remove(IPAddressInformation)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()

f [t] System.Net.NetworkInformation.IPGlobalProperties
+ [m]	Void .ctor()
+ [m]	String get_DhcpScopeName()
+ [m]	String get_DomainName()
+ [m]	String get_HostName()
+ [m]	Boolean get_IsWinsProxy()
+ [m]	NetBiosNodeType get_NodeType()
+ [m]	TcpConnectionInformation[] GetActiveTcpConnections()
+ [m]	IPEndPoint[] GetActiveTcpListeners()
+ [m]	IPEndPoint[] GetActiveUdpListeners()
+ [m]	IcmpV4Statistics GetIcmpV4Statistics()
+ [m]	IcmpV6Statistics GetIcmpV6Statistics()
+ [m]	IPGlobalProperties GetIPGlobalProperties()
+ [m]	IPGlobalStatistics GetIPv4GlobalStatistics()
+ [m]	IPGlobalStatistics GetIPv6GlobalStatistics()
+ [m]	TcpStatistics GetTcpIPv4Statistics()
+ [m]	TcpStatistics GetTcpIPv6Statistics()
+ [m]	UdpStatistics GetUdpIPv4Statistics()
+ [m]	UdpStatistics GetUdpIPv6Statistics()
- [m]	Task`1 GetUnicastAddressesAsync()

f [t] System.Net.NetworkInformation.IPGlobalStatistics
+ [m]	Void .ctor()
+ [m]	Int32 get_DefaultTtl()
+ [m]	Boolean get_ForwardingEnabled()
+ [m]	Int32 get_NumberOfInterfaces()
+ [m]	Int32 get_NumberOfIPAddresses()
+ [m]	Int32 get_NumberOfRoutes()
+ [m]	Int64 get_OutputPacketRequests()
+ [m]	Int64 get_OutputPacketRoutingDiscards()
+ [m]	Int64 get_OutputPacketsDiscarded()
+ [m]	Int64 get_OutputPacketsWithNoRoute()
+ [m]	Int64 get_PacketFragmentFailures()
+ [m]	Int64 get_PacketReassembliesRequired()
+ [m]	Int64 get_PacketReassemblyFailures()
+ [m]	Int64 get_PacketReassemblyTimeout()
+ [m]	Int64 get_PacketsFragmented()
+ [m]	Int64 get_PacketsReassembled()
+ [m]	Int64 get_ReceivedPackets()
+ [m]	Int64 get_ReceivedPacketsDelivered()
+ [m]	Int64 get_ReceivedPacketsDiscarded()
+ [m]	Int64 get_ReceivedPacketsForwarded()
+ [m]	Int64 get_ReceivedPacketsWithAddressErrors()
+ [m]	Int64 get_ReceivedPacketsWithHeadersErrors()
+ [m]	Int64 get_ReceivedPacketsWithUnknownProtocol()

f [t] System.Net.NetworkInformation.IPInterfaceProperties
+ [m]	Void .ctor()
+ [m]	IPAddressInformationCollection get_AnycastAddresses()
+ [m]	IPAddressCollection get_DhcpServerAddresses()
+ [m]	IPAddressCollection get_DnsAddresses()
+ [m]	String get_DnsSuffix()
+ [m]	GatewayIPAddressInformationCollection get_GatewayAddresses()
+ [m]	Boolean get_IsDnsEnabled()
+ [m]	Boolean get_IsDynamicDnsEnabled()
+ [m]	MulticastIPAddressInformationCollection get_MulticastAddresses()
+ [m]	UnicastIPAddressInformationCollection get_UnicastAddresses()
+ [m]	IPAddressCollection get_WinsServersAddresses()
+ [m]	IPv4InterfaceProperties GetIPv4Properties()
+ [m]	IPv6InterfaceProperties GetIPv6Properties()

f [t] System.Net.NetworkInformation.IPInterfaceStatistics
+ [m]	Void .ctor()
+ [m]	Int64 get_BytesReceived()
+ [m]	Int64 get_BytesSent()
+ [m]	Int64 get_IncomingPacketsDiscarded()
+ [m]	Int64 get_IncomingPacketsWithErrors()
+ [m]	Int64 get_IncomingUnknownProtocolPackets()
+ [m]	Int64 get_NonUnicastPacketsReceived()
+ [m]	Int64 get_NonUnicastPacketsSent()
+ [m]	Int64 get_OutgoingPacketsDiscarded()
+ [m]	Int64 get_OutgoingPacketsWithErrors()
+ [m]	Int64 get_OutputQueueLength()
+ [m]	Int64 get_UnicastPacketsReceived()
+ [m]	Int64 get_UnicastPacketsSent()

f [t] System.Net.NetworkInformation.IPv4InterfaceProperties
+ [m]	Void .ctor()
+ [m]	Int32 get_Index()
+ [m]	Boolean get_IsAutomaticPrivateAddressingActive()
+ [m]	Boolean get_IsAutomaticPrivateAddressingEnabled()
+ [m]	Boolean get_IsDhcpEnabled()
+ [m]	Boolean get_IsForwardingEnabled()
+ [m]	Int32 get_Mtu()
+ [m]	Boolean get_UsesWins()

f [t] System.Net.NetworkInformation.IPv6InterfaceProperties
+ [m]	Void .ctor()
+ [m]	Int32 get_Index()
+ [m]	Int32 get_Mtu()
- [m]	Int64 GetScopeId(ScopeLevel)

f [t] System.Net.NetworkInformation.MulticastIPAddressInformation
+ [m]	Void .ctor()
+ [m]	Int64 get_AddressPreferredLifetime()
+ [m]	Int64 get_AddressValidLifetime()
+ [m]	Int64 get_DhcpLeaseLifetime()
+ [m]	DuplicateAddressDetectionState get_DuplicateAddressDetectionState()
+ [m]	PrefixOrigin get_PrefixOrigin()
+ [m]	SuffixOrigin get_SuffixOrigin()

f [t] System.Net.NetworkInformation.MulticastIPAddressInformationCollection
+ [m]	Void .ctor()
+ [m]	Int32 get_Count()
+ [m]	Boolean get_IsReadOnly()
+ [m]	MulticastIPAddressInformation get_Item(Int32)
+ [m]	Void Add(MulticastIPAddressInformation)
+ [m]	Void Clear()
+ [m]	Boolean Contains(MulticastIPAddressInformation)
+ [m]	Void CopyTo(MulticastIPAddressInformation[],Int32)
+ [m]	IEnumerator`1 GetEnumerator()
+ [m]	Boolean Remove(MulticastIPAddressInformation)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()

f [t] System.Net.NetworkInformation.NetBiosNodeType

f [t] System.Net.NetworkInformation.NetworkAddressChangedEventHandler
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object,EventArgs)
+ [m]	IAsyncResult BeginInvoke(Object,EventArgs,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Net.NetworkInformation.NetworkChange
+ [m]	Void add_NetworkAddressChanged(NetworkAddressChangedEventHandler)
+ [m]	Void remove_NetworkAddressChanged(NetworkAddressChangedEventHandler)

f [t] System.Net.NetworkInformation.NetworkInformationException
+ [m]	Void .ctor()
+ [m]	Void .ctor(Int32)
+ [m]	Int32 get_ErrorCode()

f [t] System.Net.NetworkInformation.NetworkInterface
+ [m]	Void .ctor()
+ [m]	String get_Description()
+ [m]	String get_Id()
- [m]	Int32 get_IPv6LoopbackInterfaceIndex()
+ [m]	Boolean get_IsReceiveOnly()
+ [m]	Int32 get_LoopbackInterfaceIndex()
+ [m]	String get_Name()
+ [m]	NetworkInterfaceType get_NetworkInterfaceType()
+ [m]	OperationalStatus get_OperationalStatus()
+ [m]	Int64 get_Speed()
+ [m]	Boolean get_SupportsMulticast()
+ [m]	NetworkInterface[] GetAllNetworkInterfaces()
+ [m]	IPInterfaceProperties GetIPProperties()
- [m]	IPInterfaceStatistics GetIPStatistics()
+ [m]	Boolean GetIsNetworkAvailable()
+ [m]	PhysicalAddress GetPhysicalAddress()
+ [m]	Boolean Supports(NetworkInterfaceComponent)

f [t] System.Net.NetworkInformation.NetworkInterfaceComponent

f [t] System.Net.NetworkInformation.NetworkInterfaceType

f [t] System.Net.NetworkInformation.OperationalStatus

f [t] System.Net.NetworkInformation.PhysicalAddress
+ [m]	Void .ctor(Byte[])
+ [m]	Boolean Equals(Object)
+ [m]	Byte[] GetAddressBytes()
+ [m]	Int32 GetHashCode()
+ [m]	PhysicalAddress Parse(String)
+ [m]	String ToString()

f [t] System.Net.NetworkInformation.PrefixOrigin

f [t] System.Net.NetworkInformation.ScopeLevel

f [t] System.Net.NetworkInformation.SuffixOrigin

f [t] System.Net.NetworkInformation.TcpConnectionInformation
+ [m]	Void .ctor()
+ [m]	IPEndPoint get_LocalEndPoint()
+ [m]	IPEndPoint get_RemoteEndPoint()
+ [m]	TcpState get_State()

f [t] System.Net.NetworkInformation.TcpState

f [t] System.Net.NetworkInformation.TcpStatistics
+ [m]	Void .ctor()
+ [m]	Int64 get_ConnectionsAccepted()
+ [m]	Int64 get_ConnectionsInitiated()
+ [m]	Int64 get_CumulativeConnections()
+ [m]	Int64 get_CurrentConnections()
+ [m]	Int64 get_ErrorsReceived()
+ [m]	Int64 get_FailedConnectionAttempts()
+ [m]	Int64 get_MaximumConnections()
+ [m]	Int64 get_MaximumTransmissionTimeout()
+ [m]	Int64 get_MinimumTransmissionTimeout()
+ [m]	Int64 get_ResetConnections()
+ [m]	Int64 get_ResetsSent()
+ [m]	Int64 get_SegmentsReceived()
+ [m]	Int64 get_SegmentsResent()
+ [m]	Int64 get_SegmentsSent()

f [t] System.Net.NetworkInformation.UdpStatistics
+ [m]	Void .ctor()
+ [m]	Int64 get_DatagramsReceived()
+ [m]	Int64 get_DatagramsSent()
+ [m]	Int64 get_IncomingDatagramsDiscarded()
+ [m]	Int64 get_IncomingDatagramsWithErrors()
+ [m]	Int32 get_UdpListeners()

f [t] System.Net.NetworkInformation.UnicastIPAddressInformation
+ [m]	Void .ctor()
+ [m]	Int64 get_AddressPreferredLifetime()
+ [m]	Int64 get_AddressValidLifetime()
+ [m]	Int64 get_DhcpLeaseLifetime()
+ [m]	DuplicateAddressDetectionState get_DuplicateAddressDetectionState()
+ [m]	IPAddress get_IPv4Mask()
! [m]	Int32 get_PrefixLength()
+ [m]	PrefixOrigin get_PrefixOrigin()
+ [m]	SuffixOrigin get_SuffixOrigin()

f [t] System.Net.NetworkInformation.UnicastIPAddressInformationCollection
+ [m]	Void .ctor()
+ [m]	Int32 get_Count()
+ [m]	Boolean get_IsReadOnly()
+ [m]	UnicastIPAddressInformation get_Item(Int32)
+ [m]	Void Add(UnicastIPAddressInformation)
+ [m]	Void Clear()
+ [m]	Boolean Contains(UnicastIPAddressInformation)
+ [m]	Void CopyTo(UnicastIPAddressInformation[],Int32)
+ [m]	IEnumerator`1 GetEnumerator()
+ [m]	Boolean Remove(UnicastIPAddressInformation)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()

---------------------------------------
+ [a] System.Net.Ping.dll
ref: ./netstandard/packages/System.Net.Ping/ref/netstandard1.3/System.Net.Ping.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Net.Ping.dll

f [t] System.Net.NetworkInformation.IPStatus

f [t] System.Net.NetworkInformation.Ping
+ [m]	Void .ctor()
+ [m]	Task`1 SendPingAsync(IPAddress)
+ [m]	Task`1 SendPingAsync(IPAddress,Int32)
+ [m]	Task`1 SendPingAsync(IPAddress,Int32,Byte[])
+ [m]	Task`1 SendPingAsync(IPAddress,Int32,Byte[],PingOptions)
+ [m]	Task`1 SendPingAsync(String)
+ [m]	Task`1 SendPingAsync(String,Int32)
+ [m]	Task`1 SendPingAsync(String,Int32,Byte[])
+ [m]	Task`1 SendPingAsync(String,Int32,Byte[],PingOptions)
- [m]	Void Dispose()
- [m]	Void Dispose(Boolean)

f [t] System.Net.NetworkInformation.PingException
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Net.NetworkInformation.PingOptions
+ [m]	Void .ctor()
+ [m]	Void .ctor(Int32,Boolean)
+ [m]	Boolean get_DontFragment()
+ [m]	Void set_DontFragment(Boolean)
+ [m]	Int32 get_Ttl()
+ [m]	Void set_Ttl(Int32)

f [t] System.Net.NetworkInformation.PingReply
- [m]	Void .ctor()
+ [m]	IPAddress get_Address()
+ [m]	Byte[] get_Buffer()
+ [m]	PingOptions get_Options()
+ [m]	Int64 get_RoundtripTime()
+ [m]	IPStatus get_Status()

---------------------------------------
+ [a] System.Net.Primitives.dll
ref: ./netstandard/packages/System.Net.Primitives/ref/netstandard1.3/System.Net.Primitives.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Net.Primitives.dll

f [t] System.Security.Authentication.CipherAlgorithmType

f [t] System.Security.Authentication.ExchangeAlgorithmType

f [t] System.Security.Authentication.HashAlgorithmType

f [t] System.Security.Authentication.SslProtocols

f [t] System.Security.Authentication.ExtendedProtection.ChannelBinding
+ [m]	Void .ctor()
+ [m]	Void .ctor(Boolean)
+ [m]	Int32 get_Size()

f [t] System.Security.Authentication.ExtendedProtection.ChannelBindingKind

f [t] System.Net.AuthenticationSchemes

f [t] System.Net.Cookie
+ [m]	Void .ctor()
+ [m]	Void .ctor(String,String)
+ [m]	Void .ctor(String,String,String)
+ [m]	Void .ctor(String,String,String,String)
+ [m]	String get_Comment()
+ [m]	Void set_Comment(String)
+ [m]	Uri get_CommentUri()
+ [m]	Void set_CommentUri(Uri)
+ [m]	Boolean get_Discard()
+ [m]	Void set_Discard(Boolean)
+ [m]	String get_Domain()
+ [m]	Void set_Domain(String)
+ [m]	Boolean get_Expired()
+ [m]	Void set_Expired(Boolean)
+ [m]	DateTime get_Expires()
+ [m]	Void set_Expires(DateTime)
+ [m]	Boolean get_HttpOnly()
+ [m]	Void set_HttpOnly(Boolean)
+ [m]	String get_Name()
+ [m]	Void set_Name(String)
+ [m]	String get_Path()
+ [m]	Void set_Path(String)
+ [m]	String get_Port()
+ [m]	Void set_Port(String)
+ [m]	Boolean get_Secure()
+ [m]	Void set_Secure(Boolean)
+ [m]	DateTime get_TimeStamp()
+ [m]	String get_Value()
+ [m]	Void set_Value(String)
+ [m]	Int32 get_Version()
+ [m]	Void set_Version(Int32)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	String ToString()

f [t] System.Net.CookieCollection
+ [m]	Void .ctor()
+ [m]	Int32 get_Count()
+ [m]	Cookie get_Item(String)
- [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
- [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Void Add(Cookie)
+ [m]	Void Add(CookieCollection)
+ [m]	IEnumerator GetEnumerator()
- [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)

f [t] System.Net.CookieContainer
+ [m]	Void .ctor()
+ [m]	Int32 get_Capacity()
+ [m]	Void set_Capacity(Int32)
+ [m]	Int32 get_Count()
+ [m]	Int32 get_MaxCookieSize()
+ [m]	Void set_MaxCookieSize(Int32)
+ [m]	Int32 get_PerDomainCapacity()
+ [m]	Void set_PerDomainCapacity(Int32)
+ [m]	Void Add(Uri,Cookie)
+ [m]	Void Add(Uri,CookieCollection)
+ [m]	String GetCookieHeader(Uri)
+ [m]	CookieCollection GetCookies(Uri)
+ [m]	Void SetCookies(Uri,String)

f [t] System.Net.CookieException
+ [m]	Void .ctor()

f [t] System.Net.CredentialCache
+ [m]	Void .ctor()
+ [m]	ICredentials get_DefaultCredentials()
+ [m]	NetworkCredential get_DefaultNetworkCredentials()
+ [m]	Void Add(String,Int32,String,NetworkCredential)
+ [m]	Void Add(Uri,String,NetworkCredential)
+ [m]	NetworkCredential GetCredential(String,Int32,String)
+ [m]	NetworkCredential GetCredential(Uri,String)
+ [m]	IEnumerator GetEnumerator()
+ [m]	Void Remove(String,Int32,String)
+ [m]	Void Remove(Uri,String)

f [t] System.Net.DecompressionMethods

f [t] System.Net.DnsEndPoint
+ [m]	Void .ctor(String,Int32)
+ [m]	Void .ctor(String,Int32,AddressFamily)
+ [m]	AddressFamily get_AddressFamily()
+ [m]	String get_Host()
+ [m]	Int32 get_Port()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	String ToString()

f [t] System.Net.EndPoint
+ [m]	Void .ctor()
+ [m]	AddressFamily get_AddressFamily()
+ [m]	EndPoint Create(SocketAddress)
+ [m]	SocketAddress Serialize()

f [t] System.Net.HttpStatusCode

f [t] System.Net.ICredentials
+ [m]	NetworkCredential GetCredential(Uri,String)

f [t] System.Net.ICredentialsByHost
+ [m]	NetworkCredential GetCredential(String,Int32,String)

f [t] System.Net.IPAddress
+ [m]	Void .ctor(Byte[])
+ [m]	Void .ctor(Byte[],Int64)
+ [m]	Void .ctor(Int64)
+ [m]	AddressFamily get_AddressFamily()
- [m]	Boolean get_IsIPv4MappedToIPv6()
+ [m]	Boolean get_IsIPv6LinkLocal()
+ [m]	Boolean get_IsIPv6Multicast()
+ [m]	Boolean get_IsIPv6SiteLocal()
+ [m]	Boolean get_IsIPv6Teredo()
+ [m]	Int64 get_ScopeId()
+ [m]	Void set_ScopeId(Int64)
+ [m]	Boolean Equals(Object)
+ [m]	Byte[] GetAddressBytes()
+ [m]	Int32 GetHashCode()
+ [m]	Int16 HostToNetworkOrder(Int16)
+ [m]	Int32 HostToNetworkOrder(Int32)
+ [m]	Int64 HostToNetworkOrder(Int64)
+ [m]	Boolean IsLoopback(IPAddress)
+ [m]	IPAddress MapToIPv4()
+ [m]	IPAddress MapToIPv6()
+ [m]	Int16 NetworkToHostOrder(Int16)
+ [m]	Int32 NetworkToHostOrder(Int32)
+ [m]	Int64 NetworkToHostOrder(Int64)
+ [m]	IPAddress Parse(String)
+ [m]	String ToString()
+ [m]	Boolean TryParse(String,IPAddress&)

f [t] System.Net.IPEndPoint
+ [m]	Void .ctor(Int64,Int32)
+ [m]	Void .ctor(IPAddress,Int32)
+ [m]	IPAddress get_Address()
+ [m]	Void set_Address(IPAddress)
+ [m]	AddressFamily get_AddressFamily()
+ [m]	Int32 get_Port()
+ [m]	Void set_Port(Int32)
+ [m]	EndPoint Create(SocketAddress)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	SocketAddress Serialize()
+ [m]	String ToString()

f [t] System.Net.IWebProxy
+ [m]	ICredentials get_Credentials()
+ [m]	Void set_Credentials(ICredentials)
+ [m]	Uri GetProxy(Uri)
+ [m]	Boolean IsBypassed(Uri)

f [t] System.Net.NetworkCredential
+ [m]	Void .ctor()
+ [m]	Void .ctor(String,String)
+ [m]	Void .ctor(String,String,String)
+ [m]	String get_Domain()
+ [m]	Void set_Domain(String)
+ [m]	String get_Password()
+ [m]	Void set_Password(String)
+ [m]	String get_UserName()
+ [m]	Void set_UserName(String)
+ [m]	NetworkCredential GetCredential(String,Int32,String)
+ [m]	NetworkCredential GetCredential(Uri,String)

f [t] System.Net.SocketAddress
+ [m]	Void .ctor(AddressFamily)
+ [m]	Void .ctor(AddressFamily,Int32)
+ [m]	AddressFamily get_Family()
+ [m]	Byte get_Item(Int32)
+ [m]	Void set_Item(Int32,Byte)
+ [m]	Int32 get_Size()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	String ToString()

f [t] System.Net.TransportContext
+ [m]	Void .ctor()
+ [m]	ChannelBinding GetChannelBinding(ChannelBindingKind)

f [t] System.Net.Sockets.AddressFamily

f [t] System.Net.Sockets.SocketError

f [t] System.Net.Sockets.SocketException
+ [m]	Void .ctor()
+ [m]	Void .ctor(Int32)
+ [m]	String get_Message()
+ [m]	SocketError get_SocketErrorCode()

f [t] System.Net.Security.AuthenticationLevel

f [t] System.Net.Security.SslPolicyErrors

f [t] System.Net.NetworkInformation.IPAddressCollection
+ [m]	Void .ctor()
+ [m]	Int32 get_Count()
+ [m]	Boolean get_IsReadOnly()
+ [m]	IPAddress get_Item(Int32)
+ [m]	Void Add(IPAddress)
+ [m]	Void Clear()
+ [m]	Boolean Contains(IPAddress)
+ [m]	Void CopyTo(IPAddress[],Int32)
+ [m]	IEnumerator`1 GetEnumerator()
+ [m]	Boolean Remove(IPAddress)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()

---------------------------------------
+ [a] System.Net.Requests.dll
ref: ./netstandard/packages/System.Net.Requests/ref/netstandard1.3/System.Net.Requests.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Net.Requests.dll

f [t] System.Net.HttpWebRequest
- [m]	Void .ctor()
+ [m]	String get_Accept()
+ [m]	Void set_Accept(String)
+ [m]	Boolean get_AllowReadStreamBuffering()
+ [m]	Void set_AllowReadStreamBuffering(Boolean)
+ [m]	String get_ContentType()
+ [m]	Void set_ContentType(String)
! [m]	Int32 get_ContinueTimeout()
! [m]	Void set_ContinueTimeout(Int32)
+ [m]	CookieContainer get_CookieContainer()
+ [m]	Void set_CookieContainer(CookieContainer)
+ [m]	ICredentials get_Credentials()
+ [m]	Void set_Credentials(ICredentials)
+ [m]	Boolean get_HaveResponse()
+ [m]	WebHeaderCollection get_Headers()
+ [m]	Void set_Headers(WebHeaderCollection)
+ [m]	String get_Method()
+ [m]	Void set_Method(String)
+ [m]	Uri get_RequestUri()
+ [m]	Boolean get_SupportsCookieContainer()
+ [m]	Boolean get_UseDefaultCredentials()
+ [m]	Void set_UseDefaultCredentials(Boolean)
+ [m]	Void Abort()
+ [m]	IAsyncResult BeginGetRequestStream(AsyncCallback,Object)
+ [m]	IAsyncResult BeginGetResponse(AsyncCallback,Object)
+ [m]	Stream EndGetRequestStream(IAsyncResult)
+ [m]	WebResponse EndGetResponse(IAsyncResult)

f [t] System.Net.HttpWebResponse
- [m]	Void .ctor()
+ [m]	Int64 get_ContentLength()
+ [m]	String get_ContentType()
+ [m]	CookieCollection get_Cookies()
+ [m]	WebHeaderCollection get_Headers()
+ [m]	String get_Method()
+ [m]	Uri get_ResponseUri()
+ [m]	HttpStatusCode get_StatusCode()
+ [m]	String get_StatusDescription()
- [m]	Boolean get_SupportsHeaders()
+ [m]	Void Dispose(Boolean)
+ [m]	Stream GetResponseStream()

f [t] System.Net.IWebRequestCreate
+ [m]	WebRequest Create(Uri)

f [t] System.Net.ProtocolViolationException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)

f [t] System.Net.WebException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	Void .ctor(String,Exception,WebExceptionStatus,WebResponse)
+ [m]	Void .ctor(String,WebExceptionStatus)
+ [m]	WebResponse get_Response()
+ [m]	WebExceptionStatus get_Status()

f [t] System.Net.WebExceptionStatus

f [t] System.Net.WebRequest
+ [m]	Void .ctor()
+ [m]	String get_ContentType()
+ [m]	Void set_ContentType(String)
+ [m]	ICredentials get_Credentials()
+ [m]	Void set_Credentials(ICredentials)
+ [m]	IWebProxy get_DefaultWebProxy()
+ [m]	Void set_DefaultWebProxy(IWebProxy)
+ [m]	WebHeaderCollection get_Headers()
+ [m]	Void set_Headers(WebHeaderCollection)
+ [m]	String get_Method()
+ [m]	Void set_Method(String)
+ [m]	IWebProxy get_Proxy()
+ [m]	Void set_Proxy(IWebProxy)
+ [m]	Uri get_RequestUri()
+ [m]	Boolean get_UseDefaultCredentials()
+ [m]	Void set_UseDefaultCredentials(Boolean)
+ [m]	Void Abort()
+ [m]	IAsyncResult BeginGetRequestStream(AsyncCallback,Object)
+ [m]	IAsyncResult BeginGetResponse(AsyncCallback,Object)
+ [m]	WebRequest Create(String)
+ [m]	WebRequest Create(Uri)
+ [m]	HttpWebRequest CreateHttp(String)
+ [m]	HttpWebRequest CreateHttp(Uri)
+ [m]	Stream EndGetRequestStream(IAsyncResult)
+ [m]	WebResponse EndGetResponse(IAsyncResult)
+ [m]	Task`1 GetRequestStreamAsync()
+ [m]	Task`1 GetResponseAsync()
+ [m]	Boolean RegisterPrefix(String,IWebRequestCreate)

f [t] System.Net.WebResponse
+ [m]	Void .ctor()
+ [m]	Int64 get_ContentLength()
+ [m]	String get_ContentType()
+ [m]	WebHeaderCollection get_Headers()
+ [m]	Uri get_ResponseUri()
+ [m]	Boolean get_SupportsHeaders()
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Stream GetResponseStream()

---------------------------------------
+ [a] System.Net.Security.dll
ref: ./netstandard/packages/System.Net.Security/ref/netstandard1.3/System.Net.Security.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Net.Security.dll

f [t] System.Security.Authentication.AuthenticationException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Security.Authentication.InvalidCredentialException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Security.Authentication.ExtendedProtection.ExtendedProtectionPolicy
+ [m]	Void .ctor(PolicyEnforcement)
+ [m]	Void .ctor(PolicyEnforcement,ChannelBinding)
+ [m]	Void .ctor(PolicyEnforcement,ProtectionScenario,ICollection)
+ [m]	Void .ctor(PolicyEnforcement,ProtectionScenario,ServiceNameCollection)
! [m]	ChannelBinding get_CustomChannelBinding()
! [m]	ServiceNameCollection get_CustomServiceNames()
! [m]	Boolean get_OSSupportsExtendedProtection()
! [m]	PolicyEnforcement get_PolicyEnforcement()
! [m]	ProtectionScenario get_ProtectionScenario()
+ [m]	String ToString()

f [t] System.Security.Authentication.ExtendedProtection.PolicyEnforcement

f [t] System.Security.Authentication.ExtendedProtection.ProtectionScenario

f [t] System.Security.Authentication.ExtendedProtection.ServiceNameCollection
+ [m]	Void .ctor(ICollection)
- [m]	Boolean Contains(String)
! [m]	ServiceNameCollection Merge(IEnumerable)
! [m]	ServiceNameCollection Merge(String)
- [m]	Int32 get_Count()
- [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
- [m]	Object System.Collections.ICollection.get_SyncRoot()
- [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
- [m]	IEnumerator GetEnumerator()

f [t] System.Net.Security.AuthenticatedStream
+ [m]	Void .ctor(Stream,Boolean)
+ [m]	Boolean get_IsAuthenticated()
+ [m]	Boolean get_IsEncrypted()
+ [m]	Boolean get_IsMutuallyAuthenticated()
+ [m]	Boolean get_IsServer()
+ [m]	Boolean get_IsSigned()
+ [m]	Boolean get_LeaveInnerStreamOpen()
+ [m]	Stream get_InnerStream()
+ [m]	Void Dispose(Boolean)

f [t] System.Net.Security.EncryptionPolicy

f [t] System.Net.Security.LocalCertificateSelectionCallback
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	X509Certificate Invoke(Object,String,X509CertificateCollection,X509Certificate,String[])
+ [m]	IAsyncResult BeginInvoke(Object,String,X509CertificateCollection,X509Certificate,String[],AsyncCallback,Object)
+ [m]	X509Certificate EndInvoke(IAsyncResult)

f [t] System.Net.Security.NegotiateStream
+ [m]	Void .ctor(Stream)
+ [m]	Void .ctor(Stream,Boolean)
+ [m]	Boolean get_CanRead()
+ [m]	Boolean get_CanSeek()
! [m]	Boolean get_CanTimeout()
+ [m]	Boolean get_CanWrite()
! [m]	TokenImpersonationLevel get_ImpersonationLevel()
! [m]	Boolean get_IsAuthenticated()
! [m]	Boolean get_IsEncrypted()
! [m]	Boolean get_IsMutuallyAuthenticated()
! [m]	Boolean get_IsServer()
! [m]	Boolean get_IsSigned()
+ [m]	Int64 get_Length()
+ [m]	Int64 get_Position()
+ [m]	Void set_Position(Int64)
+ [m]	Int32 get_ReadTimeout()
+ [m]	Void set_ReadTimeout(Int32)
! [m]	IIdentity get_RemoteIdentity()
+ [m]	Int32 get_WriteTimeout()
+ [m]	Void set_WriteTimeout(Int32)
- [m]	Task AuthenticateAsClientAsync()
- [m]	Task AuthenticateAsClientAsync(NetworkCredential,String)
- [m]	Task AuthenticateAsClientAsync(NetworkCredential,ChannelBinding,String)
- [m]	Task AuthenticateAsClientAsync(NetworkCredential,String,ProtectionLevel,TokenImpersonationLevel)
- [m]	Task AuthenticateAsClientAsync(NetworkCredential,ChannelBinding,String,ProtectionLevel,TokenImpersonationLevel)
- [m]	Task AuthenticateAsServerAsync()
- [m]	Task AuthenticateAsServerAsync(ExtendedProtectionPolicy)
- [m]	Task AuthenticateAsServerAsync(NetworkCredential,ProtectionLevel,TokenImpersonationLevel)
- [m]	Task AuthenticateAsServerAsync(NetworkCredential,ExtendedProtectionPolicy,ProtectionLevel,TokenImpersonationLevel)
+ [m]	Void Flush()
! [m]	Int32 Read(Byte[],Int32,Int32)
! [m]	Int64 Seek(Int64,SeekOrigin)
! [m]	Void SetLength(Int64)
! [m]	Void Write(Byte[],Int32,Int32)

f [t] System.Net.Security.ProtectionLevel

f [t] System.Net.Security.RemoteCertificateValidationCallback
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Boolean Invoke(Object,X509Certificate,X509Chain,SslPolicyErrors)
+ [m]	IAsyncResult BeginInvoke(Object,X509Certificate,X509Chain,SslPolicyErrors,AsyncCallback,Object)
+ [m]	Boolean EndInvoke(IAsyncResult)

f [t] System.Net.Security.SslStream
+ [m]	Void .ctor(Stream)
+ [m]	Void .ctor(Stream,Boolean)
+ [m]	Void .ctor(Stream,Boolean,RemoteCertificateValidationCallback)
+ [m]	Void .ctor(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
- [m]	Void .ctor(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
+ [m]	Boolean get_CanRead()
+ [m]	Boolean get_CanSeek()
+ [m]	Boolean get_CanTimeout()
+ [m]	Boolean get_CanWrite()
+ [m]	Boolean get_CheckCertRevocationStatus()
+ [m]	CipherAlgorithmType get_CipherAlgorithm()
+ [m]	Int32 get_CipherStrength()
+ [m]	HashAlgorithmType get_HashAlgorithm()
+ [m]	Int32 get_HashStrength()
+ [m]	Boolean get_IsAuthenticated()
+ [m]	Boolean get_IsEncrypted()
+ [m]	Boolean get_IsMutuallyAuthenticated()
+ [m]	Boolean get_IsServer()
+ [m]	Boolean get_IsSigned()
+ [m]	ExchangeAlgorithmType get_KeyExchangeAlgorithm()
+ [m]	Int32 get_KeyExchangeStrength()
+ [m]	Int64 get_Length()
+ [m]	X509Certificate get_LocalCertificate()
+ [m]	Int64 get_Position()
+ [m]	Void set_Position(Int64)
+ [m]	Int32 get_ReadTimeout()
+ [m]	Void set_ReadTimeout(Int32)
+ [m]	X509Certificate get_RemoteCertificate()
+ [m]	SslProtocols get_SslProtocol()
+ [m]	TransportContext get_TransportContext()
+ [m]	Int32 get_WriteTimeout()
+ [m]	Void set_WriteTimeout(Int32)
+ [m]	Task AuthenticateAsClientAsync(String)
+ [m]	Task AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
+ [m]	Task AuthenticateAsServerAsync(X509Certificate)
+ [m]	Task AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
+ [m]	Void Flush()
+ [m]	Int32 Read(Byte[],Int32,Int32)
+ [m]	Int64 Seek(Int64,SeekOrigin)
+ [m]	Void SetLength(Int64)
+ [m]	Void Write(Byte[])
+ [m]	Void Write(Byte[],Int32,Int32)

---------------------------------------
+ [a] System.Net.Sockets.dll
ref: ./netstandard/packages/System.Net.Sockets/ref/netstandard1.3/System.Net.Sockets.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Net.Sockets.dll

f [t] System.Net.Sockets.IOControlCode

f [t] System.Net.Sockets.IPPacketInformation
+ [m]	IPAddress get_Address()
+ [m]	Int32 get_Interface()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(IPPacketInformation,IPPacketInformation)
+ [m]	Boolean op_Inequality(IPPacketInformation,IPPacketInformation)

f [t] System.Net.Sockets.IPProtectionLevel

f [t] System.Net.Sockets.IPv6MulticastOption
+ [m]	Void .ctor(IPAddress)
+ [m]	Void .ctor(IPAddress,Int64)
+ [m]	IPAddress get_Group()
+ [m]	Void set_Group(IPAddress)
+ [m]	Int64 get_InterfaceIndex()
+ [m]	Void set_InterfaceIndex(Int64)

f [t] System.Net.Sockets.LingerOption
+ [m]	Void .ctor(Boolean,Int32)
+ [m]	Boolean get_Enabled()
+ [m]	Void set_Enabled(Boolean)
+ [m]	Int32 get_LingerTime()
+ [m]	Void set_LingerTime(Int32)

f [t] System.Net.Sockets.MulticastOption
+ [m]	Void .ctor(IPAddress)
+ [m]	Void .ctor(IPAddress,Int32)
+ [m]	Void .ctor(IPAddress,IPAddress)
+ [m]	IPAddress get_Group()
+ [m]	Void set_Group(IPAddress)
+ [m]	Int32 get_InterfaceIndex()
+ [m]	Void set_InterfaceIndex(Int32)
+ [m]	IPAddress get_LocalAddress()
+ [m]	Void set_LocalAddress(IPAddress)

f [t] System.Net.Sockets.NetworkStream
+ [m]	Void .ctor(Socket)
+ [m]	Void .ctor(Socket,Boolean)
+ [m]	Boolean get_CanRead()
+ [m]	Boolean get_CanSeek()
+ [m]	Boolean get_CanTimeout()
+ [m]	Boolean get_CanWrite()
+ [m]	Boolean get_DataAvailable()
+ [m]	Int64 get_Length()
+ [m]	Int64 get_Position()
+ [m]	Void set_Position(Int64)
+ [m]	Int32 get_ReadTimeout()
+ [m]	Void set_ReadTimeout(Int32)
+ [m]	Int32 get_WriteTimeout()
+ [m]	Void set_WriteTimeout(Int32)
+ [m]	Void Dispose(Boolean)
+ [m]	Void Finalize()
+ [m]	Void Flush()
+ [m]	Task FlushAsync(CancellationToken)
+ [m]	Int32 Read(Byte[],Int32,Int32)
- [m]	Task`1 ReadAsync(Byte[],Int32,Int32,CancellationToken)
+ [m]	Int64 Seek(Int64,SeekOrigin)
+ [m]	Void SetLength(Int64)
+ [m]	Void Write(Byte[],Int32,Int32)
- [m]	Task WriteAsync(Byte[],Int32,Int32,CancellationToken)

f [t] System.Net.Sockets.ProtocolType

f [t] System.Net.Sockets.SelectMode

f [t] System.Net.Sockets.SendPacketsElement
+ [m]	Void .ctor(Byte[])
+ [m]	Void .ctor(Byte[],Int32,Int32)
+ [m]	Void .ctor(Byte[],Int32,Int32,Boolean)
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Int32,Int32)
+ [m]	Void .ctor(String,Int32,Int32,Boolean)
+ [m]	Byte[] get_Buffer()
+ [m]	Int32 get_Count()
+ [m]	Boolean get_EndOfPacket()
+ [m]	String get_FilePath()
+ [m]	Int32 get_Offset()

f [t] System.Net.Sockets.Socket
+ [m]	Void .ctor(AddressFamily,SocketType,ProtocolType)
+ [m]	Void .ctor(SocketType,ProtocolType)
+ [m]	AddressFamily get_AddressFamily()
+ [m]	Int32 get_Available()
+ [m]	Boolean get_Blocking()
+ [m]	Void set_Blocking(Boolean)
+ [m]	Boolean get_Connected()
+ [m]	Boolean get_DontFragment()
+ [m]	Void set_DontFragment(Boolean)
+ [m]	Boolean get_DualMode()
+ [m]	Void set_DualMode(Boolean)
+ [m]	Boolean get_EnableBroadcast()
+ [m]	Void set_EnableBroadcast(Boolean)
+ [m]	Boolean get_ExclusiveAddressUse()
+ [m]	Void set_ExclusiveAddressUse(Boolean)
+ [m]	Boolean get_IsBound()
+ [m]	LingerOption get_LingerState()
+ [m]	Void set_LingerState(LingerOption)
+ [m]	EndPoint get_LocalEndPoint()
+ [m]	Boolean get_MulticastLoopback()
+ [m]	Void set_MulticastLoopback(Boolean)
+ [m]	Boolean get_NoDelay()
+ [m]	Void set_NoDelay(Boolean)
+ [m]	Boolean get_OSSupportsIPv4()
+ [m]	Boolean get_OSSupportsIPv6()
+ [m]	ProtocolType get_ProtocolType()
+ [m]	Int32 get_ReceiveBufferSize()
+ [m]	Void set_ReceiveBufferSize(Int32)
+ [m]	Int32 get_ReceiveTimeout()
+ [m]	Void set_ReceiveTimeout(Int32)
+ [m]	EndPoint get_RemoteEndPoint()
+ [m]	Int32 get_SendBufferSize()
+ [m]	Void set_SendBufferSize(Int32)
+ [m]	Int32 get_SendTimeout()
+ [m]	Void set_SendTimeout(Int32)
+ [m]	SocketType get_SocketType()
+ [m]	Int16 get_Ttl()
+ [m]	Void set_Ttl(Int16)
+ [m]	Socket Accept()
+ [m]	Boolean AcceptAsync(SocketAsyncEventArgs)
+ [m]	Void Bind(EndPoint)
- [m]	Void CancelConnectAsync(SocketAsyncEventArgs)
+ [m]	Void Connect(EndPoint)
+ [m]	Void Connect(IPAddress,Int32)
+ [m]	Void Connect(IPAddress[],Int32)
+ [m]	Void Connect(String,Int32)
+ [m]	Boolean ConnectAsync(SocketAsyncEventArgs)
- [m]	Boolean ConnectAsync(SocketType,ProtocolType,SocketAsyncEventArgs)
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Void Finalize()
+ [m]	Object GetSocketOption(SocketOptionLevel,SocketOptionName)
+ [m]	Void GetSocketOption(SocketOptionLevel,SocketOptionName,Byte[])
+ [m]	Byte[] GetSocketOption(SocketOptionLevel,SocketOptionName,Int32)
+ [m]	Int32 IOControl(Int32,Byte[],Byte[])
+ [m]	Int32 IOControl(IOControlCode,Byte[],Byte[])
+ [m]	Void Listen(Int32)
+ [m]	Boolean Poll(Int32,SelectMode)
+ [m]	Int32 Receive(Byte[])
+ [m]	Int32 Receive(Byte[],Int32,Int32,SocketFlags)
+ [m]	Int32 Receive(Byte[],Int32,Int32,SocketFlags,SocketError&)
+ [m]	Int32 Receive(Byte[],Int32,SocketFlags)
+ [m]	Int32 Receive(Byte[],SocketFlags)
+ [m]	Int32 Receive(IList`1)
+ [m]	Int32 Receive(IList`1,SocketFlags)
+ [m]	Int32 Receive(IList`1,SocketFlags,SocketError&)
+ [m]	Boolean ReceiveAsync(SocketAsyncEventArgs)
+ [m]	Int32 ReceiveFrom(Byte[],Int32,Int32,SocketFlags,EndPoint&)
+ [m]	Int32 ReceiveFrom(Byte[],Int32,SocketFlags,EndPoint&)
+ [m]	Int32 ReceiveFrom(Byte[],EndPoint&)
+ [m]	Int32 ReceiveFrom(Byte[],SocketFlags,EndPoint&)
+ [m]	Boolean ReceiveFromAsync(SocketAsyncEventArgs)
+ [m]	Int32 ReceiveMessageFrom(Byte[],Int32,Int32,SocketFlags&,EndPoint&,IPPacketInformation&)
+ [m]	Boolean ReceiveMessageFromAsync(SocketAsyncEventArgs)
+ [m]	Void Select(IList,IList,IList,Int32)
+ [m]	Int32 Send(Byte[])
+ [m]	Int32 Send(Byte[],Int32,Int32,SocketFlags)
+ [m]	Int32 Send(Byte[],Int32,Int32,SocketFlags,SocketError&)
+ [m]	Int32 Send(Byte[],Int32,SocketFlags)
+ [m]	Int32 Send(Byte[],SocketFlags)
+ [m]	Int32 Send(IList`1)
+ [m]	Int32 Send(IList`1,SocketFlags)
+ [m]	Int32 Send(IList`1,SocketFlags,SocketError&)
+ [m]	Boolean SendAsync(SocketAsyncEventArgs)
+ [m]	Boolean SendPacketsAsync(SocketAsyncEventArgs)
+ [m]	Int32 SendTo(Byte[],Int32,Int32,SocketFlags,EndPoint)
+ [m]	Int32 SendTo(Byte[],Int32,SocketFlags,EndPoint)
+ [m]	Int32 SendTo(Byte[],EndPoint)
+ [m]	Int32 SendTo(Byte[],SocketFlags,EndPoint)
+ [m]	Boolean SendToAsync(SocketAsyncEventArgs)
+ [m]	Void SetSocketOption(SocketOptionLevel,SocketOptionName,Boolean)
+ [m]	Void SetSocketOption(SocketOptionLevel,SocketOptionName,Byte[])
+ [m]	Void SetSocketOption(SocketOptionLevel,SocketOptionName,Int32)
+ [m]	Void SetSocketOption(SocketOptionLevel,SocketOptionName,Object)
+ [m]	Void Shutdown(SocketShutdown)

f [t] System.Net.Sockets.SocketAsyncEventArgs
+ [m]	Void .ctor()
+ [m]	Socket get_AcceptSocket()
+ [m]	Void set_AcceptSocket(Socket)
+ [m]	Byte[] get_Buffer()
+ [m]	IList`1 get_BufferList()
+ [m]	Void set_BufferList(IList`1)
+ [m]	Int32 get_BytesTransferred()
+ [m]	Exception get_ConnectByNameError()
+ [m]	Socket get_ConnectSocket()
+ [m]	Int32 get_Count()
+ [m]	SocketAsyncOperation get_LastOperation()
+ [m]	Int32 get_Offset()
- [m]	IPPacketInformation get_ReceiveMessageFromPacketInfo()
+ [m]	EndPoint get_RemoteEndPoint()
+ [m]	Void set_RemoteEndPoint(EndPoint)
- [m]	SendPacketsElement[] get_SendPacketsElements()
- [m]	Void set_SendPacketsElements(SendPacketsElement[])
+ [m]	Int32 get_SendPacketsSendSize()
+ [m]	Void set_SendPacketsSendSize(Int32)
+ [m]	SocketError get_SocketError()
+ [m]	Void set_SocketError(SocketError)
+ [m]	SocketFlags get_SocketFlags()
+ [m]	Void set_SocketFlags(SocketFlags)
+ [m]	Object get_UserToken()
+ [m]	Void set_UserToken(Object)
+ [m]	Void add_Completed(EventHandler`1)
+ [m]	Void remove_Completed(EventHandler`1)
+ [m]	Void Dispose()
+ [m]	Void Finalize()
+ [m]	Void OnCompleted(SocketAsyncEventArgs)
+ [m]	Void SetBuffer(Byte[],Int32,Int32)
+ [m]	Void SetBuffer(Int32,Int32)

f [t] System.Net.Sockets.SocketAsyncOperation

f [t] System.Net.Sockets.SocketFlags

f [t] System.Net.Sockets.SocketOptionLevel

f [t] System.Net.Sockets.SocketOptionName

+ [t] System.Net.Sockets.SocketReceiveFromResult

+ [t] System.Net.Sockets.SocketReceiveMessageFromResult

f [t] System.Net.Sockets.SocketShutdown

+ [t] System.Net.Sockets.SocketTaskExtensions
+ [m]	Task`1 AcceptAsync(Socket)
+ [m]	Task`1 AcceptAsync(Socket,Socket)
+ [m]	Task ConnectAsync(Socket,EndPoint)
+ [m]	Task ConnectAsync(Socket,IPAddress,Int32)
+ [m]	Task ConnectAsync(Socket,IPAddress[],Int32)
+ [m]	Task ConnectAsync(Socket,String,Int32)
+ [m]	Task`1 ReceiveAsync(Socket,ArraySegment`1,SocketFlags)
+ [m]	Task`1 ReceiveAsync(Socket,IList`1,SocketFlags)
+ [m]	Task`1 ReceiveFromAsync(Socket,ArraySegment`1,SocketFlags,EndPoint)
+ [m]	Task`1 ReceiveMessageFromAsync(Socket,ArraySegment`1,SocketFlags,EndPoint)
+ [m]	Task`1 SendAsync(Socket,ArraySegment`1,SocketFlags)
+ [m]	Task`1 SendAsync(Socket,IList`1,SocketFlags)
+ [m]	Task`1 SendToAsync(Socket,ArraySegment`1,SocketFlags,EndPoint)

f [t] System.Net.Sockets.SocketType

f [t] System.Net.Sockets.TcpClient
+ [m]	Void .ctor()
+ [m]	Void .ctor(AddressFamily)
+ [m]	Boolean get_Active()
+ [m]	Void set_Active(Boolean)
+ [m]	Int32 get_Available()
+ [m]	Socket get_Client()
+ [m]	Void set_Client(Socket)
+ [m]	Boolean get_Connected()
+ [m]	Boolean get_ExclusiveAddressUse()
+ [m]	Void set_ExclusiveAddressUse(Boolean)
+ [m]	LingerOption get_LingerState()
+ [m]	Void set_LingerState(LingerOption)
+ [m]	Boolean get_NoDelay()
+ [m]	Void set_NoDelay(Boolean)
+ [m]	Int32 get_ReceiveBufferSize()
+ [m]	Void set_ReceiveBufferSize(Int32)
+ [m]	Int32 get_ReceiveTimeout()
+ [m]	Void set_ReceiveTimeout(Int32)
+ [m]	Int32 get_SendBufferSize()
+ [m]	Void set_SendBufferSize(Int32)
+ [m]	Int32 get_SendTimeout()
+ [m]	Void set_SendTimeout(Int32)
+ [m]	Task ConnectAsync(IPAddress,Int32)
+ [m]	Task ConnectAsync(IPAddress[],Int32)
+ [m]	Task ConnectAsync(String,Int32)
- [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Void Finalize()
+ [m]	NetworkStream GetStream()

f [t] System.Net.Sockets.TcpListener
+ [m]	Void .ctor(IPAddress,Int32)
+ [m]	Void .ctor(IPEndPoint)
+ [m]	Boolean get_Active()
+ [m]	Boolean get_ExclusiveAddressUse()
+ [m]	Void set_ExclusiveAddressUse(Boolean)
+ [m]	EndPoint get_LocalEndpoint()
+ [m]	Socket get_Server()
+ [m]	Task`1 AcceptSocketAsync()
+ [m]	Task`1 AcceptTcpClientAsync()
+ [m]	Boolean Pending()
+ [m]	Void Start()
+ [m]	Void Start(Int32)
+ [m]	Void Stop()

f [t] System.Net.Sockets.UdpClient
+ [m]	Void .ctor()
+ [m]	Void .ctor(Int32)
+ [m]	Void .ctor(Int32,AddressFamily)
+ [m]	Void .ctor(IPEndPoint)
+ [m]	Void .ctor(AddressFamily)
+ [m]	Boolean get_Active()
+ [m]	Void set_Active(Boolean)
+ [m]	Int32 get_Available()
+ [m]	Socket get_Client()
+ [m]	Void set_Client(Socket)
+ [m]	Boolean get_DontFragment()
+ [m]	Void set_DontFragment(Boolean)
+ [m]	Boolean get_EnableBroadcast()
+ [m]	Void set_EnableBroadcast(Boolean)
+ [m]	Boolean get_ExclusiveAddressUse()
+ [m]	Void set_ExclusiveAddressUse(Boolean)
+ [m]	Boolean get_MulticastLoopback()
+ [m]	Void set_MulticastLoopback(Boolean)
+ [m]	Int16 get_Ttl()
+ [m]	Void set_Ttl(Int16)
- [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Void DropMulticastGroup(IPAddress)
+ [m]	Void DropMulticastGroup(IPAddress,Int32)
+ [m]	Void JoinMulticastGroup(Int32,IPAddress)
+ [m]	Void JoinMulticastGroup(IPAddress)
+ [m]	Void JoinMulticastGroup(IPAddress,Int32)
+ [m]	Void JoinMulticastGroup(IPAddress,IPAddress)
+ [m]	Task`1 ReceiveAsync()
+ [m]	Task`1 SendAsync(Byte[],Int32,IPEndPoint)
+ [m]	Task`1 SendAsync(Byte[],Int32,String,Int32)

f [t] System.Net.Sockets.UdpReceiveResult
+ [m]	Void .ctor(Byte[],IPEndPoint)
+ [m]	Byte[] get_Buffer()
+ [m]	IPEndPoint get_RemoteEndPoint()
+ [m]	Boolean Equals(UdpReceiveResult)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(UdpReceiveResult,UdpReceiveResult)
+ [m]	Boolean op_Inequality(UdpReceiveResult,UdpReceiveResult)

---------------------------------------
+ [a] System.Net.WebHeaderCollection.dll
ref: ./netstandard/packages/System.Net.WebHeaderCollection/ref/netstandard1.3/System.Net.WebHeaderCollection.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Net.WebHeaderCollection.dll

f [t] System.Net.HttpRequestHeader

f [t] System.Net.HttpResponseHeader

f [t] System.Net.WebHeaderCollection
+ [m]	Void .ctor()
+ [m]	String[] get_AllKeys()
+ [m]	Int32 get_Count()
+ [m]	String get_Item(HttpRequestHeader)
+ [m]	Void set_Item(HttpRequestHeader,String)
+ [m]	String get_Item(HttpResponseHeader)
+ [m]	Void set_Item(HttpResponseHeader,String)
+ [m]	String ToString()
- [m]	String get_Item(String)
- [m]	Void set_Item(String,String)
- [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	Void Remove(String)

---------------------------------------
+ [a] System.Net.WebSockets.dll
ref: ./netstandard/packages/System.Net.WebSockets/ref/netstandard1.3/System.Net.WebSockets.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Net.WebSockets.dll

f [t] System.Net.WebSockets.WebSocket
+ [m]	Void .ctor()
+ [m]	Nullable`1 get_CloseStatus()
+ [m]	String get_CloseStatusDescription()
+ [m]	WebSocketState get_State()
+ [m]	String get_SubProtocol()
+ [m]	Void Abort()
+ [m]	Task CloseAsync(WebSocketCloseStatus,String,CancellationToken)
+ [m]	Task CloseOutputAsync(WebSocketCloseStatus,String,CancellationToken)
+ [m]	Void Dispose()
+ [m]	Task`1 ReceiveAsync(ArraySegment`1,CancellationToken)
+ [m]	Task SendAsync(ArraySegment`1,WebSocketMessageType,Boolean,CancellationToken)

f [t] System.Net.WebSockets.WebSocketCloseStatus

f [t] System.Net.WebSockets.WebSocketError

f [t] System.Net.WebSockets.WebSocketException
+ [m]	Void .ctor(Int32)
+ [m]	Void .ctor(Int32,Exception)
+ [m]	Void .ctor(Int32,String)
+ [m]	Void .ctor(WebSocketError)
+ [m]	Void .ctor(WebSocketError,Exception)
+ [m]	Void .ctor(WebSocketError,Int32)
+ [m]	Void .ctor(WebSocketError,Int32,Exception)
+ [m]	Void .ctor(WebSocketError,Int32,String)
+ [m]	Void .ctor(WebSocketError,Int32,String,Exception)
+ [m]	Void .ctor(WebSocketError,String)
+ [m]	Void .ctor(WebSocketError,String,Exception)
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	WebSocketError get_WebSocketErrorCode()
- [m]	Int32 get_ErrorCode()

f [t] System.Net.WebSockets.WebSocketMessageType

f [t] System.Net.WebSockets.WebSocketReceiveResult
+ [m]	Void .ctor(Int32,WebSocketMessageType,Boolean)
+ [m]	Void .ctor(Int32,WebSocketMessageType,Boolean,Nullable`1,String)
+ [m]	Nullable`1 get_CloseStatus()
+ [m]	String get_CloseStatusDescription()
+ [m]	Int32 get_Count()
+ [m]	Boolean get_EndOfMessage()
+ [m]	WebSocketMessageType get_MessageType()

f [t] System.Net.WebSockets.WebSocketState

---------------------------------------
+ [a] System.Net.WebSockets.Client.dll
ref: ./netstandard/packages/System.Net.WebSockets.Client/ref/netstandard1.3/System.Net.WebSockets.Client.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Net.WebSockets.Client.dll

f [t] System.Net.WebSockets.ClientWebSocket
+ [m]	Void .ctor()
+ [m]	Nullable`1 get_CloseStatus()
+ [m]	String get_CloseStatusDescription()
+ [m]	ClientWebSocketOptions get_Options()
+ [m]	WebSocketState get_State()
+ [m]	String get_SubProtocol()
! [m]	Void Abort()
+ [m]	Task CloseAsync(WebSocketCloseStatus,String,CancellationToken)
+ [m]	Task CloseOutputAsync(WebSocketCloseStatus,String,CancellationToken)
+ [m]	Task ConnectAsync(Uri,CancellationToken)
+ [m]	Void Dispose()
+ [m]	Task`1 ReceiveAsync(ArraySegment`1,CancellationToken)
+ [m]	Task SendAsync(ArraySegment`1,WebSocketMessageType,Boolean,CancellationToken)

f [t] System.Net.WebSockets.ClientWebSocketOptions
+ [m]	Void .ctor()
+ [m]	X509CertificateCollection get_ClientCertificates()
+ [m]	Void set_ClientCertificates(X509CertificateCollection)
+ [m]	CookieContainer get_Cookies()
+ [m]	Void set_Cookies(CookieContainer)
+ [m]	ICredentials get_Credentials()
+ [m]	Void set_Credentials(ICredentials)
+ [m]	TimeSpan get_KeepAliveInterval()
+ [m]	Void set_KeepAliveInterval(TimeSpan)
+ [m]	IWebProxy get_Proxy()
+ [m]	Void set_Proxy(IWebProxy)
+ [m]	Void AddSubProtocol(String)
+ [m]	Void SetRequestHeader(String,String)

---------------------------------------
+ [a] System.Numerics.Vectors.dll
ref: ./netstandard/packages/System.Numerics.Vectors/ref/netstandard1.0/System.Numerics.Vectors.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/mono/2.1/System.Numerics.Vectors.dll

f [t] System.Numerics.Matrix3x2
+ [m]	Void .ctor(Single,Single,Single,Single,Single,Single)
+ [m]	Matrix3x2 get_Identity()
+ [m]	Boolean get_IsIdentity()
+ [m]	Vector2 get_Translation()
+ [m]	Void set_Translation(Vector2)
+ [m]	Matrix3x2 Add(Matrix3x2,Matrix3x2)
+ [m]	Matrix3x2 CreateRotation(Single)
+ [m]	Matrix3x2 CreateRotation(Single,Vector2)
+ [m]	Matrix3x2 CreateScale(Vector2)
+ [m]	Matrix3x2 CreateScale(Vector2,Vector2)
+ [m]	Matrix3x2 CreateScale(Single)
+ [m]	Matrix3x2 CreateScale(Single,Vector2)
+ [m]	Matrix3x2 CreateScale(Single,Single)
+ [m]	Matrix3x2 CreateScale(Single,Single,Vector2)
+ [m]	Matrix3x2 CreateSkew(Single,Single)
+ [m]	Matrix3x2 CreateSkew(Single,Single,Vector2)
+ [m]	Matrix3x2 CreateTranslation(Vector2)
+ [m]	Matrix3x2 CreateTranslation(Single,Single)
+ [m]	Boolean Equals(Matrix3x2)
+ [m]	Boolean Equals(Object)
+ [m]	Single GetDeterminant()
+ [m]	Int32 GetHashCode()
+ [m]	Boolean Invert(Matrix3x2,Matrix3x2&)
+ [m]	Matrix3x2 Lerp(Matrix3x2,Matrix3x2,Single)
+ [m]	Matrix3x2 Multiply(Matrix3x2,Matrix3x2)
+ [m]	Matrix3x2 Multiply(Matrix3x2,Single)
+ [m]	Matrix3x2 Negate(Matrix3x2)
+ [m]	Matrix3x2 op_Addition(Matrix3x2,Matrix3x2)
+ [m]	Boolean op_Equality(Matrix3x2,Matrix3x2)
+ [m]	Boolean op_Inequality(Matrix3x2,Matrix3x2)
+ [m]	Matrix3x2 op_Multiply(Matrix3x2,Matrix3x2)
+ [m]	Matrix3x2 op_Multiply(Matrix3x2,Single)
+ [m]	Matrix3x2 op_Subtraction(Matrix3x2,Matrix3x2)
+ [m]	Matrix3x2 op_UnaryNegation(Matrix3x2)
+ [m]	Matrix3x2 Subtract(Matrix3x2,Matrix3x2)
+ [m]	String ToString()

f [t] System.Numerics.Matrix4x4
+ [m]	Void .ctor(Matrix3x2)
+ [m]	Void .ctor(Single,Single,Single,Single,Single,Single,Single,Single,Single,Single,Single,Single,Single,Single,Single,Single)
+ [m]	Matrix4x4 get_Identity()
+ [m]	Boolean get_IsIdentity()
+ [m]	Vector3 get_Translation()
+ [m]	Void set_Translation(Vector3)
+ [m]	Matrix4x4 Add(Matrix4x4,Matrix4x4)
+ [m]	Matrix4x4 CreateBillboard(Vector3,Vector3,Vector3,Vector3)
+ [m]	Matrix4x4 CreateConstrainedBillboard(Vector3,Vector3,Vector3,Vector3,Vector3)
+ [m]	Matrix4x4 CreateFromAxisAngle(Vector3,Single)
+ [m]	Matrix4x4 CreateFromQuaternion(Quaternion)
+ [m]	Matrix4x4 CreateFromYawPitchRoll(Single,Single,Single)
+ [m]	Matrix4x4 CreateLookAt(Vector3,Vector3,Vector3)
+ [m]	Matrix4x4 CreateOrthographic(Single,Single,Single,Single)
+ [m]	Matrix4x4 CreateOrthographicOffCenter(Single,Single,Single,Single,Single,Single)
+ [m]	Matrix4x4 CreatePerspective(Single,Single,Single,Single)
+ [m]	Matrix4x4 CreatePerspectiveFieldOfView(Single,Single,Single,Single)
+ [m]	Matrix4x4 CreatePerspectiveOffCenter(Single,Single,Single,Single,Single,Single)
+ [m]	Matrix4x4 CreateReflection(Plane)
+ [m]	Matrix4x4 CreateRotationX(Single)
+ [m]	Matrix4x4 CreateRotationX(Single,Vector3)
+ [m]	Matrix4x4 CreateRotationY(Single)
+ [m]	Matrix4x4 CreateRotationY(Single,Vector3)
+ [m]	Matrix4x4 CreateRotationZ(Single)
+ [m]	Matrix4x4 CreateRotationZ(Single,Vector3)
+ [m]	Matrix4x4 CreateScale(Vector3)
+ [m]	Matrix4x4 CreateScale(Vector3,Vector3)
+ [m]	Matrix4x4 CreateScale(Single)
+ [m]	Matrix4x4 CreateScale(Single,Vector3)
+ [m]	Matrix4x4 CreateScale(Single,Single,Single)
+ [m]	Matrix4x4 CreateScale(Single,Single,Single,Vector3)
+ [m]	Matrix4x4 CreateShadow(Vector3,Plane)
+ [m]	Matrix4x4 CreateTranslation(Vector3)
+ [m]	Matrix4x4 CreateTranslation(Single,Single,Single)
+ [m]	Matrix4x4 CreateWorld(Vector3,Vector3,Vector3)
+ [m]	Boolean Decompose(Matrix4x4,Vector3&,Quaternion&,Vector3&)
+ [m]	Boolean Equals(Matrix4x4)
+ [m]	Boolean Equals(Object)
+ [m]	Single GetDeterminant()
+ [m]	Int32 GetHashCode()
+ [m]	Boolean Invert(Matrix4x4,Matrix4x4&)
+ [m]	Matrix4x4 Lerp(Matrix4x4,Matrix4x4,Single)
+ [m]	Matrix4x4 Multiply(Matrix4x4,Matrix4x4)
+ [m]	Matrix4x4 Multiply(Matrix4x4,Single)
+ [m]	Matrix4x4 Negate(Matrix4x4)
+ [m]	Matrix4x4 op_Addition(Matrix4x4,Matrix4x4)
+ [m]	Boolean op_Equality(Matrix4x4,Matrix4x4)
+ [m]	Boolean op_Inequality(Matrix4x4,Matrix4x4)
+ [m]	Matrix4x4 op_Multiply(Matrix4x4,Matrix4x4)
+ [m]	Matrix4x4 op_Multiply(Matrix4x4,Single)
+ [m]	Matrix4x4 op_Subtraction(Matrix4x4,Matrix4x4)
+ [m]	Matrix4x4 op_UnaryNegation(Matrix4x4)
+ [m]	Matrix4x4 Subtract(Matrix4x4,Matrix4x4)
+ [m]	String ToString()
+ [m]	Matrix4x4 Transform(Matrix4x4,Quaternion)
+ [m]	Matrix4x4 Transpose(Matrix4x4)

f [t] System.Numerics.Plane
+ [m]	Void .ctor(Vector3,Single)
+ [m]	Void .ctor(Vector4)
+ [m]	Void .ctor(Single,Single,Single,Single)
+ [m]	Plane CreateFromVertices(Vector3,Vector3,Vector3)
+ [m]	Single Dot(Plane,Vector4)
+ [m]	Single DotCoordinate(Plane,Vector3)
+ [m]	Single DotNormal(Plane,Vector3)
+ [m]	Boolean Equals(Plane)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Plane Normalize(Plane)
+ [m]	Boolean op_Equality(Plane,Plane)
+ [m]	Boolean op_Inequality(Plane,Plane)
+ [m]	String ToString()
+ [m]	Plane Transform(Plane,Matrix4x4)
+ [m]	Plane Transform(Plane,Quaternion)

f [t] System.Numerics.Quaternion
+ [m]	Void .ctor(Vector3,Single)
+ [m]	Void .ctor(Single,Single,Single,Single)
+ [m]	Quaternion get_Identity()
+ [m]	Boolean get_IsIdentity()
+ [m]	Quaternion Add(Quaternion,Quaternion)
+ [m]	Quaternion Concatenate(Quaternion,Quaternion)
+ [m]	Quaternion Conjugate(Quaternion)
+ [m]	Quaternion CreateFromAxisAngle(Vector3,Single)
+ [m]	Quaternion CreateFromRotationMatrix(Matrix4x4)
+ [m]	Quaternion CreateFromYawPitchRoll(Single,Single,Single)
+ [m]	Quaternion Divide(Quaternion,Quaternion)
+ [m]	Single Dot(Quaternion,Quaternion)
+ [m]	Boolean Equals(Quaternion)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Quaternion Inverse(Quaternion)
+ [m]	Single Length()
+ [m]	Single LengthSquared()
+ [m]	Quaternion Lerp(Quaternion,Quaternion,Single)
+ [m]	Quaternion Multiply(Quaternion,Quaternion)
+ [m]	Quaternion Multiply(Quaternion,Single)
+ [m]	Quaternion Negate(Quaternion)
+ [m]	Quaternion Normalize(Quaternion)
+ [m]	Quaternion op_Addition(Quaternion,Quaternion)
+ [m]	Quaternion op_Division(Quaternion,Quaternion)
+ [m]	Boolean op_Equality(Quaternion,Quaternion)
+ [m]	Boolean op_Inequality(Quaternion,Quaternion)
+ [m]	Quaternion op_Multiply(Quaternion,Quaternion)
+ [m]	Quaternion op_Multiply(Quaternion,Single)
+ [m]	Quaternion op_Subtraction(Quaternion,Quaternion)
+ [m]	Quaternion op_UnaryNegation(Quaternion)
+ [m]	Quaternion Slerp(Quaternion,Quaternion,Single)
+ [m]	Quaternion Subtract(Quaternion,Quaternion)
+ [m]	String ToString()

+ [t] System.Numerics.Vector
+ [m]	Boolean get_IsHardwareAccelerated()
+ [m]	Vector`1 Abs(Vector`1)
+ [m]	Vector`1 Add(Vector`1,Vector`1)
+ [m]	Vector`1 AndNot(Vector`1,Vector`1)
+ [m]	Vector`1 AsVectorByte(Vector`1)
+ [m]	Vector`1 AsVectorDouble(Vector`1)
+ [m]	Vector`1 AsVectorInt16(Vector`1)
+ [m]	Vector`1 AsVectorInt32(Vector`1)
+ [m]	Vector`1 AsVectorInt64(Vector`1)
+ [m]	Vector`1 AsVectorSByte(Vector`1)
+ [m]	Vector`1 AsVectorSingle(Vector`1)
+ [m]	Vector`1 AsVectorUInt16(Vector`1)
+ [m]	Vector`1 AsVectorUInt32(Vector`1)
+ [m]	Vector`1 AsVectorUInt64(Vector`1)
+ [m]	Vector`1 BitwiseAnd(Vector`1,Vector`1)
+ [m]	Vector`1 BitwiseOr(Vector`1,Vector`1)
+ [m]	Vector`1 ConditionalSelect(Vector`1,Vector`1,Vector`1)
+ [m]	Vector`1 ConditionalSelect(Vector`1,Vector`1,Vector`1)
+ [m]	Vector`1 ConditionalSelect(Vector`1,Vector`1,Vector`1)
+ [m]	Vector`1 Divide(Vector`1,Vector`1)
+ [m]	T Dot(Vector`1,Vector`1)
+ [m]	Vector`1 Equals(Vector`1,Vector`1)
+ [m]	Vector`1 Equals(Vector`1,Vector`1)
+ [m]	Vector`1 Equals(Vector`1,Vector`1)
+ [m]	Vector`1 Equals(Vector`1,Vector`1)
+ [m]	Vector`1 Equals(Vector`1,Vector`1)
+ [m]	Boolean EqualsAll(Vector`1,Vector`1)
+ [m]	Boolean EqualsAny(Vector`1,Vector`1)
+ [m]	Vector`1 GreaterThan(Vector`1,Vector`1)
+ [m]	Vector`1 GreaterThan(Vector`1,Vector`1)
+ [m]	Vector`1 GreaterThan(Vector`1,Vector`1)
+ [m]	Vector`1 GreaterThan(Vector`1,Vector`1)
+ [m]	Vector`1 GreaterThan(Vector`1,Vector`1)
+ [m]	Boolean GreaterThanAll(Vector`1,Vector`1)
+ [m]	Boolean GreaterThanAny(Vector`1,Vector`1)
+ [m]	Vector`1 GreaterThanOrEqual(Vector`1,Vector`1)
+ [m]	Vector`1 GreaterThanOrEqual(Vector`1,Vector`1)
+ [m]	Vector`1 GreaterThanOrEqual(Vector`1,Vector`1)
+ [m]	Vector`1 GreaterThanOrEqual(Vector`1,Vector`1)
+ [m]	Vector`1 GreaterThanOrEqual(Vector`1,Vector`1)
+ [m]	Boolean GreaterThanOrEqualAll(Vector`1,Vector`1)
+ [m]	Boolean GreaterThanOrEqualAny(Vector`1,Vector`1)
+ [m]	Vector`1 LessThan(Vector`1,Vector`1)
+ [m]	Vector`1 LessThan(Vector`1,Vector`1)
+ [m]	Vector`1 LessThan(Vector`1,Vector`1)
+ [m]	Vector`1 LessThan(Vector`1,Vector`1)
+ [m]	Vector`1 LessThan(Vector`1,Vector`1)
+ [m]	Boolean LessThanAll(Vector`1,Vector`1)
+ [m]	Boolean LessThanAny(Vector`1,Vector`1)
+ [m]	Vector`1 LessThanOrEqual(Vector`1,Vector`1)
+ [m]	Vector`1 LessThanOrEqual(Vector`1,Vector`1)
+ [m]	Vector`1 LessThanOrEqual(Vector`1,Vector`1)
+ [m]	Vector`1 LessThanOrEqual(Vector`1,Vector`1)
+ [m]	Vector`1 LessThanOrEqual(Vector`1,Vector`1)
+ [m]	Boolean LessThanOrEqualAll(Vector`1,Vector`1)
+ [m]	Boolean LessThanOrEqualAny(Vector`1,Vector`1)
+ [m]	Vector`1 Max(Vector`1,Vector`1)
+ [m]	Vector`1 Min(Vector`1,Vector`1)
+ [m]	Vector`1 Multiply(T,Vector`1)
+ [m]	Vector`1 Multiply(Vector`1,T)
+ [m]	Vector`1 Multiply(Vector`1,Vector`1)
+ [m]	Vector`1 Negate(Vector`1)
+ [m]	Vector`1 OnesComplement(Vector`1)
+ [m]	Vector`1 SquareRoot(Vector`1)
+ [m]	Vector`1 Subtract(Vector`1,Vector`1)
+ [m]	Vector`1 Xor(Vector`1,Vector`1)

+ [t] System.Numerics.Vector`1
+ [m]	Void .ctor(T)
+ [m]	Void .ctor(T[])
+ [m]	Void .ctor(T[],Int32)
+ [m]	Int32 get_Count()
+ [m]	T get_Item(Int32)
+ [m]	Vector`1 get_One()
+ [m]	Vector`1 get_Zero()
+ [m]	Void CopyTo(T[])
+ [m]	Void CopyTo(T[],Int32)
+ [m]	Boolean Equals(Vector`1)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Vector`1 op_Addition(Vector`1,Vector`1)
+ [m]	Vector`1 op_BitwiseAnd(Vector`1,Vector`1)
+ [m]	Vector`1 op_BitwiseOr(Vector`1,Vector`1)
+ [m]	Vector`1 op_Division(Vector`1,Vector`1)
+ [m]	Boolean op_Equality(Vector`1,Vector`1)
+ [m]	Vector`1 op_ExclusiveOr(Vector`1,Vector`1)
+ [m]	Vector`1 op_Explicit(Vector`1)
+ [m]	Vector`1 op_Explicit(Vector`1)
+ [m]	Vector`1 op_Explicit(Vector`1)
+ [m]	Vector`1 op_Explicit(Vector`1)
+ [m]	Vector`1 op_Explicit(Vector`1)
+ [m]	Vector`1 op_Explicit(Vector`1)
+ [m]	Vector`1 op_Explicit(Vector`1)
+ [m]	Vector`1 op_Explicit(Vector`1)
+ [m]	Vector`1 op_Explicit(Vector`1)
+ [m]	Vector`1 op_Explicit(Vector`1)
+ [m]	Boolean op_Inequality(Vector`1,Vector`1)
+ [m]	Vector`1 op_Multiply(T,Vector`1)
+ [m]	Vector`1 op_Multiply(Vector`1,T)
+ [m]	Vector`1 op_Multiply(Vector`1,Vector`1)
+ [m]	Vector`1 op_OnesComplement(Vector`1)
+ [m]	Vector`1 op_Subtraction(Vector`1,Vector`1)
+ [m]	Vector`1 op_UnaryNegation(Vector`1)
+ [m]	String ToString()
+ [m]	String ToString(String)
+ [m]	String ToString(String,IFormatProvider)

f [t] System.Numerics.Vector2
+ [m]	Void .ctor(Single)
+ [m]	Void .ctor(Single,Single)
+ [m]	Vector2 get_One()
+ [m]	Vector2 get_UnitX()
+ [m]	Vector2 get_UnitY()
+ [m]	Vector2 get_Zero()
+ [m]	Vector2 Abs(Vector2)
+ [m]	Vector2 Add(Vector2,Vector2)
+ [m]	Vector2 Clamp(Vector2,Vector2,Vector2)
+ [m]	Void CopyTo(Single[])
+ [m]	Void CopyTo(Single[],Int32)
+ [m]	Single Distance(Vector2,Vector2)
+ [m]	Single DistanceSquared(Vector2,Vector2)
+ [m]	Vector2 Divide(Vector2,Vector2)
+ [m]	Vector2 Divide(Vector2,Single)
+ [m]	Single Dot(Vector2,Vector2)
+ [m]	Boolean Equals(Vector2)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Single Length()
+ [m]	Single LengthSquared()
+ [m]	Vector2 Lerp(Vector2,Vector2,Single)
+ [m]	Vector2 Max(Vector2,Vector2)
+ [m]	Vector2 Min(Vector2,Vector2)
+ [m]	Vector2 Multiply(Vector2,Vector2)
+ [m]	Vector2 Multiply(Vector2,Single)
+ [m]	Vector2 Multiply(Single,Vector2)
+ [m]	Vector2 Negate(Vector2)
+ [m]	Vector2 Normalize(Vector2)
+ [m]	Vector2 op_Addition(Vector2,Vector2)
+ [m]	Vector2 op_Division(Vector2,Vector2)
+ [m]	Vector2 op_Division(Vector2,Single)
+ [m]	Boolean op_Equality(Vector2,Vector2)
+ [m]	Boolean op_Inequality(Vector2,Vector2)
+ [m]	Vector2 op_Multiply(Vector2,Vector2)
+ [m]	Vector2 op_Multiply(Vector2,Single)
+ [m]	Vector2 op_Multiply(Single,Vector2)
+ [m]	Vector2 op_Subtraction(Vector2,Vector2)
+ [m]	Vector2 op_UnaryNegation(Vector2)
+ [m]	Vector2 Reflect(Vector2,Vector2)
+ [m]	Vector2 SquareRoot(Vector2)
+ [m]	Vector2 Subtract(Vector2,Vector2)
+ [m]	String ToString()
+ [m]	String ToString(String)
+ [m]	String ToString(String,IFormatProvider)
+ [m]	Vector2 Transform(Vector2,Matrix3x2)
+ [m]	Vector2 Transform(Vector2,Matrix4x4)
+ [m]	Vector2 Transform(Vector2,Quaternion)
+ [m]	Vector2 TransformNormal(Vector2,Matrix3x2)
+ [m]	Vector2 TransformNormal(Vector2,Matrix4x4)

f [t] System.Numerics.Vector3
+ [m]	Void .ctor(Vector2,Single)
+ [m]	Void .ctor(Single)
+ [m]	Void .ctor(Single,Single,Single)
+ [m]	Vector3 get_One()
+ [m]	Vector3 get_UnitX()
+ [m]	Vector3 get_UnitY()
+ [m]	Vector3 get_UnitZ()
+ [m]	Vector3 get_Zero()
+ [m]	Vector3 Abs(Vector3)
+ [m]	Vector3 Add(Vector3,Vector3)
+ [m]	Vector3 Clamp(Vector3,Vector3,Vector3)
+ [m]	Void CopyTo(Single[])
+ [m]	Void CopyTo(Single[],Int32)
+ [m]	Vector3 Cross(Vector3,Vector3)
+ [m]	Single Distance(Vector3,Vector3)
+ [m]	Single DistanceSquared(Vector3,Vector3)
+ [m]	Vector3 Divide(Vector3,Vector3)
+ [m]	Vector3 Divide(Vector3,Single)
+ [m]	Single Dot(Vector3,Vector3)
+ [m]	Boolean Equals(Vector3)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Single Length()
+ [m]	Single LengthSquared()
+ [m]	Vector3 Lerp(Vector3,Vector3,Single)
+ [m]	Vector3 Max(Vector3,Vector3)
+ [m]	Vector3 Min(Vector3,Vector3)
+ [m]	Vector3 Multiply(Vector3,Vector3)
+ [m]	Vector3 Multiply(Vector3,Single)
+ [m]	Vector3 Multiply(Single,Vector3)
+ [m]	Vector3 Negate(Vector3)
+ [m]	Vector3 Normalize(Vector3)
+ [m]	Vector3 op_Addition(Vector3,Vector3)
+ [m]	Vector3 op_Division(Vector3,Vector3)
+ [m]	Vector3 op_Division(Vector3,Single)
+ [m]	Boolean op_Equality(Vector3,Vector3)
+ [m]	Boolean op_Inequality(Vector3,Vector3)
+ [m]	Vector3 op_Multiply(Vector3,Vector3)
+ [m]	Vector3 op_Multiply(Vector3,Single)
+ [m]	Vector3 op_Multiply(Single,Vector3)
+ [m]	Vector3 op_Subtraction(Vector3,Vector3)
+ [m]	Vector3 op_UnaryNegation(Vector3)
+ [m]	Vector3 Reflect(Vector3,Vector3)
+ [m]	Vector3 SquareRoot(Vector3)
+ [m]	Vector3 Subtract(Vector3,Vector3)
+ [m]	String ToString()
+ [m]	String ToString(String)
+ [m]	String ToString(String,IFormatProvider)
+ [m]	Vector3 Transform(Vector3,Matrix4x4)
+ [m]	Vector3 Transform(Vector3,Quaternion)
+ [m]	Vector3 TransformNormal(Vector3,Matrix4x4)

f [t] System.Numerics.Vector4
+ [m]	Void .ctor(Vector2,Single,Single)
+ [m]	Void .ctor(Vector3,Single)
+ [m]	Void .ctor(Single)
+ [m]	Void .ctor(Single,Single,Single,Single)
+ [m]	Vector4 get_One()
+ [m]	Vector4 get_UnitW()
+ [m]	Vector4 get_UnitX()
+ [m]	Vector4 get_UnitY()
+ [m]	Vector4 get_UnitZ()
+ [m]	Vector4 get_Zero()
+ [m]	Vector4 Abs(Vector4)
+ [m]	Vector4 Add(Vector4,Vector4)
+ [m]	Vector4 Clamp(Vector4,Vector4,Vector4)
+ [m]	Void CopyTo(Single[])
+ [m]	Void CopyTo(Single[],Int32)
+ [m]	Single Distance(Vector4,Vector4)
+ [m]	Single DistanceSquared(Vector4,Vector4)
+ [m]	Vector4 Divide(Vector4,Vector4)
+ [m]	Vector4 Divide(Vector4,Single)
+ [m]	Single Dot(Vector4,Vector4)
+ [m]	Boolean Equals(Vector4)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Single Length()
+ [m]	Single LengthSquared()
+ [m]	Vector4 Lerp(Vector4,Vector4,Single)
+ [m]	Vector4 Max(Vector4,Vector4)
+ [m]	Vector4 Min(Vector4,Vector4)
+ [m]	Vector4 Multiply(Vector4,Vector4)
+ [m]	Vector4 Multiply(Vector4,Single)
+ [m]	Vector4 Multiply(Single,Vector4)
+ [m]	Vector4 Negate(Vector4)
+ [m]	Vector4 Normalize(Vector4)
+ [m]	Vector4 op_Addition(Vector4,Vector4)
+ [m]	Vector4 op_Division(Vector4,Vector4)
+ [m]	Vector4 op_Division(Vector4,Single)
+ [m]	Boolean op_Equality(Vector4,Vector4)
+ [m]	Boolean op_Inequality(Vector4,Vector4)
+ [m]	Vector4 op_Multiply(Vector4,Vector4)
+ [m]	Vector4 op_Multiply(Vector4,Single)
+ [m]	Vector4 op_Multiply(Single,Vector4)
+ [m]	Vector4 op_Subtraction(Vector4,Vector4)
+ [m]	Vector4 op_UnaryNegation(Vector4)
+ [m]	Vector4 SquareRoot(Vector4)
+ [m]	Vector4 Subtract(Vector4,Vector4)
+ [m]	String ToString()
+ [m]	String ToString(String)
+ [m]	String ToString(String,IFormatProvider)
+ [m]	Vector4 Transform(Vector2,Matrix4x4)
+ [m]	Vector4 Transform(Vector2,Quaternion)
+ [m]	Vector4 Transform(Vector3,Matrix4x4)
+ [m]	Vector4 Transform(Vector3,Quaternion)
+ [m]	Vector4 Transform(Vector4,Matrix4x4)
+ [m]	Vector4 Transform(Vector4,Quaternion)

---------------------------------------
+ [a] System.ObjectModel.dll
ref: ./netstandard/packages/System.ObjectModel/ref/netstandard1.3/System.ObjectModel.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.ObjectModel.dll

f [t] System.Windows.Input.ICommand
+ [m]	Void add_CanExecuteChanged(EventHandler)
+ [m]	Void remove_CanExecuteChanged(EventHandler)
+ [m]	Boolean CanExecute(Object)
+ [m]	Void Execute(Object)

f [t] System.ComponentModel.DataErrorsChangedEventArgs
+ [m]	Void .ctor(String)
+ [m]	String get_PropertyName()

f [t] System.ComponentModel.INotifyDataErrorInfo
+ [m]	Boolean get_HasErrors()
+ [m]	Void add_ErrorsChanged(EventHandler`1)
+ [m]	Void remove_ErrorsChanged(EventHandler`1)
+ [m]	IEnumerable GetErrors(String)

f [t] System.ComponentModel.INotifyPropertyChanged
+ [m]	Void add_PropertyChanged(PropertyChangedEventHandler)
+ [m]	Void remove_PropertyChanged(PropertyChangedEventHandler)

f [t] System.ComponentModel.INotifyPropertyChanging
+ [m]	Void add_PropertyChanging(PropertyChangingEventHandler)
+ [m]	Void remove_PropertyChanging(PropertyChangingEventHandler)

f [t] System.ComponentModel.PropertyChangedEventArgs
+ [m]	Void .ctor(String)
+ [m]	String get_PropertyName()

f [t] System.ComponentModel.PropertyChangedEventHandler
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object,PropertyChangedEventArgs)
+ [m]	IAsyncResult BeginInvoke(Object,PropertyChangedEventArgs,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.ComponentModel.PropertyChangingEventArgs
+ [m]	Void .ctor(String)
+ [m]	String get_PropertyName()

f [t] System.ComponentModel.PropertyChangingEventHandler
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object,PropertyChangingEventArgs)
+ [m]	IAsyncResult BeginInvoke(Object,PropertyChangingEventArgs,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Collections.Specialized.INotifyCollectionChanged
+ [m]	Void add_CollectionChanged(NotifyCollectionChangedEventHandler)
+ [m]	Void remove_CollectionChanged(NotifyCollectionChangedEventHandler)

f [t] System.Collections.Specialized.NotifyCollectionChangedAction

f [t] System.Collections.Specialized.NotifyCollectionChangedEventArgs
+ [m]	Void .ctor(NotifyCollectionChangedAction)
+ [m]	Void .ctor(NotifyCollectionChangedAction,IList)
+ [m]	Void .ctor(NotifyCollectionChangedAction,IList,IList)
+ [m]	Void .ctor(NotifyCollectionChangedAction,IList,IList,Int32)
+ [m]	Void .ctor(NotifyCollectionChangedAction,IList,Int32)
+ [m]	Void .ctor(NotifyCollectionChangedAction,IList,Int32,Int32)
+ [m]	Void .ctor(NotifyCollectionChangedAction,Object)
+ [m]	Void .ctor(NotifyCollectionChangedAction,Object,Int32)
+ [m]	Void .ctor(NotifyCollectionChangedAction,Object,Int32,Int32)
+ [m]	Void .ctor(NotifyCollectionChangedAction,Object,Object)
+ [m]	Void .ctor(NotifyCollectionChangedAction,Object,Object,Int32)
+ [m]	NotifyCollectionChangedAction get_Action()
+ [m]	IList get_NewItems()
+ [m]	Int32 get_NewStartingIndex()
+ [m]	IList get_OldItems()
+ [m]	Int32 get_OldStartingIndex()

f [t] System.Collections.Specialized.NotifyCollectionChangedEventHandler
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object,NotifyCollectionChangedEventArgs)
+ [m]	IAsyncResult BeginInvoke(Object,NotifyCollectionChangedEventArgs,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Collections.ObjectModel.KeyedCollection`2
+ [m]	Void .ctor()
+ [m]	Void .ctor(IEqualityComparer`1)
+ [m]	Void .ctor(IEqualityComparer`1,Int32)
+ [m]	IEqualityComparer`1 get_Comparer()
+ [m]	IDictionary`2 get_Dictionary()
+ [m]	TItem get_Item(TKey)
+ [m]	Void ChangeItemKey(TItem,TKey)
+ [m]	Void ClearItems()
+ [m]	Boolean Contains(TKey)
+ [m]	TKey GetKeyForItem(TItem)
+ [m]	Void InsertItem(Int32,TItem)
+ [m]	Boolean Remove(TKey)
+ [m]	Void RemoveItem(Int32)
+ [m]	Void SetItem(Int32,TItem)

f [t] System.Collections.ObjectModel.ObservableCollection`1
+ [m]	Void .ctor()
+ [m]	Void .ctor(IEnumerable`1)
+ [m]	Void add_CollectionChanged(NotifyCollectionChangedEventHandler)
+ [m]	Void remove_CollectionChanged(NotifyCollectionChangedEventHandler)
+ [m]	Void add_PropertyChanged(PropertyChangedEventHandler)
+ [m]	Void remove_PropertyChanged(PropertyChangedEventHandler)
+ [m]	Void System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(PropertyChangedEventHandler)
+ [m]	Void System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(PropertyChangedEventHandler)
+ [m]	IDisposable BlockReentrancy()
+ [m]	Void CheckReentrancy()
+ [m]	Void ClearItems()
+ [m]	Void InsertItem(Int32,T)
+ [m]	Void Move(Int32,Int32)
+ [m]	Void MoveItem(Int32,Int32)
+ [m]	Void OnCollectionChanged(NotifyCollectionChangedEventArgs)
+ [m]	Void OnPropertyChanged(PropertyChangedEventArgs)
+ [m]	Void RemoveItem(Int32)
+ [m]	Void SetItem(Int32,T)

f [t] System.Collections.ObjectModel.ReadOnlyDictionary`2
+ [m]	Void .ctor(IDictionary`2)
+ [m]	Int32 get_Count()
+ [m]	IDictionary`2 get_Dictionary()
+ [m]	TValue get_Item(TKey)
+ [m]	KeyCollection get_Keys()
+ [m]	Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.get_IsReadOnly()
+ [m]	TValue System.Collections.Generic.IDictionary<TKey,TValue>.get_Item(TKey)
+ [m]	Void System.Collections.Generic.IDictionary<TKey,TValue>.set_Item(TKey,TValue)
+ [m]	ICollection`1 System.Collections.Generic.IDictionary<TKey,TValue>.get_Keys()
+ [m]	ICollection`1 System.Collections.Generic.IDictionary<TKey,TValue>.get_Values()
+ [m]	IEnumerable`1 System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Keys()
+ [m]	IEnumerable`1 System.Collections.Generic.IReadOnlyDictionary<TKey,TValue>.get_Values()
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Boolean System.Collections.IDictionary.get_IsFixedSize()
+ [m]	Boolean System.Collections.IDictionary.get_IsReadOnly()
+ [m]	Object System.Collections.IDictionary.get_Item(Object)
+ [m]	Void System.Collections.IDictionary.set_Item(Object,Object)
+ [m]	ICollection System.Collections.IDictionary.get_Keys()
+ [m]	ICollection System.Collections.IDictionary.get_Values()
+ [m]	ValueCollection get_Values()
+ [m]	Boolean ContainsKey(TKey)
+ [m]	IEnumerator`1 GetEnumerator()
+ [m]	Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair`2)
+ [m]	Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear()
+ [m]	Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Contains(KeyValuePair`2)
+ [m]	Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair`2[],Int32)
+ [m]	Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair`2)
+ [m]	Void System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey,TValue)
+ [m]	Boolean System.Collections.Generic.IDictionary<TKey,TValue>.Remove(TKey)
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
+ [m]	Void System.Collections.IDictionary.Add(Object,Object)
+ [m]	Void System.Collections.IDictionary.Clear()
+ [m]	Boolean System.Collections.IDictionary.Contains(Object)
+ [m]	IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
+ [m]	Void System.Collections.IDictionary.Remove(Object)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	Boolean TryGetValue(TKey,TValue&)

f [t] System.Collections.ObjectModel.ReadOnlyObservableCollection`1
+ [m]	Void .ctor(ObservableCollection`1)
+ [m]	Void add_CollectionChanged(NotifyCollectionChangedEventHandler)
+ [m]	Void remove_CollectionChanged(NotifyCollectionChangedEventHandler)
+ [m]	Void add_PropertyChanged(PropertyChangedEventHandler)
+ [m]	Void remove_PropertyChanged(PropertyChangedEventHandler)
+ [m]	Void System.Collections.Specialized.INotifyCollectionChanged.add_CollectionChanged(NotifyCollectionChangedEventHandler)
+ [m]	Void System.Collections.Specialized.INotifyCollectionChanged.remove_CollectionChanged(NotifyCollectionChangedEventHandler)
+ [m]	Void System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged(PropertyChangedEventHandler)
+ [m]	Void System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged(PropertyChangedEventHandler)
+ [m]	Void OnCollectionChanged(NotifyCollectionChangedEventArgs)
+ [m]	Void OnPropertyChanged(PropertyChangedEventArgs)

---------------------------------------
+ [a] System.Reflection.dll
ref: ./netstandard/packages/System.Reflection/ref/netstandard1.5/System.Reflection.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Reflection.dll

f [t] System.Reflection.AmbiguousMatchException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Reflection.Assembly
+ [m]	Void .ctor()
+ [m]	IEnumerable`1 get_CustomAttributes()
+ [m]	IEnumerable`1 get_DefinedTypes()
+ [m]	IEnumerable`1 get_ExportedTypes()
+ [m]	MethodInfo get_EntryPoint()
+ [m]	String get_FullName()
+ [m]	Boolean get_IsDynamic()
+ [m]	Module get_ManifestModule()
+ [m]	IEnumerable`1 get_Modules()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	ManifestResourceInfo GetManifestResourceInfo(String)
+ [m]	String[] GetManifestResourceNames()
+ [m]	Stream GetManifestResourceStream(String)
+ [m]	AssemblyName GetName()
+ [m]	Type GetType(String)
+ [m]	Type GetType(String,Boolean,Boolean)
+ [m]	Assembly Load(AssemblyName)
+ [m]	Assembly GetEntryAssembly()
+ [m]	String get_Location()
+ [m]	String ToString()
+ [m]	String get_CodeBase()
+ [m]	String get_ImageRuntimeVersion()
+ [m]	Object CreateInstance(String)
+ [m]	Object CreateInstance(String,Boolean)
+ [m]	String CreateQualifiedName(String,String)
- [m]	Object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Boolean)
- [m]	Object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Type,Boolean)
+ [m]	Type[] GetExportedTypes()
+ [m]	AssemblyName[] GetReferencedAssemblies()
+ [m]	Type GetType(String,Boolean)
+ [m]	Type[] GetTypes()
- [m]	Boolean System.Reflection.ICustomAttributeProvider.IsDefined(Type,Boolean)

f [t] System.Reflection.AssemblyContentType

f [t] System.Reflection.AssemblyName
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	AssemblyContentType get_ContentType()
+ [m]	Void set_ContentType(AssemblyContentType)
+ [m]	String get_CultureName()
! [m]	Void set_CultureName(String)
+ [m]	AssemblyNameFlags get_Flags()
+ [m]	Void set_Flags(AssemblyNameFlags)
+ [m]	String get_FullName()
+ [m]	String get_Name()
+ [m]	Void set_Name(String)
+ [m]	ProcessorArchitecture get_ProcessorArchitecture()
+ [m]	Void set_ProcessorArchitecture(ProcessorArchitecture)
+ [m]	Version get_Version()
+ [m]	Void set_Version(Version)
+ [m]	Byte[] GetPublicKey()
+ [m]	Byte[] GetPublicKeyToken()
+ [m]	Void SetPublicKey(Byte[])
+ [m]	Void SetPublicKeyToken(Byte[])
+ [m]	String ToString()

f [t] System.Reflection.BindingFlags

f [t] System.Reflection.ConstructorInfo
+ [m]	Void .ctor()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Object Invoke(Object[])
+ [m]	MemberTypes get_MemberType()

f [t] System.Reflection.CustomAttributeData
+ [m]	Void .ctor()
+ [m]	Type get_AttributeType()
+ [m]	IList`1 get_ConstructorArguments()
+ [m]	IList`1 get_NamedArguments()
+ [m]	ConstructorInfo get_Constructor()
+ [m]	IList`1 GetCustomAttributes(Assembly)
+ [m]	IList`1 GetCustomAttributes(MemberInfo)
+ [m]	IList`1 GetCustomAttributes(Module)
+ [m]	IList`1 GetCustomAttributes(ParameterInfo)

f [t] System.Reflection.CustomAttributeNamedArgument
+ [m]	Boolean get_IsField()
+ [m]	String get_MemberName()
+ [m]	CustomAttributeTypedArgument get_TypedValue()
+ [m]	Boolean op_Equality(CustomAttributeNamedArgument,CustomAttributeNamedArgument)
+ [m]	Boolean op_Inequality(CustomAttributeNamedArgument,CustomAttributeNamedArgument)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	String ToString()
- [m]	Void .ctor(Type,String,Boolean,CustomAttributeTypedArgument)

f [t] System.Reflection.CustomAttributeTypedArgument
+ [m]	Type get_ArgumentType()
+ [m]	Object get_Value()
+ [m]	Boolean op_Equality(CustomAttributeTypedArgument,CustomAttributeTypedArgument)
+ [m]	Boolean op_Inequality(CustomAttributeTypedArgument,CustomAttributeTypedArgument)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	String ToString()
+ [m]	Void .ctor(Type,Object)

f [t] System.Reflection.EventInfo
+ [m]	Void .ctor()
+ [m]	MethodInfo get_AddMethod()
+ [m]	EventAttributes get_Attributes()
+ [m]	Type get_EventHandlerType()
+ [m]	Boolean get_IsMulticast()
+ [m]	Boolean get_IsSpecialName()
+ [m]	MethodInfo get_RaiseMethod()
+ [m]	MethodInfo get_RemoveMethod()
+ [m]	Void AddEventHandler(Object,Delegate)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Void RemoveEventHandler(Object,Delegate)
+ [m]	MethodInfo GetAddMethod()
+ [m]	MethodInfo GetAddMethod(Boolean)
+ [m]	MethodInfo GetRaiseMethod()
+ [m]	MethodInfo GetRaiseMethod(Boolean)
+ [m]	MethodInfo GetRemoveMethod()
+ [m]	MethodInfo GetRemoveMethod(Boolean)
+ [m]	MemberTypes get_MemberType()

f [t] System.Reflection.FieldInfo
+ [m]	Void .ctor()
+ [m]	FieldAttributes get_Attributes()
+ [m]	Type get_FieldType()
+ [m]	Boolean get_IsAssembly()
+ [m]	Boolean get_IsFamily()
+ [m]	Boolean get_IsFamilyAndAssembly()
+ [m]	Boolean get_IsFamilyOrAssembly()
+ [m]	Boolean get_IsInitOnly()
+ [m]	Boolean get_IsLiteral()
+ [m]	Boolean get_IsPrivate()
+ [m]	Boolean get_IsPublic()
+ [m]	Boolean get_IsSpecialName()
+ [m]	Boolean get_IsStatic()
+ [m]	Boolean Equals(Object)
+ [m]	FieldInfo GetFieldFromHandle(RuntimeFieldHandle)
+ [m]	FieldInfo GetFieldFromHandle(RuntimeFieldHandle,RuntimeTypeHandle)
+ [m]	Int32 GetHashCode()
+ [m]	Type[] GetOptionalCustomModifiers()
+ [m]	Object GetRawConstantValue()
+ [m]	Type[] GetRequiredCustomModifiers()
+ [m]	Object GetValue(Object)
+ [m]	MemberTypes get_MemberType()
+ [m]	Void SetValue(Object,Object)

f [t] System.Reflection.ICustomAttributeProvider
+ [m]	Object[] GetCustomAttributes(Boolean)
+ [m]	Object[] GetCustomAttributes(Type,Boolean)
+ [m]	Boolean IsDefined(Type,Boolean)

f [t] System.Reflection.IntrospectionExtensions
+ [m]	TypeInfo GetTypeInfo(Type)

f [t] System.Reflection.InvalidFilterCriteriaException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Reflection.IReflectableType
+ [m]	TypeInfo GetTypeInfo()

f [t] System.Reflection.LocalVariableInfo
+ [m]	Void .ctor()
+ [m]	Boolean get_IsPinned()
+ [m]	Int32 get_LocalIndex()
+ [m]	Type get_LocalType()
+ [m]	String ToString()

f [t] System.Reflection.ManifestResourceInfo
+ [m]	Void .ctor(Assembly,String,ResourceLocation)
+ [m]	String get_FileName()
+ [m]	Assembly get_ReferencedAssembly()
+ [m]	ResourceLocation get_ResourceLocation()

f [t] System.Reflection.MemberFilter
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Boolean Invoke(MemberInfo,Object)
+ [m]	IAsyncResult BeginInvoke(MemberInfo,Object,AsyncCallback,Object)
+ [m]	Boolean EndInvoke(IAsyncResult)

f [t] System.Reflection.MemberInfo
+ [m]	Void .ctor()
+ [m]	IEnumerable`1 get_CustomAttributes()
+ [m]	Type get_DeclaringType()
+ [m]	Int32 get_MetadataToken()
+ [m]	Module get_Module()
+ [m]	String get_Name()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	MemberTypes get_MemberType()
- [m]	Object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Boolean)
- [m]	Object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Type,Boolean)
- [m]	Boolean System.Reflection.ICustomAttributeProvider.IsDefined(Type,Boolean)

f [t] System.Reflection.MemberTypes

f [t] System.Reflection.MethodBase
+ [m]	Void .ctor()
+ [m]	MethodAttributes get_Attributes()
+ [m]	CallingConventions get_CallingConvention()
+ [m]	Boolean get_ContainsGenericParameters()
+ [m]	Boolean get_IsAbstract()
+ [m]	Boolean get_IsAssembly()
+ [m]	Boolean get_IsConstructor()
+ [m]	Boolean get_IsFamily()
+ [m]	Boolean get_IsFamilyAndAssembly()
+ [m]	Boolean get_IsFamilyOrAssembly()
+ [m]	Boolean get_IsFinal()
+ [m]	Boolean get_IsGenericMethod()
+ [m]	Boolean get_IsGenericMethodDefinition()
+ [m]	Boolean get_IsHideBySig()
+ [m]	Boolean get_IsPrivate()
+ [m]	Boolean get_IsPublic()
+ [m]	Boolean get_IsSpecialName()
+ [m]	Boolean get_IsStatic()
+ [m]	Boolean get_IsVirtual()
+ [m]	MethodImplAttributes get_MethodImplementationFlags()
+ [m]	Boolean Equals(Object)
+ [m]	Type[] GetGenericArguments()
+ [m]	Int32 GetHashCode()
+ [m]	MethodBase GetMethodFromHandle(RuntimeMethodHandle)
+ [m]	MethodBase GetMethodFromHandle(RuntimeMethodHandle,RuntimeTypeHandle)
+ [m]	ParameterInfo[] GetParameters()
+ [m]	Object Invoke(Object,Object[])
+ [m]	MethodImplAttributes GetMethodImplementationFlags()

f [t] System.Reflection.MethodInfo
+ [m]	Void .ctor()
+ [m]	MethodInfo GetBaseDefinition()
+ [m]	ParameterInfo get_ReturnParameter()
+ [m]	Type get_ReturnType()
+ [m]	Delegate CreateDelegate(Type)
+ [m]	Delegate CreateDelegate(Type,Object)
+ [m]	Boolean Equals(Object)
+ [m]	Type[] GetGenericArguments()
+ [m]	MethodInfo GetGenericMethodDefinition()
+ [m]	Int32 GetHashCode()
+ [m]	MethodInfo MakeGenericMethod(Type[])
+ [m]	MemberTypes get_MemberType()
+ [m]	ICustomAttributeProvider get_ReturnTypeCustomAttributes()

f [t] System.Reflection.Module
+ [m]	Void .ctor()
+ [m]	Assembly get_Assembly()
+ [m]	IEnumerable`1 get_CustomAttributes()
+ [m]	String get_FullyQualifiedName()
+ [m]	String get_Name()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Type GetType(String,Boolean,Boolean)
+ [m]	String ToString()
+ [m]	Guid get_ModuleVersionId()
+ [m]	String get_ScopeName()
+ [m]	Type[] FindTypes(TypeFilter,Object)
+ [m]	FieldInfo GetField(String)
+ [m]	FieldInfo GetField(String,BindingFlags)
+ [m]	FieldInfo[] GetFields()
+ [m]	FieldInfo[] GetFields(BindingFlags)
+ [m]	MethodInfo GetMethod(String)
+ [m]	MethodInfo GetMethod(String,Type[])
+ [m]	MethodInfo[] GetMethods()
+ [m]	MethodInfo[] GetMethods(BindingFlags)
+ [m]	Type GetType(String)
+ [m]	Type GetType(String,Boolean)
+ [m]	Type[] GetTypes()
- [m]	Object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Boolean)
- [m]	Object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Type,Boolean)
- [m]	Boolean System.Reflection.ICustomAttributeProvider.IsDefined(Type,Boolean)

f [t] System.Reflection.ParameterInfo
+ [m]	Void .ctor()
+ [m]	ParameterAttributes get_Attributes()
+ [m]	IEnumerable`1 get_CustomAttributes()
! [m]	Object get_DefaultValue()
! [m]	Boolean get_HasDefaultValue()
+ [m]	Boolean get_IsIn()
+ [m]	Boolean get_IsOptional()
+ [m]	Boolean get_IsOut()
+ [m]	Boolean get_IsRetval()
+ [m]	MemberInfo get_Member()
+ [m]	String get_Name()
+ [m]	Type get_ParameterType()
+ [m]	Int32 get_Position()
+ [m]	Type[] GetOptionalCustomModifiers()
+ [m]	Type[] GetRequiredCustomModifiers()
! [m]	Object get_RawDefaultValue()
- [m]	Object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Boolean)
- [m]	Object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Type,Boolean)
- [m]	Boolean System.Reflection.ICustomAttributeProvider.IsDefined(Type,Boolean)

f [t] System.Reflection.ParameterModifier
+ [m]	Void .ctor(Int32)
+ [m]	Boolean get_Item(Int32)
+ [m]	Void set_Item(Int32,Boolean)

f [t] System.Reflection.PropertyInfo
+ [m]	Void .ctor()
+ [m]	PropertyAttributes get_Attributes()
+ [m]	Boolean get_CanRead()
+ [m]	Boolean get_CanWrite()
+ [m]	MethodInfo get_GetMethod()
+ [m]	Boolean get_IsSpecialName()
+ [m]	Type get_PropertyType()
+ [m]	MethodInfo get_SetMethod()
+ [m]	Boolean Equals(Object)
+ [m]	Object GetConstantValue()
+ [m]	Int32 GetHashCode()
+ [m]	ParameterInfo[] GetIndexParameters()
+ [m]	Object GetValue(Object)
+ [m]	Object GetValue(Object,Object[])
+ [m]	Void SetValue(Object,Object)
+ [m]	Void SetValue(Object,Object,Object[])
+ [m]	MemberTypes get_MemberType()
+ [m]	MethodInfo[] GetAccessors()
+ [m]	MethodInfo[] GetAccessors(Boolean)
+ [m]	MethodInfo GetGetMethod()
+ [m]	MethodInfo GetGetMethod(Boolean)
+ [m]	MethodInfo GetSetMethod()
+ [m]	MethodInfo GetSetMethod(Boolean)
+ [m]	Type[] GetOptionalCustomModifiers()
+ [m]	Object GetRawConstantValue()
+ [m]	Type[] GetRequiredCustomModifiers()

f [t] System.Reflection.ReflectionContext
+ [m]	Void .ctor()
+ [m]	TypeInfo GetTypeForObject(Object)
+ [m]	Assembly MapAssembly(Assembly)
+ [m]	TypeInfo MapType(TypeInfo)

f [t] System.Reflection.ReflectionTypeLoadException
+ [m]	Void .ctor(Type[],Exception[])
+ [m]	Void .ctor(Type[],Exception[],String)
+ [m]	Exception[] get_LoaderExceptions()
+ [m]	Type[] get_Types()

f [t] System.Reflection.ResourceLocation

f [t] System.Reflection.TargetException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Reflection.TargetInvocationException
+ [m]	Void .ctor(Exception)
+ [m]	Void .ctor(String,Exception)

f [t] System.Reflection.TargetParameterCountException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Reflection.TypeFilter
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Boolean Invoke(Type,Object)
+ [m]	IAsyncResult BeginInvoke(Type,Object,AsyncCallback,Object)
+ [m]	Boolean EndInvoke(IAsyncResult)

f [t] System.Reflection.TypeInfo
+ [m]	Void .ctor()
+ [m]	Type AsType()
+ [m]	IEnumerable`1 get_DeclaredConstructors()
+ [m]	IEnumerable`1 get_DeclaredEvents()
+ [m]	IEnumerable`1 get_DeclaredFields()
+ [m]	IEnumerable`1 get_DeclaredMembers()
+ [m]	IEnumerable`1 get_DeclaredMethods()
+ [m]	IEnumerable`1 get_DeclaredNestedTypes()
+ [m]	IEnumerable`1 get_DeclaredProperties()
- [m]	Type[] FindInterfaces(TypeFilter,Object)
- [m]	MemberInfo[] FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
+ [m]	Type[] get_GenericTypeParameters()
- [m]	ConstructorInfo GetConstructor(Type[])
- [m]	ConstructorInfo[] GetConstructors()
- [m]	ConstructorInfo[] GetConstructors(BindingFlags)
+ [m]	EventInfo GetDeclaredEvent(String)
+ [m]	FieldInfo GetDeclaredField(String)
+ [m]	MethodInfo GetDeclaredMethod(String)
+ [m]	IEnumerable`1 GetDeclaredMethods(String)
+ [m]	TypeInfo GetDeclaredNestedType(String)
+ [m]	PropertyInfo GetDeclaredProperty(String)
- [m]	MemberInfo[] GetDefaultMembers()
- [m]	String GetEnumName(Object)
- [m]	String[] GetEnumNames()
- [m]	Type GetEnumUnderlyingType()
- [m]	Array GetEnumValues()
- [m]	EventInfo GetEvent(String)
- [m]	EventInfo GetEvent(String,BindingFlags)
- [m]	EventInfo[] GetEvents()
- [m]	EventInfo[] GetEvents(BindingFlags)
- [m]	FieldInfo GetField(String)
- [m]	FieldInfo GetField(String,BindingFlags)
- [m]	FieldInfo[] GetFields()
- [m]	FieldInfo[] GetFields(BindingFlags)
- [m]	Type[] GetGenericArguments()
- [m]	Type GetInterface(String)
- [m]	Type GetInterface(String,Boolean)
- [m]	Type[] GetInterfaces()
- [m]	MemberInfo[] GetMember(String)
- [m]	MemberInfo[] GetMember(String,BindingFlags)
- [m]	MemberInfo[] GetMember(String,MemberTypes,BindingFlags)
- [m]	MemberInfo[] GetMembers()
- [m]	MemberInfo[] GetMembers(BindingFlags)
- [m]	MethodInfo GetMethod(String)
- [m]	MethodInfo GetMethod(String,BindingFlags)
- [m]	MethodInfo GetMethod(String,Type[])
- [m]	MethodInfo GetMethod(String,Type[],ParameterModifier[])
- [m]	MethodInfo[] GetMethods()
- [m]	MethodInfo[] GetMethods(BindingFlags)
- [m]	Type GetNestedType(String)
- [m]	Type GetNestedType(String,BindingFlags)
- [m]	Type[] GetNestedTypes()
- [m]	Type[] GetNestedTypes(BindingFlags)
- [m]	PropertyInfo[] GetProperties()
- [m]	PropertyInfo[] GetProperties(BindingFlags)
- [m]	PropertyInfo GetProperty(String)
- [m]	PropertyInfo GetProperty(String,BindingFlags)
- [m]	PropertyInfo GetProperty(String,Type)
- [m]	PropertyInfo GetProperty(String,Type,Type[])
- [m]	PropertyInfo GetProperty(String,Type,Type[],ParameterModifier[])
- [m]	PropertyInfo GetProperty(String,Type[])
+ [m]	TypeInfo System.Reflection.IReflectableType.GetTypeInfo()
+ [m]	IEnumerable`1 get_ImplementedInterfaces()
- [m]	Boolean IsAssignableFrom(Type)
+ [m]	Boolean IsAssignableFrom(TypeInfo)
- [m]	Boolean IsEnumDefined(Object)
- [m]	Boolean IsInstanceOfType(Object)
- [m]	StructLayoutAttribute get_StructLayoutAttribute()
- [m]	ConstructorInfo get_TypeInitializer()
- [m]	Type get_UnderlyingSystemType()
- [m]	MemberTypes get_MemberType()
- [m]	TypeAttributes get_Attributes()
- [m]	Int32 GetArrayRank()
- [m]	Type GetElementType()
- [m]	Type[] GetGenericParameterConstraints()
- [m]	Boolean IsSubclassOf(Type)
- [m]	Boolean IsEquivalentTo(Type)
- [m]	Type[] get_GenericTypeArguments()
- [m]	Type GetGenericTypeDefinition()
- [m]	Assembly get_Assembly()
- [m]	Type get_BaseType()
- [m]	Boolean get_ContainsGenericParameters()
- [m]	MethodBase get_DeclaringMethod()
- [m]	String get_FullName()
- [m]	GenericParameterAttributes get_GenericParameterAttributes()
- [m]	Int32 get_GenericParameterPosition()
- [m]	Guid get_GUID()
- [m]	Boolean get_HasElementType()
- [m]	Boolean get_IsAbstract()
- [m]	Boolean get_IsAnsiClass()
- [m]	Boolean get_IsArray()
- [m]	Boolean get_IsAutoClass()
- [m]	Boolean get_IsAutoLayout()
- [m]	Boolean get_IsByRef()
- [m]	Boolean get_IsClass()
- [m]	Boolean get_IsCOMObject()
- [m]	Boolean get_IsEnum()
- [m]	Boolean get_IsExplicitLayout()
- [m]	Boolean get_IsGenericParameter()
- [m]	Boolean get_IsGenericType()
- [m]	Boolean get_IsGenericTypeDefinition()
- [m]	Boolean get_IsImport()
- [m]	Boolean get_IsInterface()
- [m]	Boolean get_IsLayoutSequential()
- [m]	Boolean get_IsMarshalByRef()
- [m]	Boolean get_IsNested()
- [m]	Boolean get_IsNestedAssembly()
- [m]	Boolean get_IsNestedFamANDAssem()
- [m]	Boolean get_IsNestedFamily()
- [m]	Boolean get_IsNestedFamORAssem()
- [m]	Boolean get_IsNestedPrivate()
- [m]	Boolean get_IsNestedPublic()
- [m]	Boolean get_IsNotPublic()
- [m]	Boolean get_IsPointer()
- [m]	Boolean get_IsPrimitive()
- [m]	Boolean get_IsPublic()
- [m]	Boolean get_IsSealed()
- [m]	Boolean get_IsVisible()
- [m]	Boolean get_IsSerializable()
- [m]	Boolean get_IsSpecialName()
- [m]	Boolean get_IsUnicodeClass()
- [m]	Boolean get_IsValueType()
- [m]	String get_Namespace()
- [m]	String get_AssemblyQualifiedName()
- [m]	Type MakeArrayType()
- [m]	Type MakeArrayType(Int32)
- [m]	Type MakeByRefType()
- [m]	Type MakeGenericType(Type[])
- [m]	Type MakePointerType()

---------------------------------------
+ [a] System.Reflection.Context.dll
ref: ./netstandard/packages/System.Reflection.Context/ref/netstandard1.1/System.Reflection.Context.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/mono/2.1/System.Reflection.Context.dll

+ [t] System.Reflection.Context.CustomReflectionContext
+ [m]	Void .ctor()
+ [m]	Void .ctor(ReflectionContext)
! [m]	IEnumerable`1 AddProperties(Type)
! [m]	PropertyInfo CreateProperty(Type,String,Func`2,Action`2)
! [m]	PropertyInfo CreateProperty(Type,String,Func`2,Action`2,IEnumerable`1,IEnumerable`1,IEnumerable`1)
! [m]	IEnumerable`1 GetCustomAttributes(MemberInfo,IEnumerable`1)
! [m]	IEnumerable`1 GetCustomAttributes(ParameterInfo,IEnumerable`1)
! [m]	Assembly MapAssembly(Assembly)
! [m]	TypeInfo MapType(TypeInfo)

---------------------------------------
+ [a] System.Reflection.DispatchProxy.dll
ref: ./netstandard/packages/System.Reflection.DispatchProxy/ref/netstandard1.3/System.Reflection.DispatchProxy.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/mono/2.1/System.Reflection.DispatchProxy.dll

+ [t] System.Reflection.DispatchProxy
+ [m]	Void .ctor()
! [m]	T Create()
+ [m]	Object Invoke(MethodInfo,Object[])

---------------------------------------
+ [a] System.Reflection.Emit.dll
ref: ./netstandard/packages/System.Reflection.Emit/ref/netstandard1.1/System.Reflection.Emit.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Reflection.Emit.dll

f [t] System.Reflection.Emit.AssemblyBuilder
- [m]	Void .ctor()
+ [m]	String get_FullName()
+ [m]	Boolean get_IsDynamic()
+ [m]	Module get_ManifestModule()
+ [m]	AssemblyBuilder DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess)
- [m]	AssemblyBuilder DefineDynamicAssembly(AssemblyName,AssemblyBuilderAccess,IEnumerable`1)
+ [m]	ModuleBuilder DefineDynamicModule(String)
+ [m]	Boolean Equals(Object)
+ [m]	ModuleBuilder GetDynamicModule(String)
+ [m]	Int32 GetHashCode()
+ [m]	ManifestResourceInfo GetManifestResourceInfo(String)
+ [m]	String[] GetManifestResourceNames()
+ [m]	Stream GetManifestResourceStream(String)
+ [m]	Void SetCustomAttribute(ConstructorInfo,Byte[])
+ [m]	Void SetCustomAttribute(CustomAttributeBuilder)
- [m]	IEnumerable`1 get_DefinedTypes()
- [m]	IEnumerable`1 get_Modules()

f [t] System.Reflection.Emit.AssemblyBuilderAccess

f [t] System.Reflection.Emit.ConstructorBuilder
- [m]	Void .ctor()
+ [m]	MethodAttributes get_Attributes()
+ [m]	CallingConventions get_CallingConvention()
+ [m]	Type get_DeclaringType()
+ [m]	Boolean get_InitLocals()
+ [m]	Void set_InitLocals(Boolean)
+ [m]	String get_Name()
+ [m]	ParameterBuilder DefineParameter(Int32,ParameterAttributes,String)
+ [m]	ILGenerator GetILGenerator()
+ [m]	ILGenerator GetILGenerator(Int32)
+ [m]	ParameterInfo[] GetParameters()
+ [m]	Void SetCustomAttribute(ConstructorInfo,Byte[])
+ [m]	Void SetCustomAttribute(CustomAttributeBuilder)
+ [m]	Void SetImplementationFlags(MethodImplAttributes)
+ [m]	String ToString()
- [m]	MethodImplAttributes get_MethodImplementationFlags()

f [t] System.Reflection.Emit.EnumBuilder
- [m]	Void .ctor()
+ [m]	String get_AssemblyQualifiedName()
+ [m]	String get_FullName()
+ [m]	String get_Name()
+ [m]	FieldBuilder get_UnderlyingField()
- [m]	TypeInfo CreateTypeInfo()
+ [m]	FieldBuilder DefineLiteral(String,Object)
+ [m]	Boolean IsAssignableFrom(TypeInfo)
+ [m]	Type MakeArrayType()
+ [m]	Type MakeArrayType(Int32)
+ [m]	Type MakeByRefType()
+ [m]	Type MakePointerType()
+ [m]	Void SetCustomAttribute(ConstructorInfo,Byte[])
+ [m]	Void SetCustomAttribute(CustomAttributeBuilder)
- [m]	TypeAttributes get_Attributes()
+ [m]	Assembly get_Assembly()
+ [m]	Type get_BaseType()
+ [m]	Module get_Module()
- [m]	Int32 GetArrayRank()
+ [m]	Type GetElementType()
- [m]	Type[] GetGenericParameterConstraints()
- [m]	Type[] get_GenericTypeArguments()
- [m]	Type GetGenericTypeDefinition()
- [m]	Boolean get_ContainsGenericParameters()
- [m]	MethodBase get_DeclaringMethod()
- [m]	GenericParameterAttributes get_GenericParameterAttributes()
- [m]	Int32 get_GenericParameterPosition()
+ [m]	Guid get_GUID()
- [m]	Boolean get_IsEnum()
- [m]	Boolean get_IsGenericParameter()
- [m]	Boolean get_IsGenericType()
- [m]	Boolean get_IsGenericTypeDefinition()
- [m]	Boolean get_IsSerializable()
+ [m]	String get_Namespace()
- [m]	Type MakeGenericType(Type[])
+ [m]	Type get_DeclaringType()

f [t] System.Reflection.Emit.EventBuilder
- [m]	Void .ctor()
+ [m]	Void AddOtherMethod(MethodBuilder)
+ [m]	Void SetAddOnMethod(MethodBuilder)
+ [m]	Void SetCustomAttribute(ConstructorInfo,Byte[])
+ [m]	Void SetCustomAttribute(CustomAttributeBuilder)
+ [m]	Void SetRaiseMethod(MethodBuilder)
+ [m]	Void SetRemoveOnMethod(MethodBuilder)

f [t] System.Reflection.Emit.FieldBuilder
- [m]	Void .ctor()
+ [m]	FieldAttributes get_Attributes()
+ [m]	Type get_DeclaringType()
+ [m]	Type get_FieldType()
+ [m]	String get_Name()
+ [m]	Object GetValue(Object)
+ [m]	Void SetConstant(Object)
+ [m]	Void SetCustomAttribute(ConstructorInfo,Byte[])
+ [m]	Void SetCustomAttribute(CustomAttributeBuilder)
+ [m]	Void SetOffset(Int32)

f [t] System.Reflection.Emit.GenericTypeParameterBuilder
- [m]	Void .ctor()
+ [m]	String get_AssemblyQualifiedName()
+ [m]	String get_FullName()
+ [m]	Boolean get_IsGenericParameter()
+ [m]	String get_Name()
+ [m]	Boolean Equals(Object)
+ [m]	Type GetGenericTypeDefinition()
+ [m]	Int32 GetHashCode()
+ [m]	Boolean IsAssignableFrom(TypeInfo)
+ [m]	Type MakeArrayType()
+ [m]	Type MakeArrayType(Int32)
+ [m]	Type MakeByRefType()
+ [m]	Type MakeGenericType(Type[])
+ [m]	Type MakePointerType()
+ [m]	Void SetBaseTypeConstraint(Type)
+ [m]	Void SetCustomAttribute(ConstructorInfo,Byte[])
+ [m]	Void SetCustomAttribute(CustomAttributeBuilder)
+ [m]	Void SetGenericParameterAttributes(GenericParameterAttributes)
+ [m]	Void SetInterfaceConstraints(Type[])
+ [m]	String ToString()
+ [m]	Boolean IsSubclassOf(Type)
- [m]	TypeAttributes get_Attributes()
+ [m]	Assembly get_Assembly()
+ [m]	Type get_BaseType()
+ [m]	MethodBase get_DeclaringMethod()
+ [m]	GenericParameterAttributes get_GenericParameterAttributes()
+ [m]	Module get_Module()
- [m]	Int32 GetArrayRank()
+ [m]	Type GetElementType()
+ [m]	Type[] GetGenericParameterConstraints()
- [m]	Type[] get_GenericTypeArguments()
+ [m]	Boolean get_ContainsGenericParameters()
+ [m]	Int32 get_GenericParameterPosition()
+ [m]	Guid get_GUID()
- [m]	Boolean get_IsEnum()
+ [m]	Boolean get_IsGenericType()
+ [m]	Boolean get_IsGenericTypeDefinition()
- [m]	Boolean get_IsSerializable()
+ [m]	String get_Namespace()
+ [m]	Type get_DeclaringType()

f [t] System.Reflection.Emit.MethodBuilder
- [m]	Void .ctor()
+ [m]	MethodAttributes get_Attributes()
+ [m]	CallingConventions get_CallingConvention()
+ [m]	Boolean get_ContainsGenericParameters()
+ [m]	Type get_DeclaringType()
+ [m]	Boolean get_InitLocals()
+ [m]	Void set_InitLocals(Boolean)
+ [m]	Boolean get_IsGenericMethod()
+ [m]	Boolean get_IsGenericMethodDefinition()
+ [m]	String get_Name()
+ [m]	ParameterInfo get_ReturnParameter()
+ [m]	Type get_ReturnType()
+ [m]	GenericTypeParameterBuilder[] DefineGenericParameters(String[])
+ [m]	ParameterBuilder DefineParameter(Int32,ParameterAttributes,String)
+ [m]	Boolean Equals(Object)
+ [m]	Type[] GetGenericArguments()
+ [m]	MethodInfo GetGenericMethodDefinition()
+ [m]	Int32 GetHashCode()
+ [m]	ILGenerator GetILGenerator()
+ [m]	ILGenerator GetILGenerator(Int32)
+ [m]	ParameterInfo[] GetParameters()
+ [m]	MethodInfo MakeGenericMethod(Type[])
+ [m]	Void SetCustomAttribute(ConstructorInfo,Byte[])
+ [m]	Void SetCustomAttribute(CustomAttributeBuilder)
+ [m]	Void SetImplementationFlags(MethodImplAttributes)
+ [m]	Void SetParameters(Type[])
+ [m]	Void SetReturnType(Type)
+ [m]	Void SetSignature(Type,Type[],Type[],Type[],Type[][],Type[][])
+ [m]	String ToString()
- [m]	MethodImplAttributes get_MethodImplementationFlags()

f [t] System.Reflection.Emit.ModuleBuilder
- [m]	Void .ctor()
+ [m]	Assembly get_Assembly()
+ [m]	String get_FullyQualifiedName()
+ [m]	String get_Name()
+ [m]	Void CreateGlobalFunctions()
+ [m]	EnumBuilder DefineEnum(String,TypeAttributes,Type)
+ [m]	MethodBuilder DefineGlobalMethod(String,MethodAttributes,CallingConventions,Type,Type[])
+ [m]	MethodBuilder DefineGlobalMethod(String,MethodAttributes,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
+ [m]	MethodBuilder DefineGlobalMethod(String,MethodAttributes,Type,Type[])
+ [m]	FieldBuilder DefineInitializedData(String,Byte[],FieldAttributes)
+ [m]	TypeBuilder DefineType(String)
+ [m]	TypeBuilder DefineType(String,TypeAttributes)
+ [m]	TypeBuilder DefineType(String,TypeAttributes,Type)
+ [m]	TypeBuilder DefineType(String,TypeAttributes,Type,Int32)
+ [m]	TypeBuilder DefineType(String,TypeAttributes,Type,PackingSize)
+ [m]	TypeBuilder DefineType(String,TypeAttributes,Type,PackingSize,Int32)
+ [m]	TypeBuilder DefineType(String,TypeAttributes,Type,Type[])
+ [m]	FieldBuilder DefineUninitializedData(String,Int32,FieldAttributes)
+ [m]	Boolean Equals(Object)
+ [m]	MethodInfo GetArrayMethod(Type,String,CallingConventions,Type,Type[])
+ [m]	Int32 GetHashCode()
+ [m]	Void SetCustomAttribute(ConstructorInfo,Byte[])
+ [m]	Void SetCustomAttribute(CustomAttributeBuilder)

f [t] System.Reflection.Emit.PropertyBuilder
- [m]	Void .ctor()
+ [m]	PropertyAttributes get_Attributes()
+ [m]	Boolean get_CanRead()
+ [m]	Boolean get_CanWrite()
+ [m]	Type get_DeclaringType()
+ [m]	String get_Name()
+ [m]	Type get_PropertyType()
+ [m]	Void AddOtherMethod(MethodBuilder)
+ [m]	ParameterInfo[] GetIndexParameters()
+ [m]	Object GetValue(Object,Object[])
+ [m]	Void SetConstant(Object)
+ [m]	Void SetCustomAttribute(ConstructorInfo,Byte[])
+ [m]	Void SetCustomAttribute(CustomAttributeBuilder)
+ [m]	Void SetGetMethod(MethodBuilder)
+ [m]	Void SetSetMethod(MethodBuilder)
+ [m]	Void SetValue(Object,Object,Object[])

f [t] System.Reflection.Emit.TypeBuilder
- [m]	Void .ctor()
+ [m]	String get_AssemblyQualifiedName()
+ [m]	String get_FullName()
+ [m]	Boolean get_IsGenericParameter()
+ [m]	String get_Name()
+ [m]	PackingSize get_PackingSize()
+ [m]	Int32 get_Size()
+ [m]	Void AddInterfaceImplementation(Type)
+ [m]	TypeInfo CreateTypeInfo()
+ [m]	ConstructorBuilder DefineConstructor(MethodAttributes,CallingConventions,Type[])
+ [m]	ConstructorBuilder DefineConstructor(MethodAttributes,CallingConventions,Type[],Type[][],Type[][])
+ [m]	ConstructorBuilder DefineDefaultConstructor(MethodAttributes)
+ [m]	EventBuilder DefineEvent(String,EventAttributes,Type)
+ [m]	FieldBuilder DefineField(String,Type,FieldAttributes)
+ [m]	FieldBuilder DefineField(String,Type,Type[],Type[],FieldAttributes)
+ [m]	GenericTypeParameterBuilder[] DefineGenericParameters(String[])
+ [m]	FieldBuilder DefineInitializedData(String,Byte[],FieldAttributes)
+ [m]	MethodBuilder DefineMethod(String,MethodAttributes)
+ [m]	MethodBuilder DefineMethod(String,MethodAttributes,CallingConventions)
+ [m]	MethodBuilder DefineMethod(String,MethodAttributes,CallingConventions,Type,Type[])
+ [m]	MethodBuilder DefineMethod(String,MethodAttributes,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
+ [m]	MethodBuilder DefineMethod(String,MethodAttributes,Type,Type[])
+ [m]	Void DefineMethodOverride(MethodInfo,MethodInfo)
+ [m]	TypeBuilder DefineNestedType(String)
+ [m]	TypeBuilder DefineNestedType(String,TypeAttributes)
+ [m]	TypeBuilder DefineNestedType(String,TypeAttributes,Type)
+ [m]	TypeBuilder DefineNestedType(String,TypeAttributes,Type,Int32)
+ [m]	TypeBuilder DefineNestedType(String,TypeAttributes,Type,PackingSize)
+ [m]	TypeBuilder DefineNestedType(String,TypeAttributes,Type,PackingSize,Int32)
+ [m]	TypeBuilder DefineNestedType(String,TypeAttributes,Type,Type[])
+ [m]	PropertyBuilder DefineProperty(String,PropertyAttributes,CallingConventions,Type,Type[])
+ [m]	PropertyBuilder DefineProperty(String,PropertyAttributes,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
+ [m]	PropertyBuilder DefineProperty(String,PropertyAttributes,Type,Type[])
+ [m]	PropertyBuilder DefineProperty(String,PropertyAttributes,Type,Type[],Type[],Type[],Type[][],Type[][])
+ [m]	ConstructorBuilder DefineTypeInitializer()
+ [m]	FieldBuilder DefineUninitializedData(String,Int32,FieldAttributes)
+ [m]	ConstructorInfo GetConstructor(Type,ConstructorInfo)
+ [m]	FieldInfo GetField(Type,FieldInfo)
+ [m]	Type GetGenericTypeDefinition()
+ [m]	MethodInfo GetMethod(Type,MethodInfo)
+ [m]	Boolean IsAssignableFrom(TypeInfo)
+ [m]	Boolean IsCreated()
+ [m]	Type MakeArrayType()
+ [m]	Type MakeArrayType(Int32)
+ [m]	Type MakeByRefType()
+ [m]	Type MakeGenericType(Type[])
+ [m]	Type MakePointerType()
+ [m]	Void SetCustomAttribute(ConstructorInfo,Byte[])
+ [m]	Void SetCustomAttribute(CustomAttributeBuilder)
+ [m]	Void SetParent(Type)
+ [m]	String ToString()
- [m]	TypeAttributes get_Attributes()
+ [m]	Assembly get_Assembly()
+ [m]	Type get_BaseType()
+ [m]	MethodBase get_DeclaringMethod()
+ [m]	GenericParameterAttributes get_GenericParameterAttributes()
+ [m]	Module get_Module()
- [m]	Int32 GetArrayRank()
+ [m]	Type GetElementType()
- [m]	Type[] GetGenericParameterConstraints()
- [m]	Type[] get_GenericTypeArguments()
+ [m]	Boolean get_ContainsGenericParameters()
+ [m]	Int32 get_GenericParameterPosition()
+ [m]	Guid get_GUID()
- [m]	Boolean get_IsEnum()
+ [m]	Boolean get_IsGenericType()
+ [m]	Boolean get_IsGenericTypeDefinition()
- [m]	Boolean get_IsSerializable()
+ [m]	String get_Namespace()
+ [m]	Type get_DeclaringType()

---------------------------------------
+ [a] System.Reflection.Emit.ILGeneration.dll
ref: ./netstandard/packages/System.Reflection.Emit.ILGeneration/ref/netstandard1.0/System.Reflection.Emit.ILGeneration.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Reflection.Emit.ILGeneration.dll

f [t] System.Reflection.Emit.CustomAttributeBuilder
+ [m]	Void .ctor(ConstructorInfo,Object[])
+ [m]	Void .ctor(ConstructorInfo,Object[],FieldInfo[],Object[])
+ [m]	Void .ctor(ConstructorInfo,Object[],PropertyInfo[],Object[])
+ [m]	Void .ctor(ConstructorInfo,Object[],PropertyInfo[],Object[],FieldInfo[],Object[])

f [t] System.Reflection.Emit.ILGenerator
- [m]	Void .ctor()
+ [m]	Int32 get_ILOffset()
+ [m]	Void BeginCatchBlock(Type)
+ [m]	Void BeginExceptFilterBlock()
+ [m]	Label BeginExceptionBlock()
+ [m]	Void BeginFaultBlock()
+ [m]	Void BeginFinallyBlock()
+ [m]	Void BeginScope()
+ [m]	LocalBuilder DeclareLocal(Type)
+ [m]	LocalBuilder DeclareLocal(Type,Boolean)
+ [m]	Label DefineLabel()
+ [m]	Void Emit(OpCode)
+ [m]	Void Emit(OpCode,Byte)
+ [m]	Void Emit(OpCode,Double)
+ [m]	Void Emit(OpCode,Int16)
+ [m]	Void Emit(OpCode,Int32)
+ [m]	Void Emit(OpCode,Int64)
+ [m]	Void Emit(OpCode,ConstructorInfo)
+ [m]	Void Emit(OpCode,Label)
+ [m]	Void Emit(OpCode,Label[])
+ [m]	Void Emit(OpCode,LocalBuilder)
+ [m]	Void Emit(OpCode,SignatureHelper)
+ [m]	Void Emit(OpCode,FieldInfo)
+ [m]	Void Emit(OpCode,MethodInfo)
+ [m]	Void Emit(OpCode,SByte)
+ [m]	Void Emit(OpCode,Single)
+ [m]	Void Emit(OpCode,String)
+ [m]	Void Emit(OpCode,Type)
+ [m]	Void EmitCall(OpCode,MethodInfo,Type[])
+ [m]	Void EmitCalli(OpCode,CallingConventions,Type,Type[],Type[])
+ [m]	Void EmitWriteLine(LocalBuilder)
+ [m]	Void EmitWriteLine(FieldInfo)
+ [m]	Void EmitWriteLine(String)
+ [m]	Void EndExceptionBlock()
+ [m]	Void EndScope()
+ [m]	Void MarkLabel(Label)
+ [m]	Void ThrowException(Type)
! [m]	Void UsingNamespace(String)

f [t] System.Reflection.Emit.Label
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(Label)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(Label,Label)
+ [m]	Boolean op_Inequality(Label,Label)

f [t] System.Reflection.Emit.LocalBuilder
- [m]	Void .ctor()
+ [m]	Boolean get_IsPinned()
+ [m]	Int32 get_LocalIndex()
+ [m]	Type get_LocalType()

f [t] System.Reflection.Emit.ParameterBuilder
- [m]	Void .ctor()
+ [m]	Int32 get_Attributes()
+ [m]	Boolean get_IsIn()
+ [m]	Boolean get_IsOptional()
+ [m]	Boolean get_IsOut()
+ [m]	String get_Name()
+ [m]	Int32 get_Position()
+ [m]	Void SetConstant(Object)
+ [m]	Void SetCustomAttribute(ConstructorInfo,Byte[])
+ [m]	Void SetCustomAttribute(CustomAttributeBuilder)

f [t] System.Reflection.Emit.SignatureHelper
- [m]	Void .ctor()
+ [m]	Void AddArgument(Type)
+ [m]	Void AddArgument(Type,Boolean)
+ [m]	Void AddArgument(Type,Type[],Type[])
+ [m]	Void AddArguments(Type[],Type[][],Type[][])
! [m]	Void AddSentinel()
+ [m]	Boolean Equals(Object)
+ [m]	SignatureHelper GetFieldSigHelper(Module)
+ [m]	Int32 GetHashCode()
+ [m]	SignatureHelper GetLocalVarSigHelper()
+ [m]	SignatureHelper GetLocalVarSigHelper(Module)
+ [m]	SignatureHelper GetMethodSigHelper(CallingConventions,Type)
+ [m]	SignatureHelper GetMethodSigHelper(Module,CallingConventions,Type)
+ [m]	SignatureHelper GetMethodSigHelper(Module,Type,Type[])
! [m]	SignatureHelper GetPropertySigHelper(Module,CallingConventions,Type,Type[],Type[],Type[],Type[][],Type[][])
! [m]	SignatureHelper GetPropertySigHelper(Module,Type,Type[])
! [m]	SignatureHelper GetPropertySigHelper(Module,Type,Type[],Type[],Type[],Type[][],Type[][])
+ [m]	Byte[] GetSignature()
+ [m]	String ToString()

---------------------------------------
+ [a] System.Reflection.Emit.Lightweight.dll
ref: ./netstandard/packages/System.Reflection.Emit.Lightweight/ref/netstandard1.0/System.Reflection.Emit.Lightweight.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Reflection.Emit.Lightweight.dll

f [t] System.Reflection.Emit.DynamicMethod
+ [m]	Void .ctor(String,MethodAttributes,CallingConventions,Type,Type[],Module,Boolean)
+ [m]	Void .ctor(String,MethodAttributes,CallingConventions,Type,Type[],Type,Boolean)
+ [m]	Void .ctor(String,Type,Type[])
+ [m]	Void .ctor(String,Type,Type[],Boolean)
+ [m]	Void .ctor(String,Type,Type[],Module)
+ [m]	Void .ctor(String,Type,Type[],Module,Boolean)
+ [m]	Void .ctor(String,Type,Type[],Type)
+ [m]	Void .ctor(String,Type,Type[],Type,Boolean)
+ [m]	MethodAttributes get_Attributes()
+ [m]	CallingConventions get_CallingConvention()
+ [m]	Type get_DeclaringType()
+ [m]	Boolean get_InitLocals()
+ [m]	Void set_InitLocals(Boolean)
+ [m]	String get_Name()
! [m]	ParameterInfo get_ReturnParameter()
+ [m]	Type get_ReturnType()
+ [m]	Delegate CreateDelegate(Type)
+ [m]	Delegate CreateDelegate(Type,Object)
+ [m]	ILGenerator GetILGenerator()
+ [m]	ILGenerator GetILGenerator(Int32)
+ [m]	ParameterInfo[] GetParameters()
+ [m]	String ToString()
- [m]	MethodImplAttributes get_MethodImplementationFlags()

---------------------------------------
+ [a] System.Reflection.Extensions.dll
ref: ./netstandard/packages/System.Reflection.Extensions/ref/netstandard1.0/System.Reflection.Extensions.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Reflection.Extensions.dll

f [t] System.Reflection.CustomAttributeExtensions
+ [m]	Attribute GetCustomAttribute(Assembly,Type)
+ [m]	Attribute GetCustomAttribute(MemberInfo,Type)
+ [m]	Attribute GetCustomAttribute(MemberInfo,Type,Boolean)
+ [m]	Attribute GetCustomAttribute(Module,Type)
+ [m]	Attribute GetCustomAttribute(ParameterInfo,Type)
+ [m]	Attribute GetCustomAttribute(ParameterInfo,Type,Boolean)
+ [m]	T GetCustomAttribute(Assembly)
+ [m]	T GetCustomAttribute(MemberInfo)
+ [m]	T GetCustomAttribute(MemberInfo,Boolean)
+ [m]	T GetCustomAttribute(Module)
+ [m]	T GetCustomAttribute(ParameterInfo)
+ [m]	T GetCustomAttribute(ParameterInfo,Boolean)
+ [m]	IEnumerable`1 GetCustomAttributes(Assembly)
+ [m]	IEnumerable`1 GetCustomAttributes(Assembly,Type)
+ [m]	IEnumerable`1 GetCustomAttributes(MemberInfo)
+ [m]	IEnumerable`1 GetCustomAttributes(MemberInfo,Boolean)
+ [m]	IEnumerable`1 GetCustomAttributes(MemberInfo,Type)
+ [m]	IEnumerable`1 GetCustomAttributes(MemberInfo,Type,Boolean)
+ [m]	IEnumerable`1 GetCustomAttributes(Module)
+ [m]	IEnumerable`1 GetCustomAttributes(Module,Type)
+ [m]	IEnumerable`1 GetCustomAttributes(ParameterInfo)
+ [m]	IEnumerable`1 GetCustomAttributes(ParameterInfo,Boolean)
+ [m]	IEnumerable`1 GetCustomAttributes(ParameterInfo,Type)
+ [m]	IEnumerable`1 GetCustomAttributes(ParameterInfo,Type,Boolean)
+ [m]	IEnumerable`1 GetCustomAttributes(Assembly)
+ [m]	IEnumerable`1 GetCustomAttributes(MemberInfo)
+ [m]	IEnumerable`1 GetCustomAttributes(MemberInfo,Boolean)
+ [m]	IEnumerable`1 GetCustomAttributes(Module)
+ [m]	IEnumerable`1 GetCustomAttributes(ParameterInfo)
+ [m]	IEnumerable`1 GetCustomAttributes(ParameterInfo,Boolean)
+ [m]	Boolean IsDefined(Assembly,Type)
+ [m]	Boolean IsDefined(MemberInfo,Type)
+ [m]	Boolean IsDefined(MemberInfo,Type,Boolean)
+ [m]	Boolean IsDefined(Module,Type)
+ [m]	Boolean IsDefined(ParameterInfo,Type)
+ [m]	Boolean IsDefined(ParameterInfo,Type,Boolean)

f [t] System.Reflection.InterfaceMapping

f [t] System.Reflection.RuntimeReflectionExtensions
+ [m]	MethodInfo GetMethodInfo(Delegate)
+ [m]	MethodInfo GetRuntimeBaseDefinition(MethodInfo)
+ [m]	EventInfo GetRuntimeEvent(Type,String)
+ [m]	IEnumerable`1 GetRuntimeEvents(Type)
+ [m]	FieldInfo GetRuntimeField(Type,String)
+ [m]	IEnumerable`1 GetRuntimeFields(Type)
+ [m]	InterfaceMapping GetRuntimeInterfaceMap(TypeInfo,Type)
+ [m]	MethodInfo GetRuntimeMethod(Type,String,Type[])
+ [m]	IEnumerable`1 GetRuntimeMethods(Type)
+ [m]	IEnumerable`1 GetRuntimeProperties(Type)
+ [m]	PropertyInfo GetRuntimeProperty(Type,String)

---------------------------------------
+ [a] System.Reflection.Primitives.dll
ref: ./netstandard/packages/System.Reflection.Primitives/ref/netstandard1.0/System.Reflection.Primitives.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Reflection.Primitives.dll

f [t] System.Reflection.CallingConventions

f [t] System.Reflection.EventAttributes

f [t] System.Reflection.FieldAttributes

f [t] System.Reflection.GenericParameterAttributes

f [t] System.Reflection.MethodAttributes

f [t] System.Reflection.MethodImplAttributes

f [t] System.Reflection.ParameterAttributes

f [t] System.Reflection.PropertyAttributes

f [t] System.Reflection.TypeAttributes

f [t] System.Reflection.Emit.FlowControl

f [t] System.Reflection.Emit.OpCode
+ [m]	FlowControl get_FlowControl()
+ [m]	String get_Name()
+ [m]	OpCodeType get_OpCodeType()
+ [m]	OperandType get_OperandType()
+ [m]	Int32 get_Size()
+ [m]	StackBehaviour get_StackBehaviourPop()
+ [m]	StackBehaviour get_StackBehaviourPush()
+ [m]	Int16 get_Value()
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(OpCode)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(OpCode,OpCode)
+ [m]	Boolean op_Inequality(OpCode,OpCode)
+ [m]	String ToString()

f [t] System.Reflection.Emit.OpCodes
+ [m]	Void .ctor()
+ [m]	Boolean TakesSingleByteArgument(OpCode)

f [t] System.Reflection.Emit.OpCodeType

f [t] System.Reflection.Emit.OperandType

f [t] System.Reflection.Emit.PackingSize

f [t] System.Reflection.Emit.StackBehaviour

---------------------------------------
+ [a] System.Reflection.TypeExtensions.dll
ref: ./netstandard/packages/System.Reflection.TypeExtensions/ref/netstandard1.5/System.Reflection.TypeExtensions.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Reflection.TypeExtensions.dll

+ [t] System.Reflection.AssemblyExtensions
+ [m]	Type[] GetExportedTypes(Assembly)
+ [m]	Module[] GetModules(Assembly)
+ [m]	Type[] GetTypes(Assembly)

+ [t] System.Reflection.EventInfoExtensions
+ [m]	MethodInfo GetAddMethod(EventInfo)
+ [m]	MethodInfo GetAddMethod(EventInfo,Boolean)
+ [m]	MethodInfo GetRaiseMethod(EventInfo)
+ [m]	MethodInfo GetRaiseMethod(EventInfo,Boolean)
+ [m]	MethodInfo GetRemoveMethod(EventInfo)
+ [m]	MethodInfo GetRemoveMethod(EventInfo,Boolean)

+ [t] System.Reflection.MemberInfoExtensions
+ [m]	Boolean HasMetadataToken(MemberInfo)
+ [m]	Int32 GetMetadataToken(MemberInfo)

+ [t] System.Reflection.MethodInfoExtensions
+ [m]	MethodInfo GetBaseDefinition(MethodInfo)

+ [t] System.Reflection.ModuleExtensions
+ [m]	Boolean HasModuleVersionId(Module)
+ [m]	Guid GetModuleVersionId(Module)

+ [t] System.Reflection.PropertyInfoExtensions
+ [m]	MethodInfo[] GetAccessors(PropertyInfo)
+ [m]	MethodInfo[] GetAccessors(PropertyInfo,Boolean)
+ [m]	MethodInfo GetGetMethod(PropertyInfo)
+ [m]	MethodInfo GetGetMethod(PropertyInfo,Boolean)
+ [m]	MethodInfo GetSetMethod(PropertyInfo)
+ [m]	MethodInfo GetSetMethod(PropertyInfo,Boolean)

+ [t] System.Reflection.TypeExtensions
+ [m]	ConstructorInfo GetConstructor(Type,Type[])
+ [m]	ConstructorInfo[] GetConstructors(Type)
+ [m]	ConstructorInfo[] GetConstructors(Type,BindingFlags)
+ [m]	MemberInfo[] GetDefaultMembers(Type)
+ [m]	EventInfo GetEvent(Type,String)
+ [m]	EventInfo GetEvent(Type,String,BindingFlags)
+ [m]	EventInfo[] GetEvents(Type)
+ [m]	EventInfo[] GetEvents(Type,BindingFlags)
+ [m]	FieldInfo GetField(Type,String)
+ [m]	FieldInfo GetField(Type,String,BindingFlags)
+ [m]	FieldInfo[] GetFields(Type)
+ [m]	FieldInfo[] GetFields(Type,BindingFlags)
+ [m]	Type[] GetGenericArguments(Type)
+ [m]	Type[] GetInterfaces(Type)
+ [m]	MemberInfo[] GetMember(Type,String)
+ [m]	MemberInfo[] GetMember(Type,String,BindingFlags)
+ [m]	MemberInfo[] GetMembers(Type)
+ [m]	MemberInfo[] GetMembers(Type,BindingFlags)
+ [m]	MethodInfo GetMethod(Type,String)
+ [m]	MethodInfo GetMethod(Type,String,BindingFlags)
+ [m]	MethodInfo GetMethod(Type,String,Type[])
+ [m]	MethodInfo[] GetMethods(Type)
+ [m]	MethodInfo[] GetMethods(Type,BindingFlags)
+ [m]	Type GetNestedType(Type,String,BindingFlags)
+ [m]	Type[] GetNestedTypes(Type,BindingFlags)
+ [m]	PropertyInfo[] GetProperties(Type)
+ [m]	PropertyInfo[] GetProperties(Type,BindingFlags)
+ [m]	PropertyInfo GetProperty(Type,String)
+ [m]	PropertyInfo GetProperty(Type,String,BindingFlags)
+ [m]	PropertyInfo GetProperty(Type,String,Type)
+ [m]	PropertyInfo GetProperty(Type,String,Type,Type[])
+ [m]	Boolean IsAssignableFrom(Type,Type)
+ [m]	Boolean IsInstanceOfType(Type,Object)

---------------------------------------
+ [a] System.Resources.ResourceManager.dll
ref: ./netstandard/packages/System.Resources.ResourceManager/ref/netstandard1.0/System.Resources.ResourceManager.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Resources.ResourceManager.dll

f [t] System.Resources.MissingManifestResourceException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Resources.NeutralResourcesLanguageAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_CultureName()

f [t] System.Resources.ResourceManager
+ [m]	Void .ctor(String,Assembly)
+ [m]	Void .ctor(Type)
+ [m]	String GetString(String)
+ [m]	String GetString(String,CultureInfo)

f [t] System.Resources.SatelliteContractVersionAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_Version()

---------------------------------------
+ [a] System.Runtime.dll
ref: ./netstandard/packages/System.Runtime/ref/netstandard1.5/System.Runtime.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Runtime.dll

f [t] System.Action
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke()
+ [m]	IAsyncResult BeginInvoke(AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Action`1
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(T)
+ [m]	IAsyncResult BeginInvoke(T,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Action`10
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Action`11
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Action`12
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Action`13
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Action`14
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Action`15
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Action`16
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Action`2
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(T1,T2)
+ [m]	IAsyncResult BeginInvoke(T1,T2,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Action`3
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(T1,T2,T3)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Action`4
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(T1,T2,T3,T4)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,T4,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Action`5
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(T1,T2,T3,T4,T5)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,T4,T5,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Action`6
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(T1,T2,T3,T4,T5,T6)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,T4,T5,T6,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Action`7
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(T1,T2,T3,T4,T5,T6,T7)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,T4,T5,T6,T7,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Action`8
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(T1,T2,T3,T4,T5,T6,T7,T8)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,T4,T5,T6,T7,T8,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Action`9
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(T1,T2,T3,T4,T5,T6,T7,T8,T9)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Activator
+ [m]	Object CreateInstance(Type)
+ [m]	Object CreateInstance(Type,Boolean)
+ [m]	Object CreateInstance(Type,Object[])
+ [m]	T CreateInstance()

f [t] System.ArgumentException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	Void .ctor(String,String)
+ [m]	Void .ctor(String,String,Exception)
+ [m]	String get_Message()
+ [m]	String get_ParamName()

f [t] System.ArgumentNullException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	Void .ctor(String,String)

f [t] System.ArgumentOutOfRangeException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	Void .ctor(String,Object,String)
+ [m]	Void .ctor(String,String)
+ [m]	Object get_ActualValue()
+ [m]	String get_Message()

f [t] System.ArithmeticException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Array
+ [m]	Void .ctor()
+ [m]	Int32 get_Length()
+ [m]	Int32 get_Rank()
+ [m]	Int32 System.Collections.ICollection.get_Count()
- [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
- [m]	Object System.Collections.ICollection.get_SyncRoot()
- [m]	Boolean System.Collections.IList.get_IsFixedSize()
- [m]	Boolean System.Collections.IList.get_IsReadOnly()
+ [m]	Object System.Collections.IList.get_Item(Int32)
+ [m]	Void System.Collections.IList.set_Item(Int32,Object)
+ [m]	Int32 BinarySearch(Array,Int32,Int32,Object)
+ [m]	Int32 BinarySearch(Array,Int32,Int32,Object,IComparer)
+ [m]	Int32 BinarySearch(Array,Object)
+ [m]	Int32 BinarySearch(Array,Object,IComparer)
+ [m]	Int32 BinarySearch(T[],T)
+ [m]	Int32 BinarySearch(T[],T,IComparer`1)
+ [m]	Int32 BinarySearch(T[],Int32,Int32,T)
+ [m]	Int32 BinarySearch(T[],Int32,Int32,T,IComparer`1)
+ [m]	Void Clear(Array,Int32,Int32)
+ [m]	Object Clone()
+ [m]	Void ConstrainedCopy(Array,Int32,Array,Int32,Int32)
+ [m]	Void Copy(Array,Array,Int32)
+ [m]	Void Copy(Array,Int32,Array,Int32,Int32)
+ [m]	Void CopyTo(Array,Int32)
+ [m]	Array CreateInstance(Type,Int32)
+ [m]	Array CreateInstance(Type,Int32[])
+ [m]	Array CreateInstance(Type,Int32[],Int32[])
+ [m]	T[] Empty()
+ [m]	Boolean Exists(T[],Predicate`1)
+ [m]	T Find(T[],Predicate`1)
+ [m]	T[] FindAll(T[],Predicate`1)
+ [m]	Int32 FindIndex(T[],Int32,Int32,Predicate`1)
+ [m]	Int32 FindIndex(T[],Int32,Predicate`1)
+ [m]	Int32 FindIndex(T[],Predicate`1)
+ [m]	T FindLast(T[],Predicate`1)
+ [m]	Int32 FindLastIndex(T[],Int32,Int32,Predicate`1)
+ [m]	Int32 FindLastIndex(T[],Int32,Predicate`1)
+ [m]	Int32 FindLastIndex(T[],Predicate`1)
+ [m]	IEnumerator GetEnumerator()
+ [m]	Int32 GetLength(Int32)
+ [m]	Int32 GetLowerBound(Int32)
+ [m]	Int32 GetUpperBound(Int32)
+ [m]	Object GetValue(Int32)
+ [m]	Object GetValue(Int32[])
+ [m]	Int32 IndexOf(Array,Object)
+ [m]	Int32 IndexOf(Array,Object,Int32)
+ [m]	Int32 IndexOf(Array,Object,Int32,Int32)
+ [m]	Int32 IndexOf(T[],T)
+ [m]	Int32 IndexOf(T[],T,Int32)
+ [m]	Int32 IndexOf(T[],T,Int32,Int32)
+ [m]	Void Initialize()
+ [m]	Int32 LastIndexOf(Array,Object)
+ [m]	Int32 LastIndexOf(Array,Object,Int32)
+ [m]	Int32 LastIndexOf(Array,Object,Int32,Int32)
+ [m]	Int32 LastIndexOf(T[],T)
+ [m]	Int32 LastIndexOf(T[],T,Int32)
+ [m]	Int32 LastIndexOf(T[],T,Int32,Int32)
+ [m]	Void Resize(T[]&,Int32)
+ [m]	Void Reverse(Array)
+ [m]	Void Reverse(Array,Int32,Int32)
+ [m]	Void SetValue(Object,Int32)
+ [m]	Void SetValue(Object,Int32[])
+ [m]	Void Sort(Array)
+ [m]	Void Sort(Array,Array)
+ [m]	Void Sort(Array,Array,IComparer)
+ [m]	Void Sort(Array,Array,Int32,Int32)
+ [m]	Void Sort(Array,Array,Int32,Int32,IComparer)
+ [m]	Void Sort(Array,IComparer)
+ [m]	Void Sort(Array,Int32,Int32)
+ [m]	Void Sort(Array,Int32,Int32,IComparer)
+ [m]	Void Sort(T[])
+ [m]	Void Sort(T[],IComparer`1)
+ [m]	Void Sort(T[],Comparison`1)
+ [m]	Void Sort(T[],Int32,Int32)
+ [m]	Void Sort(T[],Int32,Int32,IComparer`1)
+ [m]	Void Sort(TKey[],TValue[])
+ [m]	Void Sort(TKey[],TValue[],IComparer`1)
+ [m]	Void Sort(TKey[],TValue[],Int32,Int32)
+ [m]	Void Sort(TKey[],TValue[],Int32,Int32,IComparer`1)
+ [m]	Int32 System.Collections.IList.Add(Object)
+ [m]	Void System.Collections.IList.Clear()
+ [m]	Boolean System.Collections.IList.Contains(Object)
+ [m]	Int32 System.Collections.IList.IndexOf(Object)
+ [m]	Void System.Collections.IList.Insert(Int32,Object)
+ [m]	Void System.Collections.IList.Remove(Object)
+ [m]	Void System.Collections.IList.RemoveAt(Int32)
+ [m]	Int32 System.Collections.IStructuralComparable.CompareTo(Object,IComparer)
+ [m]	Boolean System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)
+ [m]	Int32 System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)
+ [m]	Boolean TrueForAll(T[],Predicate`1)

f [t] System.ArraySegment`1
+ [m]	Void .ctor(T[])
+ [m]	Void .ctor(T[],Int32,Int32)
+ [m]	T[] get_Array()
+ [m]	Int32 get_Count()
+ [m]	Int32 get_Offset()
+ [m]	Boolean System.Collections.Generic.ICollection<T>.get_IsReadOnly()
+ [m]	T System.Collections.Generic.IList<T>.get_Item(Int32)
+ [m]	Void System.Collections.Generic.IList<T>.set_Item(Int32,T)
+ [m]	T System.Collections.Generic.IReadOnlyList<T>.get_Item(Int32)
+ [m]	Boolean Equals(ArraySegment`1)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(ArraySegment`1,ArraySegment`1)
+ [m]	Boolean op_Inequality(ArraySegment`1,ArraySegment`1)
+ [m]	Void System.Collections.Generic.ICollection<T>.Add(T)
+ [m]	Void System.Collections.Generic.ICollection<T>.Clear()
+ [m]	Boolean System.Collections.Generic.ICollection<T>.Contains(T)
+ [m]	Void System.Collections.Generic.ICollection<T>.CopyTo(T[],Int32)
+ [m]	Boolean System.Collections.Generic.ICollection<T>.Remove(T)
+ [m]	IEnumerator`1 System.Collections.Generic.IEnumerable<T>.GetEnumerator()
+ [m]	Int32 System.Collections.Generic.IList<T>.IndexOf(T)
+ [m]	Void System.Collections.Generic.IList<T>.Insert(Int32,T)
+ [m]	Void System.Collections.Generic.IList<T>.RemoveAt(Int32)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()

f [t] System.ArrayTypeMismatchException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.AsyncCallback
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(IAsyncResult)
+ [m]	IAsyncResult BeginInvoke(IAsyncResult,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Attribute
+ [m]	Void .ctor()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()

f [t] System.AttributeTargets

f [t] System.AttributeUsageAttribute
+ [m]	Void .ctor(AttributeTargets)
+ [m]	Boolean get_AllowMultiple()
+ [m]	Void set_AllowMultiple(Boolean)
+ [m]	Boolean get_Inherited()
+ [m]	Void set_Inherited(Boolean)
+ [m]	AttributeTargets get_ValidOn()

f [t] System.BadImageFormatException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	Void .ctor(String,String)
+ [m]	Void .ctor(String,String,Exception)
+ [m]	String get_FileName()
+ [m]	String get_Message()
+ [m]	String ToString()

f [t] System.Boolean
+ [m]	Int32 CompareTo(Boolean)
+ [m]	Boolean Equals(Boolean)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean Parse(String)
- [m]	Int32 System.IComparable.CompareTo(Object)
- [m]	TypeCode System.IConvertible.GetTypeCode()
+ [m]	Boolean System.IConvertible.ToBoolean(IFormatProvider)
+ [m]	Byte System.IConvertible.ToByte(IFormatProvider)
+ [m]	Char System.IConvertible.ToChar(IFormatProvider)
+ [m]	DateTime System.IConvertible.ToDateTime(IFormatProvider)
+ [m]	Decimal System.IConvertible.ToDecimal(IFormatProvider)
+ [m]	Double System.IConvertible.ToDouble(IFormatProvider)
+ [m]	Int16 System.IConvertible.ToInt16(IFormatProvider)
+ [m]	Int32 System.IConvertible.ToInt32(IFormatProvider)
+ [m]	Int64 System.IConvertible.ToInt64(IFormatProvider)
+ [m]	SByte System.IConvertible.ToSByte(IFormatProvider)
+ [m]	Single System.IConvertible.ToSingle(IFormatProvider)
- [m]	String System.IConvertible.ToString(IFormatProvider)
+ [m]	Object System.IConvertible.ToType(Type,IFormatProvider)
+ [m]	UInt16 System.IConvertible.ToUInt16(IFormatProvider)
+ [m]	UInt32 System.IConvertible.ToUInt32(IFormatProvider)
+ [m]	UInt64 System.IConvertible.ToUInt64(IFormatProvider)
+ [m]	String ToString()
+ [m]	Boolean TryParse(String,Boolean&)

f [t] System.Buffer
+ [m]	Void BlockCopy(Array,Int32,Array,Int32,Int32)
+ [m]	Int32 ByteLength(Array)
+ [m]	Byte GetByte(Array,Int32)
+ [m]	Void MemoryCopy(Void*,Void*,Int64,Int64)
+ [m]	Void MemoryCopy(Void*,Void*,UInt64,UInt64)
+ [m]	Void SetByte(Array,Int32,Byte)

f [t] System.Byte
+ [m]	Int32 CompareTo(Byte)
+ [m]	Boolean Equals(Byte)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Byte Parse(String)
+ [m]	Byte Parse(String,NumberStyles)
+ [m]	Byte Parse(String,NumberStyles,IFormatProvider)
+ [m]	Byte Parse(String,IFormatProvider)
- [m]	Int32 System.IComparable.CompareTo(Object)
- [m]	TypeCode System.IConvertible.GetTypeCode()
+ [m]	Boolean System.IConvertible.ToBoolean(IFormatProvider)
+ [m]	Byte System.IConvertible.ToByte(IFormatProvider)
+ [m]	Char System.IConvertible.ToChar(IFormatProvider)
+ [m]	DateTime System.IConvertible.ToDateTime(IFormatProvider)
+ [m]	Decimal System.IConvertible.ToDecimal(IFormatProvider)
+ [m]	Double System.IConvertible.ToDouble(IFormatProvider)
+ [m]	Int16 System.IConvertible.ToInt16(IFormatProvider)
+ [m]	Int32 System.IConvertible.ToInt32(IFormatProvider)
+ [m]	Int64 System.IConvertible.ToInt64(IFormatProvider)
+ [m]	SByte System.IConvertible.ToSByte(IFormatProvider)
+ [m]	Single System.IConvertible.ToSingle(IFormatProvider)
+ [m]	Object System.IConvertible.ToType(Type,IFormatProvider)
+ [m]	UInt16 System.IConvertible.ToUInt16(IFormatProvider)
+ [m]	UInt32 System.IConvertible.ToUInt32(IFormatProvider)
+ [m]	UInt64 System.IConvertible.ToUInt64(IFormatProvider)
+ [m]	String ToString()
+ [m]	String ToString(IFormatProvider)
+ [m]	String ToString(String)
+ [m]	String ToString(String,IFormatProvider)
+ [m]	Boolean TryParse(String,Byte&)
+ [m]	Boolean TryParse(String,NumberStyles,IFormatProvider,Byte&)

f [t] System.Char
+ [m]	Int32 CompareTo(Char)
+ [m]	String ConvertFromUtf32(Int32)
+ [m]	Int32 ConvertToUtf32(Char,Char)
+ [m]	Int32 ConvertToUtf32(String,Int32)
+ [m]	Boolean Equals(Char)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Double GetNumericValue(Char)
+ [m]	Double GetNumericValue(String,Int32)
+ [m]	Boolean IsControl(Char)
+ [m]	Boolean IsControl(String,Int32)
+ [m]	Boolean IsDigit(Char)
+ [m]	Boolean IsDigit(String,Int32)
+ [m]	Boolean IsHighSurrogate(Char)
+ [m]	Boolean IsHighSurrogate(String,Int32)
+ [m]	Boolean IsLetter(Char)
+ [m]	Boolean IsLetter(String,Int32)
+ [m]	Boolean IsLetterOrDigit(Char)
+ [m]	Boolean IsLetterOrDigit(String,Int32)
+ [m]	Boolean IsLower(Char)
+ [m]	Boolean IsLower(String,Int32)
+ [m]	Boolean IsLowSurrogate(Char)
+ [m]	Boolean IsLowSurrogate(String,Int32)
+ [m]	Boolean IsNumber(Char)
+ [m]	Boolean IsNumber(String,Int32)
+ [m]	Boolean IsPunctuation(Char)
+ [m]	Boolean IsPunctuation(String,Int32)
+ [m]	Boolean IsSeparator(Char)
+ [m]	Boolean IsSeparator(String,Int32)
+ [m]	Boolean IsSurrogate(Char)
+ [m]	Boolean IsSurrogate(String,Int32)
+ [m]	Boolean IsSurrogatePair(Char,Char)
+ [m]	Boolean IsSurrogatePair(String,Int32)
+ [m]	Boolean IsSymbol(Char)
+ [m]	Boolean IsSymbol(String,Int32)
+ [m]	Boolean IsUpper(Char)
+ [m]	Boolean IsUpper(String,Int32)
+ [m]	Boolean IsWhiteSpace(Char)
+ [m]	Boolean IsWhiteSpace(String,Int32)
+ [m]	Char Parse(String)
- [m]	Int32 System.IComparable.CompareTo(Object)
- [m]	TypeCode System.IConvertible.GetTypeCode()
+ [m]	Boolean System.IConvertible.ToBoolean(IFormatProvider)
+ [m]	Byte System.IConvertible.ToByte(IFormatProvider)
+ [m]	Char System.IConvertible.ToChar(IFormatProvider)
+ [m]	DateTime System.IConvertible.ToDateTime(IFormatProvider)
+ [m]	Decimal System.IConvertible.ToDecimal(IFormatProvider)
+ [m]	Double System.IConvertible.ToDouble(IFormatProvider)
+ [m]	Int16 System.IConvertible.ToInt16(IFormatProvider)
+ [m]	Int32 System.IConvertible.ToInt32(IFormatProvider)
+ [m]	Int64 System.IConvertible.ToInt64(IFormatProvider)
+ [m]	SByte System.IConvertible.ToSByte(IFormatProvider)
+ [m]	Single System.IConvertible.ToSingle(IFormatProvider)
- [m]	String System.IConvertible.ToString(IFormatProvider)
+ [m]	Object System.IConvertible.ToType(Type,IFormatProvider)
+ [m]	UInt16 System.IConvertible.ToUInt16(IFormatProvider)
+ [m]	UInt32 System.IConvertible.ToUInt32(IFormatProvider)
+ [m]	UInt64 System.IConvertible.ToUInt64(IFormatProvider)
+ [m]	Char ToLower(Char)
+ [m]	Char ToLowerInvariant(Char)
+ [m]	String ToString()
+ [m]	String ToString(Char)
+ [m]	Char ToUpper(Char)
+ [m]	Char ToUpperInvariant(Char)
+ [m]	Boolean TryParse(String,Char&)

f [t] System.CLSCompliantAttribute
+ [m]	Void .ctor(Boolean)
+ [m]	Boolean get_IsCompliant()

f [t] System.Comparison`1
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Int32 Invoke(T,T)
+ [m]	IAsyncResult BeginInvoke(T,T,AsyncCallback,Object)
+ [m]	Int32 EndInvoke(IAsyncResult)

f [t] System.DateTime
+ [m]	Void .ctor(Int32,Int32,Int32)
+ [m]	Void .ctor(Int32,Int32,Int32,Int32,Int32,Int32)
+ [m]	Void .ctor(Int32,Int32,Int32,Int32,Int32,Int32,DateTimeKind)
+ [m]	Void .ctor(Int32,Int32,Int32,Int32,Int32,Int32,Int32)
+ [m]	Void .ctor(Int32,Int32,Int32,Int32,Int32,Int32,Int32,DateTimeKind)
+ [m]	Void .ctor(Int64)
+ [m]	Void .ctor(Int64,DateTimeKind)
+ [m]	DateTime get_Date()
+ [m]	Int32 get_Day()
+ [m]	DayOfWeek get_DayOfWeek()
+ [m]	Int32 get_DayOfYear()
+ [m]	Int32 get_Hour()
+ [m]	DateTimeKind get_Kind()
+ [m]	Int32 get_Millisecond()
+ [m]	Int32 get_Minute()
+ [m]	Int32 get_Month()
+ [m]	DateTime get_Now()
+ [m]	Int32 get_Second()
+ [m]	Int64 get_Ticks()
+ [m]	TimeSpan get_TimeOfDay()
+ [m]	DateTime get_Today()
+ [m]	DateTime get_UtcNow()
+ [m]	Int32 get_Year()
+ [m]	DateTime Add(TimeSpan)
+ [m]	DateTime AddDays(Double)
+ [m]	DateTime AddHours(Double)
+ [m]	DateTime AddMilliseconds(Double)
+ [m]	DateTime AddMinutes(Double)
+ [m]	DateTime AddMonths(Int32)
+ [m]	DateTime AddSeconds(Double)
+ [m]	DateTime AddTicks(Int64)
+ [m]	DateTime AddYears(Int32)
+ [m]	Int32 Compare(DateTime,DateTime)
+ [m]	Int32 CompareTo(DateTime)
+ [m]	Int32 DaysInMonth(Int32,Int32)
+ [m]	Boolean Equals(DateTime)
+ [m]	Boolean Equals(DateTime,DateTime)
+ [m]	Boolean Equals(Object)
+ [m]	DateTime FromBinary(Int64)
+ [m]	DateTime FromFileTime(Int64)
+ [m]	DateTime FromFileTimeUtc(Int64)
+ [m]	String[] GetDateTimeFormats()
+ [m]	String[] GetDateTimeFormats(Char)
+ [m]	String[] GetDateTimeFormats(Char,IFormatProvider)
+ [m]	String[] GetDateTimeFormats(IFormatProvider)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean IsDaylightSavingTime()
+ [m]	Boolean IsLeapYear(Int32)
+ [m]	DateTime op_Addition(DateTime,TimeSpan)
+ [m]	Boolean op_Equality(DateTime,DateTime)
+ [m]	Boolean op_GreaterThan(DateTime,DateTime)
+ [m]	Boolean op_GreaterThanOrEqual(DateTime,DateTime)
+ [m]	Boolean op_Inequality(DateTime,DateTime)
+ [m]	Boolean op_LessThan(DateTime,DateTime)
+ [m]	Boolean op_LessThanOrEqual(DateTime,DateTime)
+ [m]	TimeSpan op_Subtraction(DateTime,DateTime)
+ [m]	DateTime op_Subtraction(DateTime,TimeSpan)
+ [m]	DateTime Parse(String)
+ [m]	DateTime Parse(String,IFormatProvider)
+ [m]	DateTime Parse(String,IFormatProvider,DateTimeStyles)
+ [m]	DateTime ParseExact(String,String,IFormatProvider)
+ [m]	DateTime ParseExact(String,String,IFormatProvider,DateTimeStyles)
+ [m]	DateTime ParseExact(String,String[],IFormatProvider,DateTimeStyles)
+ [m]	DateTime SpecifyKind(DateTime,DateTimeKind)
+ [m]	TimeSpan Subtract(DateTime)
+ [m]	DateTime Subtract(TimeSpan)
- [m]	Int32 System.IComparable.CompareTo(Object)
- [m]	TypeCode System.IConvertible.GetTypeCode()
+ [m]	Boolean System.IConvertible.ToBoolean(IFormatProvider)
+ [m]	Byte System.IConvertible.ToByte(IFormatProvider)
+ [m]	Char System.IConvertible.ToChar(IFormatProvider)
+ [m]	DateTime System.IConvertible.ToDateTime(IFormatProvider)
+ [m]	Decimal System.IConvertible.ToDecimal(IFormatProvider)
+ [m]	Double System.IConvertible.ToDouble(IFormatProvider)
+ [m]	Int16 System.IConvertible.ToInt16(IFormatProvider)
+ [m]	Int32 System.IConvertible.ToInt32(IFormatProvider)
+ [m]	Int64 System.IConvertible.ToInt64(IFormatProvider)
+ [m]	SByte System.IConvertible.ToSByte(IFormatProvider)
+ [m]	Single System.IConvertible.ToSingle(IFormatProvider)
+ [m]	Object System.IConvertible.ToType(Type,IFormatProvider)
+ [m]	UInt16 System.IConvertible.ToUInt16(IFormatProvider)
+ [m]	UInt32 System.IConvertible.ToUInt32(IFormatProvider)
+ [m]	UInt64 System.IConvertible.ToUInt64(IFormatProvider)
+ [m]	Int64 ToBinary()
+ [m]	Int64 ToFileTime()
+ [m]	Int64 ToFileTimeUtc()
+ [m]	DateTime ToLocalTime()
+ [m]	String ToString()
+ [m]	String ToString(IFormatProvider)
+ [m]	String ToString(String)
+ [m]	String ToString(String,IFormatProvider)
+ [m]	DateTime ToUniversalTime()
+ [m]	Boolean TryParse(String,DateTime&)
+ [m]	Boolean TryParse(String,IFormatProvider,DateTimeStyles,DateTime&)
+ [m]	Boolean TryParseExact(String,String,IFormatProvider,DateTimeStyles,DateTime&)
+ [m]	Boolean TryParseExact(String,String[],IFormatProvider,DateTimeStyles,DateTime&)

f [t] System.DateTimeKind

f [t] System.DateTimeOffset
+ [m]	Void .ctor(DateTime)
+ [m]	Void .ctor(DateTime,TimeSpan)
+ [m]	Void .ctor(Int32,Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)
+ [m]	Void .ctor(Int32,Int32,Int32,Int32,Int32,Int32,TimeSpan)
+ [m]	Void .ctor(Int64,TimeSpan)
+ [m]	DateTime get_Date()
+ [m]	DateTime get_DateTime()
+ [m]	Int32 get_Day()
+ [m]	DayOfWeek get_DayOfWeek()
+ [m]	Int32 get_DayOfYear()
+ [m]	Int32 get_Hour()
+ [m]	DateTime get_LocalDateTime()
+ [m]	Int32 get_Millisecond()
+ [m]	Int32 get_Minute()
+ [m]	Int32 get_Month()
+ [m]	DateTimeOffset get_Now()
+ [m]	TimeSpan get_Offset()
+ [m]	Int32 get_Second()
+ [m]	Int64 get_Ticks()
+ [m]	TimeSpan get_TimeOfDay()
+ [m]	DateTime get_UtcDateTime()
+ [m]	DateTimeOffset get_UtcNow()
+ [m]	Int64 get_UtcTicks()
+ [m]	Int32 get_Year()
+ [m]	DateTimeOffset Add(TimeSpan)
+ [m]	DateTimeOffset AddDays(Double)
+ [m]	DateTimeOffset AddHours(Double)
+ [m]	DateTimeOffset AddMilliseconds(Double)
+ [m]	DateTimeOffset AddMinutes(Double)
+ [m]	DateTimeOffset AddMonths(Int32)
+ [m]	DateTimeOffset AddSeconds(Double)
+ [m]	DateTimeOffset AddTicks(Int64)
+ [m]	DateTimeOffset AddYears(Int32)
+ [m]	Int32 Compare(DateTimeOffset,DateTimeOffset)
+ [m]	Int32 CompareTo(DateTimeOffset)
+ [m]	Boolean Equals(DateTimeOffset)
+ [m]	Boolean Equals(DateTimeOffset,DateTimeOffset)
+ [m]	Boolean Equals(Object)
+ [m]	Boolean EqualsExact(DateTimeOffset)
+ [m]	DateTimeOffset FromFileTime(Int64)
+ [m]	DateTimeOffset FromUnixTimeMilliseconds(Int64)
+ [m]	DateTimeOffset FromUnixTimeSeconds(Int64)
+ [m]	Int32 GetHashCode()
+ [m]	DateTimeOffset op_Addition(DateTimeOffset,TimeSpan)
+ [m]	Boolean op_Equality(DateTimeOffset,DateTimeOffset)
+ [m]	Boolean op_GreaterThan(DateTimeOffset,DateTimeOffset)
+ [m]	Boolean op_GreaterThanOrEqual(DateTimeOffset,DateTimeOffset)
+ [m]	DateTimeOffset op_Implicit(DateTime)
+ [m]	Boolean op_Inequality(DateTimeOffset,DateTimeOffset)
+ [m]	Boolean op_LessThan(DateTimeOffset,DateTimeOffset)
+ [m]	Boolean op_LessThanOrEqual(DateTimeOffset,DateTimeOffset)
+ [m]	TimeSpan op_Subtraction(DateTimeOffset,DateTimeOffset)
+ [m]	DateTimeOffset op_Subtraction(DateTimeOffset,TimeSpan)
+ [m]	DateTimeOffset Parse(String)
+ [m]	DateTimeOffset Parse(String,IFormatProvider)
+ [m]	DateTimeOffset Parse(String,IFormatProvider,DateTimeStyles)
+ [m]	DateTimeOffset ParseExact(String,String,IFormatProvider)
+ [m]	DateTimeOffset ParseExact(String,String,IFormatProvider,DateTimeStyles)
+ [m]	DateTimeOffset ParseExact(String,String[],IFormatProvider,DateTimeStyles)
+ [m]	TimeSpan Subtract(DateTimeOffset)
+ [m]	DateTimeOffset Subtract(TimeSpan)
+ [m]	Int32 System.IComparable.CompareTo(Object)
+ [m]	Int64 ToFileTime()
+ [m]	DateTimeOffset ToLocalTime()
+ [m]	DateTimeOffset ToOffset(TimeSpan)
+ [m]	String ToString()
+ [m]	String ToString(IFormatProvider)
+ [m]	String ToString(String)
+ [m]	String ToString(String,IFormatProvider)
+ [m]	DateTimeOffset ToUniversalTime()
+ [m]	Int64 ToUnixTimeMilliseconds()
+ [m]	Int64 ToUnixTimeSeconds()
+ [m]	Boolean TryParse(String,DateTimeOffset&)
+ [m]	Boolean TryParse(String,IFormatProvider,DateTimeStyles,DateTimeOffset&)
+ [m]	Boolean TryParseExact(String,String,IFormatProvider,DateTimeStyles,DateTimeOffset&)
+ [m]	Boolean TryParseExact(String,String[],IFormatProvider,DateTimeStyles,DateTimeOffset&)

f [t] System.DayOfWeek

f [t] System.Decimal
+ [m]	Void .ctor(Double)
+ [m]	Void .ctor(Int32)
+ [m]	Void .ctor(Int32,Int32,Int32,Boolean,Byte)
+ [m]	Void .ctor(Int32[])
+ [m]	Void .ctor(Int64)
+ [m]	Void .ctor(Single)
+ [m]	Void .ctor(UInt32)
+ [m]	Void .ctor(UInt64)
+ [m]	Decimal Add(Decimal,Decimal)
+ [m]	Decimal Ceiling(Decimal)
+ [m]	Int32 Compare(Decimal,Decimal)
+ [m]	Int32 CompareTo(Decimal)
+ [m]	Decimal Divide(Decimal,Decimal)
+ [m]	Boolean Equals(Decimal)
+ [m]	Boolean Equals(Decimal,Decimal)
+ [m]	Boolean Equals(Object)
+ [m]	Decimal Floor(Decimal)
+ [m]	Int32[] GetBits(Decimal)
+ [m]	Int32 GetHashCode()
+ [m]	Decimal Multiply(Decimal,Decimal)
+ [m]	Decimal Negate(Decimal)
+ [m]	Decimal op_Addition(Decimal,Decimal)
+ [m]	Decimal op_Decrement(Decimal)
+ [m]	Decimal op_Division(Decimal,Decimal)
+ [m]	Boolean op_Equality(Decimal,Decimal)
+ [m]	Byte op_Explicit(Decimal)
+ [m]	Char op_Explicit(Decimal)
+ [m]	Double op_Explicit(Decimal)
+ [m]	Int16 op_Explicit(Decimal)
+ [m]	Int32 op_Explicit(Decimal)
+ [m]	Int64 op_Explicit(Decimal)
+ [m]	SByte op_Explicit(Decimal)
+ [m]	Single op_Explicit(Decimal)
+ [m]	UInt16 op_Explicit(Decimal)
+ [m]	UInt32 op_Explicit(Decimal)
+ [m]	UInt64 op_Explicit(Decimal)
+ [m]	Decimal op_Explicit(Double)
+ [m]	Decimal op_Explicit(Single)
+ [m]	Boolean op_GreaterThan(Decimal,Decimal)
+ [m]	Boolean op_GreaterThanOrEqual(Decimal,Decimal)
+ [m]	Decimal op_Implicit(Byte)
+ [m]	Decimal op_Implicit(Char)
+ [m]	Decimal op_Implicit(Int16)
+ [m]	Decimal op_Implicit(Int32)
+ [m]	Decimal op_Implicit(Int64)
+ [m]	Decimal op_Implicit(SByte)
+ [m]	Decimal op_Implicit(UInt16)
+ [m]	Decimal op_Implicit(UInt32)
+ [m]	Decimal op_Implicit(UInt64)
+ [m]	Decimal op_Increment(Decimal)
+ [m]	Boolean op_Inequality(Decimal,Decimal)
+ [m]	Boolean op_LessThan(Decimal,Decimal)
+ [m]	Boolean op_LessThanOrEqual(Decimal,Decimal)
+ [m]	Decimal op_Modulus(Decimal,Decimal)
+ [m]	Decimal op_Multiply(Decimal,Decimal)
+ [m]	Decimal op_Subtraction(Decimal,Decimal)
+ [m]	Decimal op_UnaryNegation(Decimal)
+ [m]	Decimal op_UnaryPlus(Decimal)
+ [m]	Decimal Parse(String)
+ [m]	Decimal Parse(String,NumberStyles)
+ [m]	Decimal Parse(String,NumberStyles,IFormatProvider)
+ [m]	Decimal Parse(String,IFormatProvider)
+ [m]	Decimal Remainder(Decimal,Decimal)
+ [m]	Decimal Subtract(Decimal,Decimal)
- [m]	Int32 System.IComparable.CompareTo(Object)
- [m]	TypeCode System.IConvertible.GetTypeCode()
+ [m]	Boolean System.IConvertible.ToBoolean(IFormatProvider)
+ [m]	Byte System.IConvertible.ToByte(IFormatProvider)
+ [m]	Char System.IConvertible.ToChar(IFormatProvider)
+ [m]	DateTime System.IConvertible.ToDateTime(IFormatProvider)
+ [m]	Decimal System.IConvertible.ToDecimal(IFormatProvider)
+ [m]	Double System.IConvertible.ToDouble(IFormatProvider)
+ [m]	Int16 System.IConvertible.ToInt16(IFormatProvider)
+ [m]	Int32 System.IConvertible.ToInt32(IFormatProvider)
+ [m]	Int64 System.IConvertible.ToInt64(IFormatProvider)
+ [m]	SByte System.IConvertible.ToSByte(IFormatProvider)
+ [m]	Single System.IConvertible.ToSingle(IFormatProvider)
+ [m]	Object System.IConvertible.ToType(Type,IFormatProvider)
+ [m]	UInt16 System.IConvertible.ToUInt16(IFormatProvider)
+ [m]	UInt32 System.IConvertible.ToUInt32(IFormatProvider)
+ [m]	UInt64 System.IConvertible.ToUInt64(IFormatProvider)
+ [m]	Byte ToByte(Decimal)
+ [m]	Double ToDouble(Decimal)
+ [m]	Int16 ToInt16(Decimal)
+ [m]	Int32 ToInt32(Decimal)
+ [m]	Int64 ToInt64(Decimal)
+ [m]	SByte ToSByte(Decimal)
+ [m]	Single ToSingle(Decimal)
+ [m]	String ToString()
+ [m]	String ToString(IFormatProvider)
+ [m]	String ToString(String)
+ [m]	String ToString(String,IFormatProvider)
+ [m]	UInt16 ToUInt16(Decimal)
+ [m]	UInt32 ToUInt32(Decimal)
+ [m]	UInt64 ToUInt64(Decimal)
+ [m]	Decimal Truncate(Decimal)
+ [m]	Boolean TryParse(String,Decimal&)
+ [m]	Boolean TryParse(String,NumberStyles,IFormatProvider,Decimal&)

f [t] System.Delegate
- [m]	Void .ctor()
+ [m]	Object get_Target()
+ [m]	Delegate Combine(Delegate,Delegate)
+ [m]	Delegate Combine(Delegate[])
+ [m]	Object DynamicInvoke(Object[])
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Delegate[] GetInvocationList()
+ [m]	Boolean op_Equality(Delegate,Delegate)
+ [m]	Boolean op_Inequality(Delegate,Delegate)
+ [m]	Delegate Remove(Delegate,Delegate)
+ [m]	Delegate RemoveAll(Delegate,Delegate)

f [t] System.DivideByZeroException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Double
+ [m]	Int32 CompareTo(Double)
+ [m]	Boolean Equals(Double)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean IsInfinity(Double)
+ [m]	Boolean IsNaN(Double)
+ [m]	Boolean IsNegativeInfinity(Double)
+ [m]	Boolean IsPositiveInfinity(Double)
+ [m]	Boolean op_Equality(Double,Double)
+ [m]	Boolean op_GreaterThan(Double,Double)
+ [m]	Boolean op_GreaterThanOrEqual(Double,Double)
+ [m]	Boolean op_Inequality(Double,Double)
+ [m]	Boolean op_LessThan(Double,Double)
+ [m]	Boolean op_LessThanOrEqual(Double,Double)
+ [m]	Double Parse(String)
+ [m]	Double Parse(String,NumberStyles)
+ [m]	Double Parse(String,NumberStyles,IFormatProvider)
+ [m]	Double Parse(String,IFormatProvider)
- [m]	Int32 System.IComparable.CompareTo(Object)
- [m]	TypeCode System.IConvertible.GetTypeCode()
+ [m]	Boolean System.IConvertible.ToBoolean(IFormatProvider)
+ [m]	Byte System.IConvertible.ToByte(IFormatProvider)
+ [m]	Char System.IConvertible.ToChar(IFormatProvider)
+ [m]	DateTime System.IConvertible.ToDateTime(IFormatProvider)
+ [m]	Decimal System.IConvertible.ToDecimal(IFormatProvider)
+ [m]	Double System.IConvertible.ToDouble(IFormatProvider)
+ [m]	Int16 System.IConvertible.ToInt16(IFormatProvider)
+ [m]	Int32 System.IConvertible.ToInt32(IFormatProvider)
+ [m]	Int64 System.IConvertible.ToInt64(IFormatProvider)
+ [m]	SByte System.IConvertible.ToSByte(IFormatProvider)
+ [m]	Single System.IConvertible.ToSingle(IFormatProvider)
+ [m]	Object System.IConvertible.ToType(Type,IFormatProvider)
+ [m]	UInt16 System.IConvertible.ToUInt16(IFormatProvider)
+ [m]	UInt32 System.IConvertible.ToUInt32(IFormatProvider)
+ [m]	UInt64 System.IConvertible.ToUInt64(IFormatProvider)
+ [m]	String ToString()
+ [m]	String ToString(IFormatProvider)
+ [m]	String ToString(String)
+ [m]	String ToString(String,IFormatProvider)
+ [m]	Boolean TryParse(String,Double&)
+ [m]	Boolean TryParse(String,NumberStyles,IFormatProvider,Double&)

f [t] System.Enum
+ [m]	Void .ctor()
+ [m]	Int32 CompareTo(Object)
+ [m]	Boolean Equals(Object)
+ [m]	String Format(Type,Object,String)
+ [m]	Int32 GetHashCode()
+ [m]	String GetName(Type,Object)
+ [m]	String[] GetNames(Type)
+ [m]	Type GetUnderlyingType(Type)
+ [m]	Array GetValues(Type)
+ [m]	Boolean HasFlag(Enum)
+ [m]	Boolean IsDefined(Type,Object)
+ [m]	Object Parse(Type,String)
+ [m]	Object Parse(Type,String,Boolean)
- [m]	TypeCode System.IConvertible.GetTypeCode()
+ [m]	Boolean System.IConvertible.ToBoolean(IFormatProvider)
+ [m]	Byte System.IConvertible.ToByte(IFormatProvider)
+ [m]	Char System.IConvertible.ToChar(IFormatProvider)
+ [m]	DateTime System.IConvertible.ToDateTime(IFormatProvider)
+ [m]	Decimal System.IConvertible.ToDecimal(IFormatProvider)
+ [m]	Double System.IConvertible.ToDouble(IFormatProvider)
+ [m]	Int16 System.IConvertible.ToInt16(IFormatProvider)
+ [m]	Int32 System.IConvertible.ToInt32(IFormatProvider)
+ [m]	Int64 System.IConvertible.ToInt64(IFormatProvider)
+ [m]	SByte System.IConvertible.ToSByte(IFormatProvider)
+ [m]	Single System.IConvertible.ToSingle(IFormatProvider)
- [m]	String System.IConvertible.ToString(IFormatProvider)
+ [m]	Object System.IConvertible.ToType(Type,IFormatProvider)
+ [m]	UInt16 System.IConvertible.ToUInt16(IFormatProvider)
+ [m]	UInt32 System.IConvertible.ToUInt32(IFormatProvider)
+ [m]	UInt64 System.IConvertible.ToUInt64(IFormatProvider)
- [m]	String System.IFormattable.ToString(String,IFormatProvider)
+ [m]	Object ToObject(Type,Object)
+ [m]	String ToString()
+ [m]	String ToString(String)
+ [m]	Boolean TryParse(String,TEnum&)
+ [m]	Boolean TryParse(String,Boolean,TEnum&)

f [t] System.EventArgs
+ [m]	Void .ctor()

f [t] System.EventHandler
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object,EventArgs)
+ [m]	IAsyncResult BeginInvoke(Object,EventArgs,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.EventHandler`1
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object,TEventArgs)
+ [m]	IAsyncResult BeginInvoke(Object,TEventArgs,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Exception
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	IDictionary get_Data()
+ [m]	String get_HelpLink()
+ [m]	Void set_HelpLink(String)
+ [m]	Int32 get_HResult()
+ [m]	Void set_HResult(Int32)
+ [m]	Exception get_InnerException()
+ [m]	String get_Message()
+ [m]	String get_Source()
+ [m]	Void set_Source(String)
+ [m]	String get_StackTrace()
+ [m]	Exception GetBaseException()
+ [m]	String ToString()

f [t] System.FieldAccessException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.FlagsAttribute
+ [m]	Void .ctor()

f [t] System.FormatException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.FormattableString
+ [m]	Void .ctor()
+ [m]	Int32 get_ArgumentCount()
+ [m]	String get_Format()
+ [m]	Object GetArgument(Int32)
+ [m]	Object[] GetArguments()
+ [m]	String Invariant(FormattableString)
+ [m]	String System.IFormattable.ToString(String,IFormatProvider)
+ [m]	String ToString()
+ [m]	String ToString(IFormatProvider)

f [t] System.Func`1
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	TResult Invoke()
+ [m]	IAsyncResult BeginInvoke(AsyncCallback,Object)
+ [m]	TResult EndInvoke(IAsyncResult)

f [t] System.Func`10
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	TResult Invoke(T1,T2,T3,T4,T5,T6,T7,T8,T9)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,AsyncCallback,Object)
+ [m]	TResult EndInvoke(IAsyncResult)

f [t] System.Func`11
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	TResult Invoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,AsyncCallback,Object)
+ [m]	TResult EndInvoke(IAsyncResult)

f [t] System.Func`12
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	TResult Invoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,AsyncCallback,Object)
+ [m]	TResult EndInvoke(IAsyncResult)

f [t] System.Func`13
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	TResult Invoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,AsyncCallback,Object)
+ [m]	TResult EndInvoke(IAsyncResult)

f [t] System.Func`14
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	TResult Invoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,AsyncCallback,Object)
+ [m]	TResult EndInvoke(IAsyncResult)

f [t] System.Func`15
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	TResult Invoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,AsyncCallback,Object)
+ [m]	TResult EndInvoke(IAsyncResult)

f [t] System.Func`16
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	TResult Invoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,AsyncCallback,Object)
+ [m]	TResult EndInvoke(IAsyncResult)

f [t] System.Func`17
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	TResult Invoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,T16,AsyncCallback,Object)
+ [m]	TResult EndInvoke(IAsyncResult)

f [t] System.Func`2
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	TResult Invoke(T)
+ [m]	IAsyncResult BeginInvoke(T,AsyncCallback,Object)
+ [m]	TResult EndInvoke(IAsyncResult)

f [t] System.Func`3
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	TResult Invoke(T1,T2)
+ [m]	IAsyncResult BeginInvoke(T1,T2,AsyncCallback,Object)
+ [m]	TResult EndInvoke(IAsyncResult)

f [t] System.Func`4
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	TResult Invoke(T1,T2,T3)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,AsyncCallback,Object)
+ [m]	TResult EndInvoke(IAsyncResult)

f [t] System.Func`5
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	TResult Invoke(T1,T2,T3,T4)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,T4,AsyncCallback,Object)
+ [m]	TResult EndInvoke(IAsyncResult)

f [t] System.Func`6
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	TResult Invoke(T1,T2,T3,T4,T5)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,T4,T5,AsyncCallback,Object)
+ [m]	TResult EndInvoke(IAsyncResult)

f [t] System.Func`7
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	TResult Invoke(T1,T2,T3,T4,T5,T6)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,T4,T5,T6,AsyncCallback,Object)
+ [m]	TResult EndInvoke(IAsyncResult)

f [t] System.Func`8
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	TResult Invoke(T1,T2,T3,T4,T5,T6,T7)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,T4,T5,T6,T7,AsyncCallback,Object)
+ [m]	TResult EndInvoke(IAsyncResult)

f [t] System.Func`9
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	TResult Invoke(T1,T2,T3,T4,T5,T6,T7,T8)
+ [m]	IAsyncResult BeginInvoke(T1,T2,T3,T4,T5,T6,T7,T8,AsyncCallback,Object)
+ [m]	TResult EndInvoke(IAsyncResult)

f [t] System.GC
+ [m]	Int32 get_MaxGeneration()
+ [m]	Void AddMemoryPressure(Int64)
+ [m]	Void Collect()
+ [m]	Void Collect(Int32)
+ [m]	Void Collect(Int32,GCCollectionMode)
+ [m]	Void Collect(Int32,GCCollectionMode,Boolean)
+ [m]	Int32 CollectionCount(Int32)
+ [m]	Int32 GetGeneration(Object)
+ [m]	Int64 GetTotalMemory(Boolean)
+ [m]	Void KeepAlive(Object)
+ [m]	Void RemoveMemoryPressure(Int64)
+ [m]	Void ReRegisterForFinalize(Object)
+ [m]	Void SuppressFinalize(Object)
+ [m]	Void WaitForPendingFinalizers()

f [t] System.GCCollectionMode

f [t] System.Guid
+ [m]	Void .ctor(Byte[])
+ [m]	Void .ctor(Int32,Int16,Int16,Byte,Byte,Byte,Byte,Byte,Byte,Byte,Byte)
+ [m]	Void .ctor(Int32,Int16,Int16,Byte[])
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(UInt32,UInt16,UInt16,Byte,Byte,Byte,Byte,Byte,Byte,Byte,Byte)
+ [m]	Int32 CompareTo(Guid)
+ [m]	Boolean Equals(Guid)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Guid NewGuid()
+ [m]	Boolean op_Equality(Guid,Guid)
+ [m]	Boolean op_Inequality(Guid,Guid)
+ [m]	Guid Parse(String)
+ [m]	Guid ParseExact(String,String)
- [m]	Int32 System.IComparable.CompareTo(Object)
- [m]	String System.IFormattable.ToString(String,IFormatProvider)
+ [m]	Byte[] ToByteArray()
+ [m]	String ToString()
+ [m]	String ToString(String)
+ [m]	Boolean TryParse(String,Guid&)
+ [m]	Boolean TryParseExact(String,String,Guid&)

f [t] System.IAsyncResult
+ [m]	Object get_AsyncState()
+ [m]	WaitHandle get_AsyncWaitHandle()
+ [m]	Boolean get_CompletedSynchronously()
+ [m]	Boolean get_IsCompleted()

f [t] System.IComparable
+ [m]	Int32 CompareTo(Object)

f [t] System.IComparable`1
+ [m]	Int32 CompareTo(T)

f [t] System.IConvertible
+ [m]	TypeCode GetTypeCode()
+ [m]	Boolean ToBoolean(IFormatProvider)
+ [m]	Byte ToByte(IFormatProvider)
+ [m]	Char ToChar(IFormatProvider)
+ [m]	DateTime ToDateTime(IFormatProvider)
+ [m]	Decimal ToDecimal(IFormatProvider)
+ [m]	Double ToDouble(IFormatProvider)
+ [m]	Int16 ToInt16(IFormatProvider)
+ [m]	Int32 ToInt32(IFormatProvider)
+ [m]	Int64 ToInt64(IFormatProvider)
+ [m]	SByte ToSByte(IFormatProvider)
+ [m]	Single ToSingle(IFormatProvider)
+ [m]	String ToString(IFormatProvider)
+ [m]	Object ToType(Type,IFormatProvider)
+ [m]	UInt16 ToUInt16(IFormatProvider)
+ [m]	UInt32 ToUInt32(IFormatProvider)
+ [m]	UInt64 ToUInt64(IFormatProvider)

f [t] System.ICustomFormatter
+ [m]	String Format(String,Object,IFormatProvider)

f [t] System.IDisposable
+ [m]	Void Dispose()

f [t] System.IEquatable`1
+ [m]	Boolean Equals(T)

f [t] System.IFormatProvider
+ [m]	Object GetFormat(Type)

f [t] System.IFormattable
+ [m]	String ToString(String,IFormatProvider)

f [t] System.IndexOutOfRangeException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.InsufficientExecutionStackException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Int16
+ [m]	Int32 CompareTo(Int16)
+ [m]	Boolean Equals(Int16)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Int16 Parse(String)
+ [m]	Int16 Parse(String,NumberStyles)
+ [m]	Int16 Parse(String,NumberStyles,IFormatProvider)
+ [m]	Int16 Parse(String,IFormatProvider)
- [m]	Int32 System.IComparable.CompareTo(Object)
- [m]	TypeCode System.IConvertible.GetTypeCode()
+ [m]	Boolean System.IConvertible.ToBoolean(IFormatProvider)
+ [m]	Byte System.IConvertible.ToByte(IFormatProvider)
+ [m]	Char System.IConvertible.ToChar(IFormatProvider)
+ [m]	DateTime System.IConvertible.ToDateTime(IFormatProvider)
+ [m]	Decimal System.IConvertible.ToDecimal(IFormatProvider)
+ [m]	Double System.IConvertible.ToDouble(IFormatProvider)
+ [m]	Int16 System.IConvertible.ToInt16(IFormatProvider)
+ [m]	Int32 System.IConvertible.ToInt32(IFormatProvider)
+ [m]	Int64 System.IConvertible.ToInt64(IFormatProvider)
+ [m]	SByte System.IConvertible.ToSByte(IFormatProvider)
+ [m]	Single System.IConvertible.ToSingle(IFormatProvider)
+ [m]	Object System.IConvertible.ToType(Type,IFormatProvider)
+ [m]	UInt16 System.IConvertible.ToUInt16(IFormatProvider)
+ [m]	UInt32 System.IConvertible.ToUInt32(IFormatProvider)
+ [m]	UInt64 System.IConvertible.ToUInt64(IFormatProvider)
+ [m]	String ToString()
+ [m]	String ToString(IFormatProvider)
+ [m]	String ToString(String)
+ [m]	String ToString(String,IFormatProvider)
+ [m]	Boolean TryParse(String,NumberStyles,IFormatProvider,Int16&)
+ [m]	Boolean TryParse(String,Int16&)

f [t] System.Int32
+ [m]	Int32 CompareTo(Int32)
+ [m]	Boolean Equals(Int32)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Int32 Parse(String)
+ [m]	Int32 Parse(String,NumberStyles)
+ [m]	Int32 Parse(String,NumberStyles,IFormatProvider)
+ [m]	Int32 Parse(String,IFormatProvider)
- [m]	Int32 System.IComparable.CompareTo(Object)
- [m]	TypeCode System.IConvertible.GetTypeCode()
+ [m]	Boolean System.IConvertible.ToBoolean(IFormatProvider)
+ [m]	Byte System.IConvertible.ToByte(IFormatProvider)
+ [m]	Char System.IConvertible.ToChar(IFormatProvider)
+ [m]	DateTime System.IConvertible.ToDateTime(IFormatProvider)
+ [m]	Decimal System.IConvertible.ToDecimal(IFormatProvider)
+ [m]	Double System.IConvertible.ToDouble(IFormatProvider)
+ [m]	Int16 System.IConvertible.ToInt16(IFormatProvider)
+ [m]	Int32 System.IConvertible.ToInt32(IFormatProvider)
+ [m]	Int64 System.IConvertible.ToInt64(IFormatProvider)
+ [m]	SByte System.IConvertible.ToSByte(IFormatProvider)
+ [m]	Single System.IConvertible.ToSingle(IFormatProvider)
+ [m]	Object System.IConvertible.ToType(Type,IFormatProvider)
+ [m]	UInt16 System.IConvertible.ToUInt16(IFormatProvider)
+ [m]	UInt32 System.IConvertible.ToUInt32(IFormatProvider)
+ [m]	UInt64 System.IConvertible.ToUInt64(IFormatProvider)
+ [m]	String ToString()
+ [m]	String ToString(IFormatProvider)
+ [m]	String ToString(String)
+ [m]	String ToString(String,IFormatProvider)
+ [m]	Boolean TryParse(String,NumberStyles,IFormatProvider,Int32&)
+ [m]	Boolean TryParse(String,Int32&)

f [t] System.Int64
+ [m]	Int32 CompareTo(Int64)
+ [m]	Boolean Equals(Int64)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Int64 Parse(String)
+ [m]	Int64 Parse(String,NumberStyles)
+ [m]	Int64 Parse(String,NumberStyles,IFormatProvider)
+ [m]	Int64 Parse(String,IFormatProvider)
- [m]	Int32 System.IComparable.CompareTo(Object)
- [m]	TypeCode System.IConvertible.GetTypeCode()
+ [m]	Boolean System.IConvertible.ToBoolean(IFormatProvider)
+ [m]	Byte System.IConvertible.ToByte(IFormatProvider)
+ [m]	Char System.IConvertible.ToChar(IFormatProvider)
+ [m]	DateTime System.IConvertible.ToDateTime(IFormatProvider)
+ [m]	Decimal System.IConvertible.ToDecimal(IFormatProvider)
+ [m]	Double System.IConvertible.ToDouble(IFormatProvider)
+ [m]	Int16 System.IConvertible.ToInt16(IFormatProvider)
+ [m]	Int32 System.IConvertible.ToInt32(IFormatProvider)
+ [m]	Int64 System.IConvertible.ToInt64(IFormatProvider)
+ [m]	SByte System.IConvertible.ToSByte(IFormatProvider)
+ [m]	Single System.IConvertible.ToSingle(IFormatProvider)
+ [m]	Object System.IConvertible.ToType(Type,IFormatProvider)
+ [m]	UInt16 System.IConvertible.ToUInt16(IFormatProvider)
+ [m]	UInt32 System.IConvertible.ToUInt32(IFormatProvider)
+ [m]	UInt64 System.IConvertible.ToUInt64(IFormatProvider)
+ [m]	String ToString()
+ [m]	String ToString(IFormatProvider)
+ [m]	String ToString(String)
+ [m]	String ToString(String,IFormatProvider)
+ [m]	Boolean TryParse(String,NumberStyles,IFormatProvider,Int64&)
+ [m]	Boolean TryParse(String,Int64&)

f [t] System.IntPtr
+ [m]	Void .ctor(Int32)
+ [m]	Void .ctor(Int64)
+ [m]	Void .ctor(Void*)
+ [m]	Int32 get_Size()
+ [m]	IntPtr Add(IntPtr,Int32)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	IntPtr op_Addition(IntPtr,Int32)
+ [m]	Boolean op_Equality(IntPtr,IntPtr)
+ [m]	IntPtr op_Explicit(Int32)
+ [m]	IntPtr op_Explicit(Int64)
+ [m]	Int32 op_Explicit(IntPtr)
+ [m]	Int64 op_Explicit(IntPtr)
+ [m]	Void* op_Explicit(IntPtr)
+ [m]	IntPtr op_Explicit(Void*)
+ [m]	Boolean op_Inequality(IntPtr,IntPtr)
+ [m]	IntPtr op_Subtraction(IntPtr,Int32)
+ [m]	IntPtr Subtract(IntPtr,Int32)
+ [m]	Int32 ToInt32()
+ [m]	Int64 ToInt64()
+ [m]	Void* ToPointer()
+ [m]	String ToString()
+ [m]	String ToString(String)

f [t] System.InvalidCastException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	Void .ctor(String,Int32)

f [t] System.InvalidOperationException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.InvalidProgramException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.InvalidTimeZoneException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.IObservable`1
+ [m]	IDisposable Subscribe(IObserver`1)

f [t] System.IObserver`1
+ [m]	Void OnCompleted()
+ [m]	Void OnError(Exception)
+ [m]	Void OnNext(T)

f [t] System.IProgress`1
+ [m]	Void Report(T)

f [t] System.Lazy`1
+ [m]	Void .ctor()
+ [m]	Void .ctor(Boolean)
+ [m]	Void .ctor(Func`1)
+ [m]	Void .ctor(Func`1,Boolean)
+ [m]	Void .ctor(Func`1,LazyThreadSafetyMode)
+ [m]	Void .ctor(LazyThreadSafetyMode)
+ [m]	Boolean get_IsValueCreated()
+ [m]	T get_Value()
+ [m]	String ToString()

f [t] System.Lazy`2
+ [m]	Void .ctor(TMetadata)
+ [m]	Void .ctor(TMetadata,Boolean)
+ [m]	Void .ctor(TMetadata,LazyThreadSafetyMode)
+ [m]	Void .ctor(Func`1,TMetadata)
+ [m]	Void .ctor(Func`1,TMetadata,Boolean)
+ [m]	Void .ctor(Func`1,TMetadata,LazyThreadSafetyMode)
+ [m]	TMetadata get_Metadata()

f [t] System.MemberAccessException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.MethodAccessException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.MissingFieldException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	String get_Message()

f [t] System.MissingMemberException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	String get_Message()

f [t] System.MissingMethodException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	String get_Message()

f [t] System.MTAThreadAttribute
+ [m]	Void .ctor()

f [t] System.MulticastDelegate
- [m]	Void .ctor()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Delegate[] GetInvocationList()
+ [m]	Boolean op_Equality(MulticastDelegate,MulticastDelegate)
+ [m]	Boolean op_Inequality(MulticastDelegate,MulticastDelegate)

f [t] System.NotImplementedException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.NotSupportedException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Nullable
+ [m]	Int32 Compare(Nullable`1,Nullable`1)
+ [m]	Boolean Equals(Nullable`1,Nullable`1)
+ [m]	Type GetUnderlyingType(Type)

f [t] System.Nullable`1
+ [m]	Void .ctor(T)
+ [m]	Boolean get_HasValue()
+ [m]	T get_Value()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	T GetValueOrDefault()
+ [m]	T GetValueOrDefault(T)
+ [m]	T op_Explicit(Nullable`1)
+ [m]	Nullable`1 op_Implicit(T)
+ [m]	String ToString()

f [t] System.NullReferenceException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Object
+ [m]	Void .ctor()
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(Object,Object)
+ [m]	Void Finalize()
+ [m]	Int32 GetHashCode()
+ [m]	Type GetType()
+ [m]	Object MemberwiseClone()
+ [m]	Boolean ReferenceEquals(Object,Object)
+ [m]	String ToString()

f [t] System.ObjectDisposedException
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	Void .ctor(String,String)
+ [m]	String get_Message()
+ [m]	String get_ObjectName()

f [t] System.ObsoleteAttribute
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Boolean)
+ [m]	Boolean get_IsError()
+ [m]	String get_Message()

f [t] System.OutOfMemoryException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.OverflowException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.ParamArrayAttribute
+ [m]	Void .ctor()

f [t] System.PlatformNotSupportedException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Predicate`1
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Boolean Invoke(T)
+ [m]	IAsyncResult BeginInvoke(T,AsyncCallback,Object)
+ [m]	Boolean EndInvoke(IAsyncResult)

f [t] System.RankException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.RuntimeFieldHandle
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(RuntimeFieldHandle)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(RuntimeFieldHandle,RuntimeFieldHandle)
+ [m]	Boolean op_Inequality(RuntimeFieldHandle,RuntimeFieldHandle)

f [t] System.RuntimeMethodHandle
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(RuntimeMethodHandle)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(RuntimeMethodHandle,RuntimeMethodHandle)
+ [m]	Boolean op_Inequality(RuntimeMethodHandle,RuntimeMethodHandle)

f [t] System.RuntimeTypeHandle
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(RuntimeTypeHandle)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(Object,RuntimeTypeHandle)
+ [m]	Boolean op_Equality(RuntimeTypeHandle,Object)
+ [m]	Boolean op_Inequality(Object,RuntimeTypeHandle)
+ [m]	Boolean op_Inequality(RuntimeTypeHandle,Object)

f [t] System.SByte
+ [m]	Int32 CompareTo(SByte)
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(SByte)
+ [m]	Int32 GetHashCode()
+ [m]	SByte Parse(String)
+ [m]	SByte Parse(String,NumberStyles)
+ [m]	SByte Parse(String,NumberStyles,IFormatProvider)
+ [m]	SByte Parse(String,IFormatProvider)
- [m]	Int32 System.IComparable.CompareTo(Object)
- [m]	TypeCode System.IConvertible.GetTypeCode()
+ [m]	Boolean System.IConvertible.ToBoolean(IFormatProvider)
+ [m]	Byte System.IConvertible.ToByte(IFormatProvider)
+ [m]	Char System.IConvertible.ToChar(IFormatProvider)
+ [m]	DateTime System.IConvertible.ToDateTime(IFormatProvider)
+ [m]	Decimal System.IConvertible.ToDecimal(IFormatProvider)
+ [m]	Double System.IConvertible.ToDouble(IFormatProvider)
+ [m]	Int16 System.IConvertible.ToInt16(IFormatProvider)
+ [m]	Int32 System.IConvertible.ToInt32(IFormatProvider)
+ [m]	Int64 System.IConvertible.ToInt64(IFormatProvider)
+ [m]	SByte System.IConvertible.ToSByte(IFormatProvider)
+ [m]	Single System.IConvertible.ToSingle(IFormatProvider)
+ [m]	Object System.IConvertible.ToType(Type,IFormatProvider)
+ [m]	UInt16 System.IConvertible.ToUInt16(IFormatProvider)
+ [m]	UInt32 System.IConvertible.ToUInt32(IFormatProvider)
+ [m]	UInt64 System.IConvertible.ToUInt64(IFormatProvider)
+ [m]	String ToString()
+ [m]	String ToString(IFormatProvider)
+ [m]	String ToString(String)
+ [m]	String ToString(String,IFormatProvider)
+ [m]	Boolean TryParse(String,NumberStyles,IFormatProvider,SByte&)
+ [m]	Boolean TryParse(String,SByte&)

f [t] System.Single
+ [m]	Int32 CompareTo(Single)
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(Single)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean IsInfinity(Single)
+ [m]	Boolean IsNaN(Single)
+ [m]	Boolean IsNegativeInfinity(Single)
+ [m]	Boolean IsPositiveInfinity(Single)
+ [m]	Boolean op_Equality(Single,Single)
+ [m]	Boolean op_GreaterThan(Single,Single)
+ [m]	Boolean op_GreaterThanOrEqual(Single,Single)
+ [m]	Boolean op_Inequality(Single,Single)
+ [m]	Boolean op_LessThan(Single,Single)
+ [m]	Boolean op_LessThanOrEqual(Single,Single)
+ [m]	Single Parse(String)
+ [m]	Single Parse(String,NumberStyles)
+ [m]	Single Parse(String,NumberStyles,IFormatProvider)
+ [m]	Single Parse(String,IFormatProvider)
- [m]	Int32 System.IComparable.CompareTo(Object)
- [m]	TypeCode System.IConvertible.GetTypeCode()
+ [m]	Boolean System.IConvertible.ToBoolean(IFormatProvider)
+ [m]	Byte System.IConvertible.ToByte(IFormatProvider)
+ [m]	Char System.IConvertible.ToChar(IFormatProvider)
+ [m]	DateTime System.IConvertible.ToDateTime(IFormatProvider)
+ [m]	Decimal System.IConvertible.ToDecimal(IFormatProvider)
+ [m]	Double System.IConvertible.ToDouble(IFormatProvider)
+ [m]	Int16 System.IConvertible.ToInt16(IFormatProvider)
+ [m]	Int32 System.IConvertible.ToInt32(IFormatProvider)
+ [m]	Int64 System.IConvertible.ToInt64(IFormatProvider)
+ [m]	SByte System.IConvertible.ToSByte(IFormatProvider)
+ [m]	Single System.IConvertible.ToSingle(IFormatProvider)
+ [m]	Object System.IConvertible.ToType(Type,IFormatProvider)
+ [m]	UInt16 System.IConvertible.ToUInt16(IFormatProvider)
+ [m]	UInt32 System.IConvertible.ToUInt32(IFormatProvider)
+ [m]	UInt64 System.IConvertible.ToUInt64(IFormatProvider)
+ [m]	String ToString()
+ [m]	String ToString(IFormatProvider)
+ [m]	String ToString(String)
+ [m]	String ToString(String,IFormatProvider)
+ [m]	Boolean TryParse(String,NumberStyles,IFormatProvider,Single&)
+ [m]	Boolean TryParse(String,Single&)

f [t] System.STAThreadAttribute
+ [m]	Void .ctor()

f [t] System.String
+ [m]	Void .ctor(Char*)
+ [m]	Void .ctor(Char*,Int32,Int32)
+ [m]	Void .ctor(Char,Int32)
+ [m]	Void .ctor(Char[])
+ [m]	Void .ctor(Char[],Int32,Int32)
+ [m]	Char get_Chars(Int32)
+ [m]	Int32 get_Length()
+ [m]	Int32 Compare(String,Int32,String,Int32,Int32)
+ [m]	Int32 Compare(String,Int32,String,Int32,Int32,StringComparison)
+ [m]	Int32 Compare(String,String)
+ [m]	Int32 Compare(String,String,Boolean)
+ [m]	Int32 Compare(String,String,StringComparison)
+ [m]	Int32 CompareOrdinal(String,Int32,String,Int32,Int32)
+ [m]	Int32 CompareOrdinal(String,String)
+ [m]	Int32 CompareTo(String)
+ [m]	String Concat(IEnumerable`1)
+ [m]	String Concat(Object)
+ [m]	String Concat(Object,Object)
+ [m]	String Concat(Object,Object,Object)
+ [m]	String Concat(Object[])
+ [m]	String Concat(String,String)
+ [m]	String Concat(String,String,String)
+ [m]	String Concat(String,String,String,String)
+ [m]	String Concat(String[])
+ [m]	String Concat(IEnumerable`1)
+ [m]	Boolean Contains(String)
+ [m]	Void CopyTo(Int32,Char[],Int32,Int32)
+ [m]	Boolean EndsWith(String)
+ [m]	Boolean EndsWith(String,StringComparison)
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(String)
+ [m]	Boolean Equals(String,String)
+ [m]	Boolean Equals(String,String,StringComparison)
+ [m]	Boolean Equals(String,StringComparison)
+ [m]	String Format(IFormatProvider,String,Object)
+ [m]	String Format(IFormatProvider,String,Object,Object)
+ [m]	String Format(IFormatProvider,String,Object,Object,Object)
+ [m]	String Format(IFormatProvider,String,Object[])
+ [m]	String Format(String,Object)
+ [m]	String Format(String,Object,Object)
+ [m]	String Format(String,Object,Object,Object)
+ [m]	String Format(String,Object[])
+ [m]	Int32 GetHashCode()
+ [m]	Int32 IndexOf(Char)
+ [m]	Int32 IndexOf(Char,Int32)
+ [m]	Int32 IndexOf(Char,Int32,Int32)
+ [m]	Int32 IndexOf(String)
+ [m]	Int32 IndexOf(String,Int32)
+ [m]	Int32 IndexOf(String,Int32,Int32)
+ [m]	Int32 IndexOf(String,Int32,Int32,StringComparison)
+ [m]	Int32 IndexOf(String,Int32,StringComparison)
+ [m]	Int32 IndexOf(String,StringComparison)
+ [m]	Int32 IndexOfAny(Char[])
+ [m]	Int32 IndexOfAny(Char[],Int32)
+ [m]	Int32 IndexOfAny(Char[],Int32,Int32)
+ [m]	String Insert(Int32,String)
+ [m]	Boolean IsNullOrEmpty(String)
+ [m]	Boolean IsNullOrWhiteSpace(String)
+ [m]	String Join(String,IEnumerable`1)
+ [m]	String Join(String,Object[])
+ [m]	String Join(String,String[])
+ [m]	String Join(String,String[],Int32,Int32)
+ [m]	String Join(String,IEnumerable`1)
+ [m]	Int32 LastIndexOf(Char)
+ [m]	Int32 LastIndexOf(Char,Int32)
+ [m]	Int32 LastIndexOf(Char,Int32,Int32)
+ [m]	Int32 LastIndexOf(String)
+ [m]	Int32 LastIndexOf(String,Int32)
+ [m]	Int32 LastIndexOf(String,Int32,Int32)
+ [m]	Int32 LastIndexOf(String,Int32,Int32,StringComparison)
+ [m]	Int32 LastIndexOf(String,Int32,StringComparison)
+ [m]	Int32 LastIndexOf(String,StringComparison)
+ [m]	Int32 LastIndexOfAny(Char[])
+ [m]	Int32 LastIndexOfAny(Char[],Int32)
+ [m]	Int32 LastIndexOfAny(Char[],Int32,Int32)
+ [m]	Boolean op_Equality(String,String)
+ [m]	Boolean op_Inequality(String,String)
+ [m]	String PadLeft(Int32)
+ [m]	String PadLeft(Int32,Char)
+ [m]	String PadRight(Int32)
+ [m]	String PadRight(Int32,Char)
+ [m]	String Remove(Int32)
+ [m]	String Remove(Int32,Int32)
+ [m]	String Replace(Char,Char)
+ [m]	String Replace(String,String)
+ [m]	String[] Split(Char[])
+ [m]	String[] Split(Char[],Int32)
+ [m]	String[] Split(Char[],Int32,StringSplitOptions)
+ [m]	String[] Split(Char[],StringSplitOptions)
+ [m]	String[] Split(String[],Int32,StringSplitOptions)
+ [m]	String[] Split(String[],StringSplitOptions)
+ [m]	Boolean StartsWith(String)
+ [m]	Boolean StartsWith(String,StringComparison)
+ [m]	String Substring(Int32)
+ [m]	String Substring(Int32,Int32)
- [m]	IEnumerator`1 System.Collections.Generic.IEnumerable<System.Char>.GetEnumerator()
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
- [m]	Int32 System.IComparable.CompareTo(Object)
- [m]	TypeCode System.IConvertible.GetTypeCode()
+ [m]	Boolean System.IConvertible.ToBoolean(IFormatProvider)
+ [m]	Byte System.IConvertible.ToByte(IFormatProvider)
+ [m]	Char System.IConvertible.ToChar(IFormatProvider)
+ [m]	DateTime System.IConvertible.ToDateTime(IFormatProvider)
+ [m]	Decimal System.IConvertible.ToDecimal(IFormatProvider)
+ [m]	Double System.IConvertible.ToDouble(IFormatProvider)
+ [m]	Int16 System.IConvertible.ToInt16(IFormatProvider)
+ [m]	Int32 System.IConvertible.ToInt32(IFormatProvider)
+ [m]	Int64 System.IConvertible.ToInt64(IFormatProvider)
+ [m]	SByte System.IConvertible.ToSByte(IFormatProvider)
+ [m]	Single System.IConvertible.ToSingle(IFormatProvider)
- [m]	String System.IConvertible.ToString(IFormatProvider)
+ [m]	Object System.IConvertible.ToType(Type,IFormatProvider)
+ [m]	UInt16 System.IConvertible.ToUInt16(IFormatProvider)
+ [m]	UInt32 System.IConvertible.ToUInt32(IFormatProvider)
+ [m]	UInt64 System.IConvertible.ToUInt64(IFormatProvider)
+ [m]	Char[] ToCharArray()
+ [m]	Char[] ToCharArray(Int32,Int32)
+ [m]	String ToLower()
+ [m]	String ToLowerInvariant()
+ [m]	String ToString()
+ [m]	String ToUpper()
+ [m]	String ToUpperInvariant()
+ [m]	String Trim()
+ [m]	String Trim(Char[])
+ [m]	String TrimEnd(Char[])
+ [m]	String TrimStart(Char[])

f [t] System.StringComparison

f [t] System.StringSplitOptions

f [t] System.ThreadStaticAttribute
+ [m]	Void .ctor()

f [t] System.TimeoutException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.TimeSpan
+ [m]	Void .ctor(Int32,Int32,Int32)
+ [m]	Void .ctor(Int32,Int32,Int32,Int32)
+ [m]	Void .ctor(Int32,Int32,Int32,Int32,Int32)
+ [m]	Void .ctor(Int64)
+ [m]	Int32 get_Days()
+ [m]	Int32 get_Hours()
+ [m]	Int32 get_Milliseconds()
+ [m]	Int32 get_Minutes()
+ [m]	Int32 get_Seconds()
+ [m]	Int64 get_Ticks()
+ [m]	Double get_TotalDays()
+ [m]	Double get_TotalHours()
+ [m]	Double get_TotalMilliseconds()
+ [m]	Double get_TotalMinutes()
+ [m]	Double get_TotalSeconds()
+ [m]	TimeSpan Add(TimeSpan)
+ [m]	Int32 Compare(TimeSpan,TimeSpan)
+ [m]	Int32 CompareTo(TimeSpan)
+ [m]	TimeSpan Duration()
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(TimeSpan)
+ [m]	Boolean Equals(TimeSpan,TimeSpan)
+ [m]	TimeSpan FromDays(Double)
+ [m]	TimeSpan FromHours(Double)
+ [m]	TimeSpan FromMilliseconds(Double)
+ [m]	TimeSpan FromMinutes(Double)
+ [m]	TimeSpan FromSeconds(Double)
+ [m]	TimeSpan FromTicks(Int64)
+ [m]	Int32 GetHashCode()
+ [m]	TimeSpan Negate()
+ [m]	TimeSpan op_Addition(TimeSpan,TimeSpan)
+ [m]	Boolean op_Equality(TimeSpan,TimeSpan)
+ [m]	Boolean op_GreaterThan(TimeSpan,TimeSpan)
+ [m]	Boolean op_GreaterThanOrEqual(TimeSpan,TimeSpan)
+ [m]	Boolean op_Inequality(TimeSpan,TimeSpan)
+ [m]	Boolean op_LessThan(TimeSpan,TimeSpan)
+ [m]	Boolean op_LessThanOrEqual(TimeSpan,TimeSpan)
+ [m]	TimeSpan op_Subtraction(TimeSpan,TimeSpan)
+ [m]	TimeSpan op_UnaryNegation(TimeSpan)
+ [m]	TimeSpan op_UnaryPlus(TimeSpan)
+ [m]	TimeSpan Parse(String)
+ [m]	TimeSpan Parse(String,IFormatProvider)
+ [m]	TimeSpan ParseExact(String,String,IFormatProvider)
+ [m]	TimeSpan ParseExact(String,String,IFormatProvider,TimeSpanStyles)
+ [m]	TimeSpan ParseExact(String,String[],IFormatProvider)
+ [m]	TimeSpan ParseExact(String,String[],IFormatProvider,TimeSpanStyles)
+ [m]	TimeSpan Subtract(TimeSpan)
- [m]	Int32 System.IComparable.CompareTo(Object)
+ [m]	String ToString()
+ [m]	String ToString(String)
+ [m]	String ToString(String,IFormatProvider)
+ [m]	Boolean TryParse(String,IFormatProvider,TimeSpan&)
+ [m]	Boolean TryParse(String,TimeSpan&)
+ [m]	Boolean TryParseExact(String,String,IFormatProvider,TimeSpanStyles,TimeSpan&)
+ [m]	Boolean TryParseExact(String,String,IFormatProvider,TimeSpan&)
+ [m]	Boolean TryParseExact(String,String[],IFormatProvider,TimeSpanStyles,TimeSpan&)
+ [m]	Boolean TryParseExact(String,String[],IFormatProvider,TimeSpan&)

f [t] System.TimeZoneInfo
- [m]	Void .ctor()
+ [m]	TimeSpan get_BaseUtcOffset()
+ [m]	String get_DaylightName()
+ [m]	String get_DisplayName()
+ [m]	String get_Id()
+ [m]	TimeZoneInfo get_Local()
+ [m]	String get_StandardName()
+ [m]	Boolean get_SupportsDaylightSavingTime()
+ [m]	TimeZoneInfo get_Utc()
+ [m]	DateTime ConvertTime(DateTime,TimeZoneInfo)
+ [m]	DateTime ConvertTime(DateTime,TimeZoneInfo,TimeZoneInfo)
+ [m]	DateTimeOffset ConvertTime(DateTimeOffset,TimeZoneInfo)
+ [m]	Boolean Equals(TimeZoneInfo)
+ [m]	TimeZoneInfo FindSystemTimeZoneById(String)
+ [m]	TimeSpan[] GetAmbiguousTimeOffsets(DateTime)
+ [m]	TimeSpan[] GetAmbiguousTimeOffsets(DateTimeOffset)
+ [m]	Int32 GetHashCode()
+ [m]	ReadOnlyCollection`1 GetSystemTimeZones()
+ [m]	TimeSpan GetUtcOffset(DateTime)
! [m]	TimeSpan GetUtcOffset(DateTimeOffset)
+ [m]	Boolean IsAmbiguousTime(DateTime)
! [m]	Boolean IsAmbiguousTime(DateTimeOffset)
+ [m]	Boolean IsDaylightSavingTime(DateTime)
! [m]	Boolean IsDaylightSavingTime(DateTimeOffset)
+ [m]	Boolean IsInvalidTime(DateTime)
+ [m]	String ToString()

f [t] System.Tuple
+ [m]	Tuple`1 Create(T1)
+ [m]	Tuple`2 Create(T1,T2)
+ [m]	Tuple`3 Create(T1,T2,T3)
+ [m]	Tuple`4 Create(T1,T2,T3,T4)
+ [m]	Tuple`5 Create(T1,T2,T3,T4,T5)
+ [m]	Tuple`6 Create(T1,T2,T3,T4,T5,T6)
+ [m]	Tuple`7 Create(T1,T2,T3,T4,T5,T6,T7)
+ [m]	Tuple`8 Create(T1,T2,T3,T4,T5,T6,T7,T8)

f [t] System.Tuple`1
+ [m]	Void .ctor(T1)
+ [m]	T1 get_Item1()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Int32 System.Collections.IStructuralComparable.CompareTo(Object,IComparer)
+ [m]	Boolean System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)
+ [m]	Int32 System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)
+ [m]	Int32 System.IComparable.CompareTo(Object)
+ [m]	String ToString()

f [t] System.Tuple`2
+ [m]	Void .ctor(T1,T2)
+ [m]	T1 get_Item1()
+ [m]	T2 get_Item2()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Int32 System.Collections.IStructuralComparable.CompareTo(Object,IComparer)
+ [m]	Boolean System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)
+ [m]	Int32 System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)
+ [m]	Int32 System.IComparable.CompareTo(Object)
+ [m]	String ToString()

f [t] System.Tuple`3
+ [m]	Void .ctor(T1,T2,T3)
+ [m]	T1 get_Item1()
+ [m]	T2 get_Item2()
+ [m]	T3 get_Item3()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Int32 System.Collections.IStructuralComparable.CompareTo(Object,IComparer)
+ [m]	Boolean System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)
+ [m]	Int32 System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)
+ [m]	Int32 System.IComparable.CompareTo(Object)
+ [m]	String ToString()

f [t] System.Tuple`4
+ [m]	Void .ctor(T1,T2,T3,T4)
+ [m]	T1 get_Item1()
+ [m]	T2 get_Item2()
+ [m]	T3 get_Item3()
+ [m]	T4 get_Item4()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Int32 System.Collections.IStructuralComparable.CompareTo(Object,IComparer)
+ [m]	Boolean System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)
+ [m]	Int32 System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)
+ [m]	Int32 System.IComparable.CompareTo(Object)
+ [m]	String ToString()

f [t] System.Tuple`5
+ [m]	Void .ctor(T1,T2,T3,T4,T5)
+ [m]	T1 get_Item1()
+ [m]	T2 get_Item2()
+ [m]	T3 get_Item3()
+ [m]	T4 get_Item4()
+ [m]	T5 get_Item5()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Int32 System.Collections.IStructuralComparable.CompareTo(Object,IComparer)
+ [m]	Boolean System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)
+ [m]	Int32 System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)
+ [m]	Int32 System.IComparable.CompareTo(Object)
+ [m]	String ToString()

f [t] System.Tuple`6
+ [m]	Void .ctor(T1,T2,T3,T4,T5,T6)
+ [m]	T1 get_Item1()
+ [m]	T2 get_Item2()
+ [m]	T3 get_Item3()
+ [m]	T4 get_Item4()
+ [m]	T5 get_Item5()
+ [m]	T6 get_Item6()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Int32 System.Collections.IStructuralComparable.CompareTo(Object,IComparer)
+ [m]	Boolean System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)
+ [m]	Int32 System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)
+ [m]	Int32 System.IComparable.CompareTo(Object)
+ [m]	String ToString()

f [t] System.Tuple`7
+ [m]	Void .ctor(T1,T2,T3,T4,T5,T6,T7)
+ [m]	T1 get_Item1()
+ [m]	T2 get_Item2()
+ [m]	T3 get_Item3()
+ [m]	T4 get_Item4()
+ [m]	T5 get_Item5()
+ [m]	T6 get_Item6()
+ [m]	T7 get_Item7()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Int32 System.Collections.IStructuralComparable.CompareTo(Object,IComparer)
+ [m]	Boolean System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)
+ [m]	Int32 System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)
+ [m]	Int32 System.IComparable.CompareTo(Object)
+ [m]	String ToString()

f [t] System.Tuple`8
+ [m]	Void .ctor(T1,T2,T3,T4,T5,T6,T7,TRest)
+ [m]	T1 get_Item1()
+ [m]	T2 get_Item2()
+ [m]	T3 get_Item3()
+ [m]	T4 get_Item4()
+ [m]	T5 get_Item5()
+ [m]	T6 get_Item6()
+ [m]	T7 get_Item7()
+ [m]	TRest get_Rest()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Int32 System.Collections.IStructuralComparable.CompareTo(Object,IComparer)
+ [m]	Boolean System.Collections.IStructuralEquatable.Equals(Object,IEqualityComparer)
+ [m]	Int32 System.Collections.IStructuralEquatable.GetHashCode(IEqualityComparer)
+ [m]	Int32 System.IComparable.CompareTo(Object)
+ [m]	String ToString()

f [t] System.Type
+ [m]	Void .ctor()
+ [m]	String get_AssemblyQualifiedName()
+ [m]	String get_FullName()
+ [m]	Int32 get_GenericParameterPosition()
+ [m]	Type[] get_GenericTypeArguments()
+ [m]	Boolean get_HasElementType()
+ [m]	Boolean get_IsArray()
+ [m]	Boolean get_IsByRef()
! [m]	Boolean get_IsConstructedGenericType()
+ [m]	Boolean get_IsGenericParameter()
+ [m]	Boolean get_IsNested()
+ [m]	Boolean get_IsPointer()
+ [m]	String get_Namespace()
+ [m]	RuntimeTypeHandle get_TypeHandle()
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(Type)
+ [m]	Int32 GetArrayRank()
+ [m]	Type GetElementType()
+ [m]	Type GetGenericTypeDefinition()
+ [m]	Int32 GetHashCode()
+ [m]	Type GetType(String)
+ [m]	Type GetType(String,Boolean)
+ [m]	Type GetType(String,Boolean,Boolean)
+ [m]	TypeCode GetTypeCode(Type)
+ [m]	Type GetTypeFromHandle(RuntimeTypeHandle)
+ [m]	Type MakeArrayType()
+ [m]	Type MakeArrayType(Int32)
+ [m]	Type MakeByRefType()
+ [m]	Type MakeGenericType(Type[])
+ [m]	Type MakePointerType()
+ [m]	String ToString()
+ [m]	Type get_DeclaringType()
- [m]	String get_Name()

f [t] System.TypeAccessException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.TypeCode

f [t] System.TypeInitializationException
+ [m]	Void .ctor(String,Exception)
+ [m]	String get_TypeName()

f [t] System.TypeLoadException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	String get_Message()
+ [m]	String get_TypeName()

f [t] System.UInt16
+ [m]	Int32 CompareTo(UInt16)
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(UInt16)
+ [m]	Int32 GetHashCode()
+ [m]	UInt16 Parse(String)
+ [m]	UInt16 Parse(String,NumberStyles)
+ [m]	UInt16 Parse(String,NumberStyles,IFormatProvider)
+ [m]	UInt16 Parse(String,IFormatProvider)
- [m]	Int32 System.IComparable.CompareTo(Object)
- [m]	TypeCode System.IConvertible.GetTypeCode()
+ [m]	Boolean System.IConvertible.ToBoolean(IFormatProvider)
+ [m]	Byte System.IConvertible.ToByte(IFormatProvider)
+ [m]	Char System.IConvertible.ToChar(IFormatProvider)
+ [m]	DateTime System.IConvertible.ToDateTime(IFormatProvider)
+ [m]	Decimal System.IConvertible.ToDecimal(IFormatProvider)
+ [m]	Double System.IConvertible.ToDouble(IFormatProvider)
+ [m]	Int16 System.IConvertible.ToInt16(IFormatProvider)
+ [m]	Int32 System.IConvertible.ToInt32(IFormatProvider)
+ [m]	Int64 System.IConvertible.ToInt64(IFormatProvider)
+ [m]	SByte System.IConvertible.ToSByte(IFormatProvider)
+ [m]	Single System.IConvertible.ToSingle(IFormatProvider)
+ [m]	Object System.IConvertible.ToType(Type,IFormatProvider)
+ [m]	UInt16 System.IConvertible.ToUInt16(IFormatProvider)
+ [m]	UInt32 System.IConvertible.ToUInt32(IFormatProvider)
+ [m]	UInt64 System.IConvertible.ToUInt64(IFormatProvider)
+ [m]	String ToString()
+ [m]	String ToString(IFormatProvider)
+ [m]	String ToString(String)
+ [m]	String ToString(String,IFormatProvider)
+ [m]	Boolean TryParse(String,NumberStyles,IFormatProvider,UInt16&)
+ [m]	Boolean TryParse(String,UInt16&)

f [t] System.UInt32
+ [m]	Int32 CompareTo(UInt32)
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(UInt32)
+ [m]	Int32 GetHashCode()
+ [m]	UInt32 Parse(String)
+ [m]	UInt32 Parse(String,NumberStyles)
+ [m]	UInt32 Parse(String,NumberStyles,IFormatProvider)
+ [m]	UInt32 Parse(String,IFormatProvider)
- [m]	Int32 System.IComparable.CompareTo(Object)
- [m]	TypeCode System.IConvertible.GetTypeCode()
+ [m]	Boolean System.IConvertible.ToBoolean(IFormatProvider)
+ [m]	Byte System.IConvertible.ToByte(IFormatProvider)
+ [m]	Char System.IConvertible.ToChar(IFormatProvider)
+ [m]	DateTime System.IConvertible.ToDateTime(IFormatProvider)
+ [m]	Decimal System.IConvertible.ToDecimal(IFormatProvider)
+ [m]	Double System.IConvertible.ToDouble(IFormatProvider)
+ [m]	Int16 System.IConvertible.ToInt16(IFormatProvider)
+ [m]	Int32 System.IConvertible.ToInt32(IFormatProvider)
+ [m]	Int64 System.IConvertible.ToInt64(IFormatProvider)
+ [m]	SByte System.IConvertible.ToSByte(IFormatProvider)
+ [m]	Single System.IConvertible.ToSingle(IFormatProvider)
+ [m]	Object System.IConvertible.ToType(Type,IFormatProvider)
+ [m]	UInt16 System.IConvertible.ToUInt16(IFormatProvider)
+ [m]	UInt32 System.IConvertible.ToUInt32(IFormatProvider)
+ [m]	UInt64 System.IConvertible.ToUInt64(IFormatProvider)
+ [m]	String ToString()
+ [m]	String ToString(IFormatProvider)
+ [m]	String ToString(String)
+ [m]	String ToString(String,IFormatProvider)
+ [m]	Boolean TryParse(String,NumberStyles,IFormatProvider,UInt32&)
+ [m]	Boolean TryParse(String,UInt32&)

f [t] System.UInt64
+ [m]	Int32 CompareTo(UInt64)
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(UInt64)
+ [m]	Int32 GetHashCode()
+ [m]	UInt64 Parse(String)
+ [m]	UInt64 Parse(String,NumberStyles)
+ [m]	UInt64 Parse(String,NumberStyles,IFormatProvider)
+ [m]	UInt64 Parse(String,IFormatProvider)
- [m]	Int32 System.IComparable.CompareTo(Object)
- [m]	TypeCode System.IConvertible.GetTypeCode()
+ [m]	Boolean System.IConvertible.ToBoolean(IFormatProvider)
+ [m]	Byte System.IConvertible.ToByte(IFormatProvider)
+ [m]	Char System.IConvertible.ToChar(IFormatProvider)
+ [m]	DateTime System.IConvertible.ToDateTime(IFormatProvider)
+ [m]	Decimal System.IConvertible.ToDecimal(IFormatProvider)
+ [m]	Double System.IConvertible.ToDouble(IFormatProvider)
+ [m]	Int16 System.IConvertible.ToInt16(IFormatProvider)
+ [m]	Int32 System.IConvertible.ToInt32(IFormatProvider)
+ [m]	Int64 System.IConvertible.ToInt64(IFormatProvider)
+ [m]	SByte System.IConvertible.ToSByte(IFormatProvider)
+ [m]	Single System.IConvertible.ToSingle(IFormatProvider)
+ [m]	Object System.IConvertible.ToType(Type,IFormatProvider)
+ [m]	UInt16 System.IConvertible.ToUInt16(IFormatProvider)
+ [m]	UInt32 System.IConvertible.ToUInt32(IFormatProvider)
+ [m]	UInt64 System.IConvertible.ToUInt64(IFormatProvider)
+ [m]	String ToString()
+ [m]	String ToString(IFormatProvider)
+ [m]	String ToString(String)
+ [m]	String ToString(String,IFormatProvider)
+ [m]	Boolean TryParse(String,NumberStyles,IFormatProvider,UInt64&)
+ [m]	Boolean TryParse(String,UInt64&)

f [t] System.UIntPtr
+ [m]	Void .ctor(UInt32)
+ [m]	Void .ctor(UInt64)
+ [m]	Void .ctor(Void*)
+ [m]	Int32 get_Size()
+ [m]	UIntPtr Add(UIntPtr,Int32)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	UIntPtr op_Addition(UIntPtr,Int32)
+ [m]	Boolean op_Equality(UIntPtr,UIntPtr)
+ [m]	UIntPtr op_Explicit(UInt32)
+ [m]	UIntPtr op_Explicit(UInt64)
+ [m]	UInt32 op_Explicit(UIntPtr)
+ [m]	UInt64 op_Explicit(UIntPtr)
+ [m]	Void* op_Explicit(UIntPtr)
+ [m]	UIntPtr op_Explicit(Void*)
+ [m]	Boolean op_Inequality(UIntPtr,UIntPtr)
+ [m]	UIntPtr op_Subtraction(UIntPtr,Int32)
+ [m]	UIntPtr Subtract(UIntPtr,Int32)
+ [m]	Void* ToPointer()
+ [m]	String ToString()
+ [m]	UInt32 ToUInt32()
+ [m]	UInt64 ToUInt64()

f [t] System.UnauthorizedAccessException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Uri
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,UriKind)
+ [m]	Void .ctor(Uri,String)
+ [m]	Void .ctor(Uri,Uri)
+ [m]	String get_AbsolutePath()
+ [m]	String get_AbsoluteUri()
+ [m]	String get_Authority()
+ [m]	String get_DnsSafeHost()
+ [m]	String get_Fragment()
+ [m]	String get_Host()
+ [m]	UriHostNameType get_HostNameType()
- [m]	String get_IdnHost()
+ [m]	Boolean get_IsAbsoluteUri()
+ [m]	Boolean get_IsDefaultPort()
+ [m]	Boolean get_IsFile()
+ [m]	Boolean get_IsLoopback()
+ [m]	Boolean get_IsUnc()
+ [m]	String get_LocalPath()
+ [m]	String get_OriginalString()
+ [m]	String get_PathAndQuery()
+ [m]	Int32 get_Port()
+ [m]	String get_Query()
+ [m]	String get_Scheme()
+ [m]	String[] get_Segments()
+ [m]	Boolean get_UserEscaped()
+ [m]	String get_UserInfo()
+ [m]	UriHostNameType CheckHostName(String)
+ [m]	Boolean CheckSchemeName(String)
+ [m]	Int32 Compare(Uri,Uri,UriComponents,UriFormat,StringComparison)
+ [m]	Boolean Equals(Object)
+ [m]	String EscapeDataString(String)
+ [m]	String EscapeUriString(String)
+ [m]	String GetComponents(UriComponents,UriFormat)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean IsBaseOf(Uri)
+ [m]	Boolean IsWellFormedOriginalString()
+ [m]	Boolean IsWellFormedUriString(String,UriKind)
+ [m]	Uri MakeRelativeUri(Uri)
+ [m]	Boolean op_Equality(Uri,Uri)
+ [m]	Boolean op_Inequality(Uri,Uri)
+ [m]	String ToString()
+ [m]	Boolean TryCreate(String,UriKind,Uri&)
+ [m]	Boolean TryCreate(Uri,String,Uri&)
+ [m]	Boolean TryCreate(Uri,Uri,Uri&)
+ [m]	String UnescapeDataString(String)

f [t] System.UriComponents

f [t] System.UriFormat

f [t] System.UriFormatException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.UriHostNameType

f [t] System.UriKind

f [t] System.ValueType
+ [m]	Void .ctor()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	String ToString()

f [t] System.Version
+ [m]	Void .ctor(Int32,Int32)
+ [m]	Void .ctor(Int32,Int32,Int32)
+ [m]	Void .ctor(Int32,Int32,Int32,Int32)
+ [m]	Void .ctor(String)
+ [m]	Int32 get_Build()
+ [m]	Int32 get_Major()
+ [m]	Int16 get_MajorRevision()
+ [m]	Int32 get_Minor()
+ [m]	Int16 get_MinorRevision()
+ [m]	Int32 get_Revision()
+ [m]	Int32 CompareTo(Version)
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(Version)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(Version,Version)
+ [m]	Boolean op_GreaterThan(Version,Version)
+ [m]	Boolean op_GreaterThanOrEqual(Version,Version)
+ [m]	Boolean op_Inequality(Version,Version)
+ [m]	Boolean op_LessThan(Version,Version)
+ [m]	Boolean op_LessThanOrEqual(Version,Version)
+ [m]	Version Parse(String)
- [m]	Int32 System.IComparable.CompareTo(Object)
+ [m]	String ToString()
+ [m]	String ToString(Int32)
+ [m]	Boolean TryParse(String,Version&)

f [t] System.Void

f [t] System.WeakReference
+ [m]	Void .ctor(Object)
+ [m]	Void .ctor(Object,Boolean)
+ [m]	Boolean get_IsAlive()
+ [m]	Object get_Target()
+ [m]	Void set_Target(Object)
+ [m]	Boolean get_TrackResurrection()
+ [m]	Void Finalize()

f [t] System.WeakReference`1
+ [m]	Void .ctor(T)
+ [m]	Void .ctor(T,Boolean)
+ [m]	Void Finalize()
+ [m]	Void SetTarget(T)
+ [m]	Boolean TryGetTarget(T&)

f [t] System.Threading.LazyThreadSafetyMode

f [t] System.Threading.Timeout

f [t] System.Threading.WaitHandle
+ [m]	Void .ctor()
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Boolean WaitAll(WaitHandle[])
+ [m]	Boolean WaitAll(WaitHandle[],Int32)
+ [m]	Boolean WaitAll(WaitHandle[],TimeSpan)
+ [m]	Int32 WaitAny(WaitHandle[])
+ [m]	Int32 WaitAny(WaitHandle[],Int32)
+ [m]	Int32 WaitAny(WaitHandle[],TimeSpan)
+ [m]	Boolean WaitOne()
+ [m]	Boolean WaitOne(Int32)
+ [m]	Boolean WaitOne(TimeSpan)

f [t] System.Text.StringBuilder
+ [m]	Void .ctor()
+ [m]	Void .ctor(Int32)
+ [m]	Void .ctor(Int32,Int32)
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Int32)
+ [m]	Void .ctor(String,Int32,Int32,Int32)
+ [m]	Int32 get_Capacity()
+ [m]	Void set_Capacity(Int32)
+ [m]	Char get_Chars(Int32)
+ [m]	Void set_Chars(Int32,Char)
+ [m]	Int32 get_Length()
+ [m]	Void set_Length(Int32)
+ [m]	Int32 get_MaxCapacity()
+ [m]	StringBuilder Append(Boolean)
+ [m]	StringBuilder Append(Byte)
+ [m]	StringBuilder Append(Char)
+ [m]	StringBuilder Append(Char*,Int32)
+ [m]	StringBuilder Append(Char,Int32)
+ [m]	StringBuilder Append(Char[])
+ [m]	StringBuilder Append(Char[],Int32,Int32)
+ [m]	StringBuilder Append(Decimal)
+ [m]	StringBuilder Append(Double)
+ [m]	StringBuilder Append(Int16)
+ [m]	StringBuilder Append(Int32)
+ [m]	StringBuilder Append(Int64)
+ [m]	StringBuilder Append(Object)
+ [m]	StringBuilder Append(SByte)
+ [m]	StringBuilder Append(Single)
+ [m]	StringBuilder Append(String)
+ [m]	StringBuilder Append(String,Int32,Int32)
+ [m]	StringBuilder Append(UInt16)
+ [m]	StringBuilder Append(UInt32)
+ [m]	StringBuilder Append(UInt64)
+ [m]	StringBuilder AppendFormat(IFormatProvider,String,Object)
+ [m]	StringBuilder AppendFormat(IFormatProvider,String,Object,Object)
+ [m]	StringBuilder AppendFormat(IFormatProvider,String,Object,Object,Object)
+ [m]	StringBuilder AppendFormat(IFormatProvider,String,Object[])
+ [m]	StringBuilder AppendFormat(String,Object)
+ [m]	StringBuilder AppendFormat(String,Object,Object)
+ [m]	StringBuilder AppendFormat(String,Object,Object,Object)
+ [m]	StringBuilder AppendFormat(String,Object[])
+ [m]	StringBuilder AppendLine()
+ [m]	StringBuilder AppendLine(String)
+ [m]	StringBuilder Clear()
+ [m]	Void CopyTo(Int32,Char[],Int32,Int32)
+ [m]	Int32 EnsureCapacity(Int32)
+ [m]	Boolean Equals(StringBuilder)
+ [m]	StringBuilder Insert(Int32,Boolean)
+ [m]	StringBuilder Insert(Int32,Byte)
+ [m]	StringBuilder Insert(Int32,Char)
+ [m]	StringBuilder Insert(Int32,Char[])
+ [m]	StringBuilder Insert(Int32,Char[],Int32,Int32)
+ [m]	StringBuilder Insert(Int32,Decimal)
+ [m]	StringBuilder Insert(Int32,Double)
+ [m]	StringBuilder Insert(Int32,Int16)
+ [m]	StringBuilder Insert(Int32,Int32)
+ [m]	StringBuilder Insert(Int32,Int64)
+ [m]	StringBuilder Insert(Int32,Object)
+ [m]	StringBuilder Insert(Int32,SByte)
+ [m]	StringBuilder Insert(Int32,Single)
+ [m]	StringBuilder Insert(Int32,String)
+ [m]	StringBuilder Insert(Int32,String,Int32)
+ [m]	StringBuilder Insert(Int32,UInt16)
+ [m]	StringBuilder Insert(Int32,UInt32)
+ [m]	StringBuilder Insert(Int32,UInt64)
+ [m]	StringBuilder Remove(Int32,Int32)
+ [m]	StringBuilder Replace(Char,Char)
+ [m]	StringBuilder Replace(Char,Char,Int32,Int32)
+ [m]	StringBuilder Replace(String,String)
+ [m]	StringBuilder Replace(String,String,Int32,Int32)
+ [m]	String ToString()
+ [m]	String ToString(Int32,Int32)

f [t] System.Security.AllowPartiallyTrustedCallersAttribute
+ [m]	Void .ctor()

f [t] System.Security.SecurityCriticalAttribute
+ [m]	Void .ctor()

f [t] System.Security.SecurityException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	String ToString()

f [t] System.Security.SecuritySafeCriticalAttribute
+ [m]	Void .ctor()

f [t] System.Security.SecurityTransparentAttribute
+ [m]	Void .ctor()

f [t] System.Security.VerificationException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Runtime.GCLargeObjectHeapCompactionMode

f [t] System.Runtime.GCLatencyMode

f [t] System.Runtime.GCSettings
+ [m]	Boolean get_IsServerGC()
+ [m]	GCLargeObjectHeapCompactionMode get_LargeObjectHeapCompactionMode()
+ [m]	Void set_LargeObjectHeapCompactionMode(GCLargeObjectHeapCompactionMode)
+ [m]	GCLatencyMode get_LatencyMode()
+ [m]	Void set_LatencyMode(GCLatencyMode)

f [t] System.Runtime.Versioning.TargetFrameworkAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_FrameworkDisplayName()
+ [m]	Void set_FrameworkDisplayName(String)
+ [m]	String get_FrameworkName()

f [t] System.Runtime.InteropServices.CharSet

f [t] System.Runtime.InteropServices.ComVisibleAttribute
+ [m]	Void .ctor(Boolean)
+ [m]	Boolean get_Value()

f [t] System.Runtime.InteropServices.FieldOffsetAttribute
+ [m]	Void .ctor(Int32)
+ [m]	Int32 get_Value()

f [t] System.Runtime.InteropServices.LayoutKind

f [t] System.Runtime.InteropServices.OutAttribute
+ [m]	Void .ctor()

f [t] System.Runtime.InteropServices.StructLayoutAttribute
+ [m]	Void .ctor(LayoutKind)
+ [m]	LayoutKind get_Value()

f [t] System.Runtime.ExceptionServices.ExceptionDispatchInfo
- [m]	Void .ctor()
+ [m]	Exception get_SourceException()
+ [m]	ExceptionDispatchInfo Capture(Exception)
+ [m]	Void Throw()

f [t] System.Runtime.CompilerServices.AccessedThroughPropertyAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_PropertyName()

f [t] System.Runtime.CompilerServices.AsyncStateMachineAttribute
+ [m]	Void .ctor(Type)

f [t] System.Runtime.CompilerServices.CallerFilePathAttribute
+ [m]	Void .ctor()

f [t] System.Runtime.CompilerServices.CallerLineNumberAttribute
+ [m]	Void .ctor()

f [t] System.Runtime.CompilerServices.CallerMemberNameAttribute
+ [m]	Void .ctor()

f [t] System.Runtime.CompilerServices.CompilationRelaxationsAttribute
+ [m]	Void .ctor(Int32)
+ [m]	Int32 get_CompilationRelaxations()

f [t] System.Runtime.CompilerServices.CompilerGeneratedAttribute
+ [m]	Void .ctor()

f [t] System.Runtime.CompilerServices.ConditionalWeakTable`2
+ [m]	Void .ctor()
+ [m]	Void Add(TKey,TValue)
- [m]	Void Finalize()
+ [m]	TValue GetOrCreateValue(TKey)
+ [m]	TValue GetValue(TKey,CreateValueCallback)
+ [m]	Boolean Remove(TKey)
+ [m]	Boolean TryGetValue(TKey,TValue&)

f [t] System.Runtime.CompilerServices.CustomConstantAttribute
+ [m]	Void .ctor()
+ [m]	Object get_Value()

f [t] System.Runtime.CompilerServices.DateTimeConstantAttribute
+ [m]	Void .ctor(Int64)
+ [m]	Object get_Value()

f [t] System.Runtime.CompilerServices.DecimalConstantAttribute
+ [m]	Void .ctor(Byte,Byte,Int32,Int32,Int32)
+ [m]	Void .ctor(Byte,Byte,UInt32,UInt32,UInt32)
+ [m]	Decimal get_Value()

f [t] System.Runtime.CompilerServices.DisablePrivateReflectionAttribute
+ [m]	Void .ctor()

f [t] System.Runtime.CompilerServices.ExtensionAttribute
+ [m]	Void .ctor()

f [t] System.Runtime.CompilerServices.FixedBufferAttribute
+ [m]	Void .ctor(Type,Int32)
+ [m]	Type get_ElementType()
+ [m]	Int32 get_Length()

f [t] System.Runtime.CompilerServices.FormattableStringFactory
+ [m]	FormattableString Create(String,Object[])

f [t] System.Runtime.CompilerServices.IndexerNameAttribute
+ [m]	Void .ctor(String)

f [t] System.Runtime.CompilerServices.InternalsVisibleToAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_AssemblyName()

f [t] System.Runtime.CompilerServices.IsConst

f [t] System.Runtime.CompilerServices.IStrongBox
+ [m]	Object get_Value()
+ [m]	Void set_Value(Object)

f [t] System.Runtime.CompilerServices.IsVolatile

f [t] System.Runtime.CompilerServices.IteratorStateMachineAttribute
+ [m]	Void .ctor(Type)

f [t] System.Runtime.CompilerServices.MethodImplAttribute
+ [m]	Void .ctor(MethodImplOptions)
+ [m]	MethodImplOptions get_Value()

f [t] System.Runtime.CompilerServices.MethodImplOptions

f [t] System.Runtime.CompilerServices.ReferenceAssemblyAttribute
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	String get_Description()

f [t] System.Runtime.CompilerServices.RuntimeCompatibilityAttribute
+ [m]	Void .ctor()
+ [m]	Boolean get_WrapNonExceptionThrows()
+ [m]	Void set_WrapNonExceptionThrows(Boolean)

f [t] System.Runtime.CompilerServices.RuntimeHelpers
+ [m]	Int32 get_OffsetToStringData()
+ [m]	Void EnsureSufficientExecutionStack()
+ [m]	Int32 GetHashCode(Object)
+ [m]	Object GetObjectValue(Object)
+ [m]	Void InitializeArray(Array,RuntimeFieldHandle)
+ [m]	Void RunClassConstructor(RuntimeTypeHandle)

f [t] System.Runtime.CompilerServices.StateMachineAttribute
+ [m]	Void .ctor(Type)
+ [m]	Type get_StateMachineType()

f [t] System.Runtime.CompilerServices.StrongBox`1
+ [m]	Void .ctor()
+ [m]	Void .ctor(T)
+ [m]	Object System.Runtime.CompilerServices.IStrongBox.get_Value()
+ [m]	Void System.Runtime.CompilerServices.IStrongBox.set_Value(Object)

f [t] System.Runtime.CompilerServices.TypeForwardedFromAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_AssemblyFullName()

f [t] System.Runtime.CompilerServices.TypeForwardedToAttribute
+ [m]	Void .ctor(Type)
+ [m]	Type get_Destination()

f [t] System.Runtime.CompilerServices.UnsafeValueTypeAttribute
+ [m]	Void .ctor()

f [t] System.Reflection.AssemblyCompanyAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_Company()

f [t] System.Reflection.AssemblyConfigurationAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_Configuration()

f [t] System.Reflection.AssemblyCopyrightAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_Copyright()

f [t] System.Reflection.AssemblyCultureAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_Culture()

f [t] System.Reflection.AssemblyDefaultAliasAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_DefaultAlias()

f [t] System.Reflection.AssemblyDelaySignAttribute
+ [m]	Void .ctor(Boolean)
+ [m]	Boolean get_DelaySign()

f [t] System.Reflection.AssemblyDescriptionAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_Description()

f [t] System.Reflection.AssemblyFileVersionAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_Version()

f [t] System.Reflection.AssemblyFlagsAttribute
+ [m]	Void .ctor(AssemblyNameFlags)
+ [m]	Int32 get_AssemblyFlags()

f [t] System.Reflection.AssemblyInformationalVersionAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_InformationalVersion()

f [t] System.Reflection.AssemblyKeyFileAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_KeyFile()

f [t] System.Reflection.AssemblyKeyNameAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_KeyName()

f [t] System.Reflection.AssemblyMetadataAttribute
+ [m]	Void .ctor(String,String)
+ [m]	String get_Key()
+ [m]	String get_Value()

f [t] System.Reflection.AssemblyNameFlags

f [t] System.Reflection.AssemblyProductAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_Product()

f [t] System.Reflection.AssemblySignatureKeyAttribute
+ [m]	Void .ctor(String,String)
+ [m]	String get_Countersignature()
+ [m]	String get_PublicKey()

f [t] System.Reflection.AssemblyTitleAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_Title()

f [t] System.Reflection.AssemblyTrademarkAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_Trademark()

f [t] System.Reflection.AssemblyVersionAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_Version()

f [t] System.Reflection.DefaultMemberAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_MemberName()

f [t] System.Reflection.ProcessorArchitecture

f [t] System.IO.DirectoryNotFoundException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.IO.FileLoadException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	Void .ctor(String,String)
+ [m]	Void .ctor(String,String,Exception)
+ [m]	String get_FileName()
+ [m]	String get_Message()
+ [m]	String ToString()

f [t] System.IO.FileNotFoundException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	Void .ctor(String,String)
+ [m]	Void .ctor(String,String,Exception)
+ [m]	String get_FileName()
+ [m]	String get_Message()
+ [m]	String ToString()

f [t] System.IO.IOException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	Void .ctor(String,Int32)

f [t] System.IO.PathTooLongException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Globalization.DateTimeStyles

f [t] System.Globalization.NumberStyles

f [t] System.Globalization.TimeSpanStyles

f [t] System.Diagnostics.ConditionalAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_ConditionString()

f [t] System.Diagnostics.DebuggableAttribute
+ [m]	Void .ctor(DebuggingModes)

f [t] System.ComponentModel.DefaultValueAttribute
+ [m]	Void .ctor(Boolean)
+ [m]	Void .ctor(Byte)
+ [m]	Void .ctor(Char)
+ [m]	Void .ctor(Double)
+ [m]	Void .ctor(Int16)
+ [m]	Void .ctor(Int32)
+ [m]	Void .ctor(Int64)
+ [m]	Void .ctor(Object)
+ [m]	Void .ctor(Single)
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(Type,String)
+ [m]	Object get_Value()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()

f [t] System.ComponentModel.EditorBrowsableAttribute
+ [m]	Void .ctor(EditorBrowsableState)
+ [m]	EditorBrowsableState get_State()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()

f [t] System.ComponentModel.EditorBrowsableState

f [t] System.Collections.DictionaryEntry
+ [m]	Void .ctor(Object,Object)
+ [m]	Object get_Key()
+ [m]	Void set_Key(Object)
+ [m]	Object get_Value()
+ [m]	Void set_Value(Object)

f [t] System.Collections.ICollection
+ [m]	Int32 get_Count()
+ [m]	Boolean get_IsSynchronized()
+ [m]	Object get_SyncRoot()
+ [m]	Void CopyTo(Array,Int32)

f [t] System.Collections.IComparer
+ [m]	Int32 Compare(Object,Object)

f [t] System.Collections.IDictionary
+ [m]	Boolean get_IsFixedSize()
+ [m]	Boolean get_IsReadOnly()
+ [m]	Object get_Item(Object)
+ [m]	Void set_Item(Object,Object)
+ [m]	ICollection get_Keys()
+ [m]	ICollection get_Values()
+ [m]	Void Add(Object,Object)
+ [m]	Void Clear()
+ [m]	Boolean Contains(Object)
+ [m]	IDictionaryEnumerator GetEnumerator()
+ [m]	Void Remove(Object)

f [t] System.Collections.IDictionaryEnumerator
+ [m]	DictionaryEntry get_Entry()
+ [m]	Object get_Key()
+ [m]	Object get_Value()

f [t] System.Collections.IEnumerable
+ [m]	IEnumerator GetEnumerator()

f [t] System.Collections.IEnumerator
+ [m]	Object get_Current()
+ [m]	Boolean MoveNext()
+ [m]	Void Reset()

f [t] System.Collections.IEqualityComparer
+ [m]	Boolean Equals(Object,Object)
+ [m]	Int32 GetHashCode(Object)

f [t] System.Collections.IList
+ [m]	Boolean get_IsFixedSize()
+ [m]	Boolean get_IsReadOnly()
+ [m]	Object get_Item(Int32)
+ [m]	Void set_Item(Int32,Object)
+ [m]	Int32 Add(Object)
+ [m]	Void Clear()
+ [m]	Boolean Contains(Object)
+ [m]	Int32 IndexOf(Object)
+ [m]	Void Insert(Int32,Object)
+ [m]	Void Remove(Object)
+ [m]	Void RemoveAt(Int32)

f [t] System.Collections.IStructuralComparable
+ [m]	Int32 CompareTo(Object,IComparer)

f [t] System.Collections.IStructuralEquatable
+ [m]	Boolean Equals(Object,IEqualityComparer)
+ [m]	Int32 GetHashCode(IEqualityComparer)

f [t] System.Collections.ObjectModel.Collection`1
+ [m]	Void .ctor()
+ [m]	Void .ctor(IList`1)
+ [m]	Int32 get_Count()
+ [m]	T get_Item(Int32)
+ [m]	Void set_Item(Int32,T)
+ [m]	IList`1 get_Items()
+ [m]	Boolean System.Collections.Generic.ICollection<T>.get_IsReadOnly()
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Boolean System.Collections.IList.get_IsFixedSize()
+ [m]	Boolean System.Collections.IList.get_IsReadOnly()
+ [m]	Object System.Collections.IList.get_Item(Int32)
+ [m]	Void System.Collections.IList.set_Item(Int32,Object)
+ [m]	Void Add(T)
+ [m]	Void Clear()
+ [m]	Void ClearItems()
+ [m]	Boolean Contains(T)
+ [m]	Void CopyTo(T[],Int32)
+ [m]	IEnumerator`1 GetEnumerator()
+ [m]	Int32 IndexOf(T)
+ [m]	Void Insert(Int32,T)
+ [m]	Void InsertItem(Int32,T)
+ [m]	Boolean Remove(T)
+ [m]	Void RemoveAt(Int32)
+ [m]	Void RemoveItem(Int32)
+ [m]	Void SetItem(Int32,T)
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	Int32 System.Collections.IList.Add(Object)
+ [m]	Boolean System.Collections.IList.Contains(Object)
+ [m]	Int32 System.Collections.IList.IndexOf(Object)
+ [m]	Void System.Collections.IList.Insert(Int32,Object)
+ [m]	Void System.Collections.IList.Remove(Object)

f [t] System.Collections.ObjectModel.ReadOnlyCollection`1
+ [m]	Void .ctor(IList`1)
+ [m]	Int32 get_Count()
+ [m]	T get_Item(Int32)
+ [m]	IList`1 get_Items()
+ [m]	Boolean System.Collections.Generic.ICollection<T>.get_IsReadOnly()
+ [m]	T System.Collections.Generic.IList<T>.get_Item(Int32)
+ [m]	Void System.Collections.Generic.IList<T>.set_Item(Int32,T)
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Boolean System.Collections.IList.get_IsFixedSize()
+ [m]	Boolean System.Collections.IList.get_IsReadOnly()
+ [m]	Object System.Collections.IList.get_Item(Int32)
+ [m]	Void System.Collections.IList.set_Item(Int32,Object)
+ [m]	Boolean Contains(T)
+ [m]	Void CopyTo(T[],Int32)
+ [m]	IEnumerator`1 GetEnumerator()
+ [m]	Int32 IndexOf(T)
+ [m]	Void System.Collections.Generic.ICollection<T>.Add(T)
+ [m]	Void System.Collections.Generic.ICollection<T>.Clear()
+ [m]	Boolean System.Collections.Generic.ICollection<T>.Remove(T)
+ [m]	Void System.Collections.Generic.IList<T>.Insert(Int32,T)
+ [m]	Void System.Collections.Generic.IList<T>.RemoveAt(Int32)
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	Int32 System.Collections.IList.Add(Object)
+ [m]	Void System.Collections.IList.Clear()
+ [m]	Boolean System.Collections.IList.Contains(Object)
+ [m]	Int32 System.Collections.IList.IndexOf(Object)
+ [m]	Void System.Collections.IList.Insert(Int32,Object)
+ [m]	Void System.Collections.IList.Remove(Object)
+ [m]	Void System.Collections.IList.RemoveAt(Int32)

f [t] System.Collections.Generic.ICollection`1
+ [m]	Int32 get_Count()
+ [m]	Boolean get_IsReadOnly()
+ [m]	Void Add(T)
+ [m]	Void Clear()
+ [m]	Boolean Contains(T)
+ [m]	Void CopyTo(T[],Int32)
+ [m]	Boolean Remove(T)

f [t] System.Collections.Generic.IComparer`1
+ [m]	Int32 Compare(T,T)

f [t] System.Collections.Generic.IDictionary`2
+ [m]	TValue get_Item(TKey)
+ [m]	Void set_Item(TKey,TValue)
+ [m]	ICollection`1 get_Keys()
+ [m]	ICollection`1 get_Values()
+ [m]	Void Add(TKey,TValue)
+ [m]	Boolean ContainsKey(TKey)
+ [m]	Boolean Remove(TKey)
+ [m]	Boolean TryGetValue(TKey,TValue&)

f [t] System.Collections.Generic.IEnumerable`1
+ [m]	IEnumerator`1 GetEnumerator()

f [t] System.Collections.Generic.IEnumerator`1
+ [m]	T get_Current()

f [t] System.Collections.Generic.IEqualityComparer`1
+ [m]	Boolean Equals(T,T)
+ [m]	Int32 GetHashCode(T)

f [t] System.Collections.Generic.IList`1
+ [m]	T get_Item(Int32)
+ [m]	Void set_Item(Int32,T)
+ [m]	Int32 IndexOf(T)
+ [m]	Void Insert(Int32,T)
+ [m]	Void RemoveAt(Int32)

f [t] System.Collections.Generic.IReadOnlyCollection`1
+ [m]	Int32 get_Count()

f [t] System.Collections.Generic.IReadOnlyDictionary`2
+ [m]	TValue get_Item(TKey)
+ [m]	IEnumerable`1 get_Keys()
+ [m]	IEnumerable`1 get_Values()
+ [m]	Boolean ContainsKey(TKey)
+ [m]	Boolean TryGetValue(TKey,TValue&)

f [t] System.Collections.Generic.IReadOnlyList`1
+ [m]	T get_Item(Int32)

f [t] System.Collections.Generic.ISet`1
+ [m]	Boolean Add(T)
+ [m]	Void ExceptWith(IEnumerable`1)
+ [m]	Void IntersectWith(IEnumerable`1)
+ [m]	Boolean IsProperSubsetOf(IEnumerable`1)
+ [m]	Boolean IsProperSupersetOf(IEnumerable`1)
+ [m]	Boolean IsSubsetOf(IEnumerable`1)
+ [m]	Boolean IsSupersetOf(IEnumerable`1)
+ [m]	Boolean Overlaps(IEnumerable`1)
+ [m]	Boolean SetEquals(IEnumerable`1)
+ [m]	Void SymmetricExceptWith(IEnumerable`1)
+ [m]	Void UnionWith(IEnumerable`1)

f [t] System.Collections.Generic.KeyNotFoundException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Collections.Generic.KeyValuePair`2
+ [m]	Void .ctor(TKey,TValue)
+ [m]	TKey get_Key()
+ [m]	TValue get_Value()
+ [m]	String ToString()

---------------------------------------
+ [a] System.Runtime.CompilerServices.VisualC.dll
ref: ./netstandard/packages/System.Runtime.CompilerServices.VisualC/ref/netstandard1.3/System.Runtime.CompilerServices.VisualC.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Runtime.CompilerServices.VisualC.dll

f [t] System.Runtime.CompilerServices.CallConvCdecl
+ [m]	Void .ctor()

f [t] System.Runtime.CompilerServices.CallConvFastcall
+ [m]	Void .ctor()

f [t] System.Runtime.CompilerServices.CallConvStdcall
+ [m]	Void .ctor()

f [t] System.Runtime.CompilerServices.CallConvThiscall
+ [m]	Void .ctor()

f [t] System.Runtime.CompilerServices.IsBoxed

f [t] System.Runtime.CompilerServices.IsByValue

f [t] System.Runtime.CompilerServices.IsCopyConstructed

f [t] System.Runtime.CompilerServices.IsExplicitlyDereferenced

f [t] System.Runtime.CompilerServices.IsImplicitlyDereferenced

f [t] System.Runtime.CompilerServices.IsJitIntrinsic

f [t] System.Runtime.CompilerServices.IsLong

f [t] System.Runtime.CompilerServices.IsSignUnspecifiedByte

f [t] System.Runtime.CompilerServices.IsUdtReturn

f [t] System.Runtime.CompilerServices.NativeCppClassAttribute
+ [m]	Void .ctor()

f [t] System.Runtime.CompilerServices.RequiredAttributeAttribute
+ [m]	Void .ctor(Type)
+ [m]	Type get_RequiredContract()

---------------------------------------
+ [a] System.Runtime.Extensions.dll
ref: ./netstandard/packages/System.Runtime.Extensions/ref/netstandard1.5/System.Runtime.Extensions.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Runtime.Extensions.dll

f [t] System.BitConverter
+ [m]	Int64 DoubleToInt64Bits(Double)
+ [m]	Byte[] GetBytes(Boolean)
+ [m]	Byte[] GetBytes(Char)
+ [m]	Byte[] GetBytes(Double)
+ [m]	Byte[] GetBytes(Int16)
+ [m]	Byte[] GetBytes(Int32)
+ [m]	Byte[] GetBytes(Int64)
+ [m]	Byte[] GetBytes(Single)
+ [m]	Byte[] GetBytes(UInt16)
+ [m]	Byte[] GetBytes(UInt32)
+ [m]	Byte[] GetBytes(UInt64)
+ [m]	Double Int64BitsToDouble(Int64)
+ [m]	Boolean ToBoolean(Byte[],Int32)
+ [m]	Char ToChar(Byte[],Int32)
+ [m]	Double ToDouble(Byte[],Int32)
+ [m]	Int16 ToInt16(Byte[],Int32)
+ [m]	Int32 ToInt32(Byte[],Int32)
+ [m]	Int64 ToInt64(Byte[],Int32)
+ [m]	Single ToSingle(Byte[],Int32)
+ [m]	String ToString(Byte[])
+ [m]	String ToString(Byte[],Int32)
+ [m]	String ToString(Byte[],Int32,Int32)
+ [m]	UInt16 ToUInt16(Byte[],Int32)
+ [m]	UInt32 ToUInt32(Byte[],Int32)
+ [m]	UInt64 ToUInt64(Byte[],Int32)

f [t] System.Convert
+ [m]	Object ChangeType(Object,Type)
+ [m]	Object ChangeType(Object,Type,IFormatProvider)
+ [m]	Object ChangeType(Object,TypeCode,IFormatProvider)
+ [m]	Byte[] FromBase64CharArray(Char[],Int32,Int32)
+ [m]	Byte[] FromBase64String(String)
+ [m]	TypeCode GetTypeCode(Object)
+ [m]	Int32 ToBase64CharArray(Byte[],Int32,Int32,Char[],Int32)
+ [m]	String ToBase64String(Byte[])
+ [m]	String ToBase64String(Byte[],Int32,Int32)
+ [m]	Boolean ToBoolean(Boolean)
+ [m]	Boolean ToBoolean(Byte)
+ [m]	Boolean ToBoolean(Decimal)
+ [m]	Boolean ToBoolean(Double)
+ [m]	Boolean ToBoolean(Int16)
+ [m]	Boolean ToBoolean(Int32)
+ [m]	Boolean ToBoolean(Int64)
+ [m]	Boolean ToBoolean(Object)
+ [m]	Boolean ToBoolean(Object,IFormatProvider)
+ [m]	Boolean ToBoolean(SByte)
+ [m]	Boolean ToBoolean(Single)
+ [m]	Boolean ToBoolean(String)
+ [m]	Boolean ToBoolean(String,IFormatProvider)
+ [m]	Boolean ToBoolean(UInt16)
+ [m]	Boolean ToBoolean(UInt32)
+ [m]	Boolean ToBoolean(UInt64)
+ [m]	Byte ToByte(Boolean)
+ [m]	Byte ToByte(Byte)
+ [m]	Byte ToByte(Char)
+ [m]	Byte ToByte(Decimal)
+ [m]	Byte ToByte(Double)
+ [m]	Byte ToByte(Int16)
+ [m]	Byte ToByte(Int32)
+ [m]	Byte ToByte(Int64)
+ [m]	Byte ToByte(Object)
+ [m]	Byte ToByte(Object,IFormatProvider)
+ [m]	Byte ToByte(SByte)
+ [m]	Byte ToByte(Single)
+ [m]	Byte ToByte(String)
+ [m]	Byte ToByte(String,IFormatProvider)
+ [m]	Byte ToByte(String,Int32)
+ [m]	Byte ToByte(UInt16)
+ [m]	Byte ToByte(UInt32)
+ [m]	Byte ToByte(UInt64)
+ [m]	Char ToChar(Byte)
+ [m]	Char ToChar(Int16)
+ [m]	Char ToChar(Int32)
+ [m]	Char ToChar(Int64)
+ [m]	Char ToChar(Object)
+ [m]	Char ToChar(Object,IFormatProvider)
+ [m]	Char ToChar(SByte)
+ [m]	Char ToChar(String)
+ [m]	Char ToChar(String,IFormatProvider)
+ [m]	Char ToChar(UInt16)
+ [m]	Char ToChar(UInt32)
+ [m]	Char ToChar(UInt64)
+ [m]	DateTime ToDateTime(Object)
+ [m]	DateTime ToDateTime(Object,IFormatProvider)
+ [m]	DateTime ToDateTime(String)
+ [m]	DateTime ToDateTime(String,IFormatProvider)
+ [m]	Decimal ToDecimal(Boolean)
+ [m]	Decimal ToDecimal(Byte)
+ [m]	Decimal ToDecimal(Decimal)
+ [m]	Decimal ToDecimal(Double)
+ [m]	Decimal ToDecimal(Int16)
+ [m]	Decimal ToDecimal(Int32)
+ [m]	Decimal ToDecimal(Int64)
+ [m]	Decimal ToDecimal(Object)
+ [m]	Decimal ToDecimal(Object,IFormatProvider)
+ [m]	Decimal ToDecimal(SByte)
+ [m]	Decimal ToDecimal(Single)
+ [m]	Decimal ToDecimal(String)
+ [m]	Decimal ToDecimal(String,IFormatProvider)
+ [m]	Decimal ToDecimal(UInt16)
+ [m]	Decimal ToDecimal(UInt32)
+ [m]	Decimal ToDecimal(UInt64)
+ [m]	Double ToDouble(Boolean)
+ [m]	Double ToDouble(Byte)
+ [m]	Double ToDouble(Decimal)
+ [m]	Double ToDouble(Double)
+ [m]	Double ToDouble(Int16)
+ [m]	Double ToDouble(Int32)
+ [m]	Double ToDouble(Int64)
+ [m]	Double ToDouble(Object)
+ [m]	Double ToDouble(Object,IFormatProvider)
+ [m]	Double ToDouble(SByte)
+ [m]	Double ToDouble(Single)
+ [m]	Double ToDouble(String)
+ [m]	Double ToDouble(String,IFormatProvider)
+ [m]	Double ToDouble(UInt16)
+ [m]	Double ToDouble(UInt32)
+ [m]	Double ToDouble(UInt64)
+ [m]	Int16 ToInt16(Boolean)
+ [m]	Int16 ToInt16(Byte)
+ [m]	Int16 ToInt16(Char)
+ [m]	Int16 ToInt16(Decimal)
+ [m]	Int16 ToInt16(Double)
+ [m]	Int16 ToInt16(Int16)
+ [m]	Int16 ToInt16(Int32)
+ [m]	Int16 ToInt16(Int64)
+ [m]	Int16 ToInt16(Object)
+ [m]	Int16 ToInt16(Object,IFormatProvider)
+ [m]	Int16 ToInt16(SByte)
+ [m]	Int16 ToInt16(Single)
+ [m]	Int16 ToInt16(String)
+ [m]	Int16 ToInt16(String,IFormatProvider)
+ [m]	Int16 ToInt16(String,Int32)
+ [m]	Int16 ToInt16(UInt16)
+ [m]	Int16 ToInt16(UInt32)
+ [m]	Int16 ToInt16(UInt64)
+ [m]	Int32 ToInt32(Boolean)
+ [m]	Int32 ToInt32(Byte)
+ [m]	Int32 ToInt32(Char)
+ [m]	Int32 ToInt32(Decimal)
+ [m]	Int32 ToInt32(Double)
+ [m]	Int32 ToInt32(Int16)
+ [m]	Int32 ToInt32(Int32)
+ [m]	Int32 ToInt32(Int64)
+ [m]	Int32 ToInt32(Object)
+ [m]	Int32 ToInt32(Object,IFormatProvider)
+ [m]	Int32 ToInt32(SByte)
+ [m]	Int32 ToInt32(Single)
+ [m]	Int32 ToInt32(String)
+ [m]	Int32 ToInt32(String,IFormatProvider)
+ [m]	Int32 ToInt32(String,Int32)
+ [m]	Int32 ToInt32(UInt16)
+ [m]	Int32 ToInt32(UInt32)
+ [m]	Int32 ToInt32(UInt64)
+ [m]	Int64 ToInt64(Boolean)
+ [m]	Int64 ToInt64(Byte)
+ [m]	Int64 ToInt64(Char)
+ [m]	Int64 ToInt64(Decimal)
+ [m]	Int64 ToInt64(Double)
+ [m]	Int64 ToInt64(Int16)
+ [m]	Int64 ToInt64(Int32)
+ [m]	Int64 ToInt64(Int64)
+ [m]	Int64 ToInt64(Object)
+ [m]	Int64 ToInt64(Object,IFormatProvider)
+ [m]	Int64 ToInt64(SByte)
+ [m]	Int64 ToInt64(Single)
+ [m]	Int64 ToInt64(String)
+ [m]	Int64 ToInt64(String,IFormatProvider)
+ [m]	Int64 ToInt64(String,Int32)
+ [m]	Int64 ToInt64(UInt16)
+ [m]	Int64 ToInt64(UInt32)
+ [m]	Int64 ToInt64(UInt64)
+ [m]	SByte ToSByte(Boolean)
+ [m]	SByte ToSByte(Byte)
+ [m]	SByte ToSByte(Char)
+ [m]	SByte ToSByte(Decimal)
+ [m]	SByte ToSByte(Double)
+ [m]	SByte ToSByte(Int16)
+ [m]	SByte ToSByte(Int32)
+ [m]	SByte ToSByte(Int64)
+ [m]	SByte ToSByte(Object)
+ [m]	SByte ToSByte(Object,IFormatProvider)
+ [m]	SByte ToSByte(SByte)
+ [m]	SByte ToSByte(Single)
+ [m]	SByte ToSByte(String)
+ [m]	SByte ToSByte(String,IFormatProvider)
+ [m]	SByte ToSByte(String,Int32)
+ [m]	SByte ToSByte(UInt16)
+ [m]	SByte ToSByte(UInt32)
+ [m]	SByte ToSByte(UInt64)
+ [m]	Single ToSingle(Boolean)
+ [m]	Single ToSingle(Byte)
+ [m]	Single ToSingle(Decimal)
+ [m]	Single ToSingle(Double)
+ [m]	Single ToSingle(Int16)
+ [m]	Single ToSingle(Int32)
+ [m]	Single ToSingle(Int64)
+ [m]	Single ToSingle(Object)
+ [m]	Single ToSingle(Object,IFormatProvider)
+ [m]	Single ToSingle(SByte)
+ [m]	Single ToSingle(Single)
+ [m]	Single ToSingle(String)
+ [m]	Single ToSingle(String,IFormatProvider)
+ [m]	Single ToSingle(UInt16)
+ [m]	Single ToSingle(UInt32)
+ [m]	Single ToSingle(UInt64)
+ [m]	String ToString(Boolean)
+ [m]	String ToString(Boolean,IFormatProvider)
+ [m]	String ToString(Byte)
+ [m]	String ToString(Byte,IFormatProvider)
+ [m]	String ToString(Byte,Int32)
+ [m]	String ToString(Char)
+ [m]	String ToString(Char,IFormatProvider)
+ [m]	String ToString(DateTime)
+ [m]	String ToString(DateTime,IFormatProvider)
+ [m]	String ToString(Decimal)
+ [m]	String ToString(Decimal,IFormatProvider)
+ [m]	String ToString(Double)
+ [m]	String ToString(Double,IFormatProvider)
+ [m]	String ToString(Int16)
+ [m]	String ToString(Int16,IFormatProvider)
+ [m]	String ToString(Int16,Int32)
+ [m]	String ToString(Int32)
+ [m]	String ToString(Int32,IFormatProvider)
+ [m]	String ToString(Int32,Int32)
+ [m]	String ToString(Int64)
+ [m]	String ToString(Int64,IFormatProvider)
+ [m]	String ToString(Int64,Int32)
+ [m]	String ToString(Object)
+ [m]	String ToString(Object,IFormatProvider)
+ [m]	String ToString(SByte)
+ [m]	String ToString(SByte,IFormatProvider)
+ [m]	String ToString(Single)
+ [m]	String ToString(Single,IFormatProvider)
+ [m]	String ToString(UInt16)
+ [m]	String ToString(UInt16,IFormatProvider)
+ [m]	String ToString(UInt32)
+ [m]	String ToString(UInt32,IFormatProvider)
+ [m]	String ToString(UInt64)
+ [m]	String ToString(UInt64,IFormatProvider)
+ [m]	UInt16 ToUInt16(Boolean)
+ [m]	UInt16 ToUInt16(Byte)
+ [m]	UInt16 ToUInt16(Char)
+ [m]	UInt16 ToUInt16(Decimal)
+ [m]	UInt16 ToUInt16(Double)
+ [m]	UInt16 ToUInt16(Int16)
+ [m]	UInt16 ToUInt16(Int32)
+ [m]	UInt16 ToUInt16(Int64)
+ [m]	UInt16 ToUInt16(Object)
+ [m]	UInt16 ToUInt16(Object,IFormatProvider)
+ [m]	UInt16 ToUInt16(SByte)
+ [m]	UInt16 ToUInt16(Single)
+ [m]	UInt16 ToUInt16(String)
+ [m]	UInt16 ToUInt16(String,IFormatProvider)
+ [m]	UInt16 ToUInt16(String,Int32)
+ [m]	UInt16 ToUInt16(UInt16)
+ [m]	UInt16 ToUInt16(UInt32)
+ [m]	UInt16 ToUInt16(UInt64)
+ [m]	UInt32 ToUInt32(Boolean)
+ [m]	UInt32 ToUInt32(Byte)
+ [m]	UInt32 ToUInt32(Char)
+ [m]	UInt32 ToUInt32(Decimal)
+ [m]	UInt32 ToUInt32(Double)
+ [m]	UInt32 ToUInt32(Int16)
+ [m]	UInt32 ToUInt32(Int32)
+ [m]	UInt32 ToUInt32(Int64)
+ [m]	UInt32 ToUInt32(Object)
+ [m]	UInt32 ToUInt32(Object,IFormatProvider)
+ [m]	UInt32 ToUInt32(SByte)
+ [m]	UInt32 ToUInt32(Single)
+ [m]	UInt32 ToUInt32(String)
+ [m]	UInt32 ToUInt32(String,IFormatProvider)
+ [m]	UInt32 ToUInt32(String,Int32)
+ [m]	UInt32 ToUInt32(UInt16)
+ [m]	UInt32 ToUInt32(UInt32)
+ [m]	UInt32 ToUInt32(UInt64)
+ [m]	UInt64 ToUInt64(Boolean)
+ [m]	UInt64 ToUInt64(Byte)
+ [m]	UInt64 ToUInt64(Char)
+ [m]	UInt64 ToUInt64(Decimal)
+ [m]	UInt64 ToUInt64(Double)
+ [m]	UInt64 ToUInt64(Int16)
+ [m]	UInt64 ToUInt64(Int32)
+ [m]	UInt64 ToUInt64(Int64)
+ [m]	UInt64 ToUInt64(Object)
+ [m]	UInt64 ToUInt64(Object,IFormatProvider)
+ [m]	UInt64 ToUInt64(SByte)
+ [m]	UInt64 ToUInt64(Single)
+ [m]	UInt64 ToUInt64(String)
+ [m]	UInt64 ToUInt64(String,IFormatProvider)
+ [m]	UInt64 ToUInt64(String,Int32)
+ [m]	UInt64 ToUInt64(UInt16)
+ [m]	UInt64 ToUInt64(UInt32)
+ [m]	UInt64 ToUInt64(UInt64)

f [t] System.Environment
+ [m]	Int32 get_CurrentManagedThreadId()
+ [m]	Boolean get_HasShutdownStarted()
+ [m]	String get_MachineName()
+ [m]	String get_NewLine()
+ [m]	Int32 get_ProcessorCount()
+ [m]	String get_StackTrace()
+ [m]	Int32 get_TickCount()
+ [m]	String ExpandEnvironmentVariables(String)
+ [m]	Void Exit(Int32)
! [m]	Void FailFast(String)
! [m]	Void FailFast(String,Exception)
+ [m]	String GetEnvironmentVariable(String)
+ [m]	IDictionary GetEnvironmentVariables()
+ [m]	Void SetEnvironmentVariable(String,String)
+ [m]	String[] GetCommandLineArgs()

f [t] System.Math
+ [m]	Decimal Abs(Decimal)
+ [m]	Double Abs(Double)
+ [m]	Int16 Abs(Int16)
+ [m]	Int32 Abs(Int32)
+ [m]	Int64 Abs(Int64)
+ [m]	SByte Abs(SByte)
+ [m]	Single Abs(Single)
+ [m]	Double Acos(Double)
+ [m]	Double Asin(Double)
+ [m]	Double Atan(Double)
+ [m]	Double Atan2(Double,Double)
+ [m]	Decimal Ceiling(Decimal)
+ [m]	Double Ceiling(Double)
+ [m]	Double Cos(Double)
+ [m]	Double Cosh(Double)
+ [m]	Double Exp(Double)
+ [m]	Decimal Floor(Decimal)
+ [m]	Double Floor(Double)
+ [m]	Double IEEERemainder(Double,Double)
+ [m]	Double Log(Double)
+ [m]	Double Log(Double,Double)
+ [m]	Double Log10(Double)
+ [m]	Byte Max(Byte,Byte)
+ [m]	Decimal Max(Decimal,Decimal)
+ [m]	Double Max(Double,Double)
+ [m]	Int16 Max(Int16,Int16)
+ [m]	Int32 Max(Int32,Int32)
+ [m]	Int64 Max(Int64,Int64)
+ [m]	SByte Max(SByte,SByte)
+ [m]	Single Max(Single,Single)
+ [m]	UInt16 Max(UInt16,UInt16)
+ [m]	UInt32 Max(UInt32,UInt32)
+ [m]	UInt64 Max(UInt64,UInt64)
+ [m]	Byte Min(Byte,Byte)
+ [m]	Decimal Min(Decimal,Decimal)
+ [m]	Double Min(Double,Double)
+ [m]	Int16 Min(Int16,Int16)
+ [m]	Int32 Min(Int32,Int32)
+ [m]	Int64 Min(Int64,Int64)
+ [m]	SByte Min(SByte,SByte)
+ [m]	Single Min(Single,Single)
+ [m]	UInt16 Min(UInt16,UInt16)
+ [m]	UInt32 Min(UInt32,UInt32)
+ [m]	UInt64 Min(UInt64,UInt64)
+ [m]	Double Pow(Double,Double)
+ [m]	Decimal Round(Decimal)
+ [m]	Decimal Round(Decimal,Int32)
+ [m]	Decimal Round(Decimal,Int32,MidpointRounding)
+ [m]	Decimal Round(Decimal,MidpointRounding)
+ [m]	Double Round(Double)
+ [m]	Double Round(Double,Int32)
+ [m]	Double Round(Double,Int32,MidpointRounding)
+ [m]	Double Round(Double,MidpointRounding)
+ [m]	Int32 Sign(Decimal)
+ [m]	Int32 Sign(Double)
+ [m]	Int32 Sign(Int16)
+ [m]	Int32 Sign(Int32)
+ [m]	Int32 Sign(Int64)
+ [m]	Int32 Sign(SByte)
+ [m]	Int32 Sign(Single)
+ [m]	Double Sin(Double)
+ [m]	Double Sinh(Double)
+ [m]	Double Sqrt(Double)
+ [m]	Double Tan(Double)
+ [m]	Double Tanh(Double)
+ [m]	Decimal Truncate(Decimal)
+ [m]	Double Truncate(Double)

f [t] System.MidpointRounding

f [t] System.Progress`1
+ [m]	Void .ctor()
+ [m]	Void .ctor(Action`1)
+ [m]	Void add_ProgressChanged(EventHandler`1)
+ [m]	Void remove_ProgressChanged(EventHandler`1)
+ [m]	Void OnReport(T)
+ [m]	Void System.IProgress<T>.Report(T)

f [t] System.Random
+ [m]	Void .ctor()
+ [m]	Void .ctor(Int32)
+ [m]	Int32 Next()
+ [m]	Int32 Next(Int32)
+ [m]	Int32 Next(Int32,Int32)
+ [m]	Void NextBytes(Byte[])
+ [m]	Double NextDouble()
+ [m]	Double Sample()

f [t] System.StringComparer
+ [m]	Void .ctor()
+ [m]	StringComparer get_CurrentCulture()
+ [m]	StringComparer get_CurrentCultureIgnoreCase()
+ [m]	StringComparer get_Ordinal()
+ [m]	StringComparer get_OrdinalIgnoreCase()
+ [m]	Int32 Compare(String,String)
+ [m]	Boolean Equals(String,String)
+ [m]	Int32 GetHashCode(String)
- [m]	Int32 System.Collections.IComparer.Compare(Object,Object)
- [m]	Boolean System.Collections.IEqualityComparer.Equals(Object,Object)
- [m]	Int32 System.Collections.IEqualityComparer.GetHashCode(Object)

f [t] System.UriBuilder
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,String)
+ [m]	Void .ctor(String,String,Int32)
+ [m]	Void .ctor(String,String,Int32,String)
+ [m]	Void .ctor(String,String,Int32,String,String)
+ [m]	Void .ctor(Uri)
+ [m]	String get_Fragment()
+ [m]	Void set_Fragment(String)
+ [m]	String get_Host()
+ [m]	Void set_Host(String)
+ [m]	String get_Password()
+ [m]	Void set_Password(String)
+ [m]	String get_Path()
+ [m]	Void set_Path(String)
+ [m]	Int32 get_Port()
+ [m]	Void set_Port(Int32)
+ [m]	String get_Query()
+ [m]	Void set_Query(String)
+ [m]	String get_Scheme()
+ [m]	Void set_Scheme(String)
+ [m]	Uri get_Uri()
+ [m]	String get_UserName()
+ [m]	Void set_UserName(String)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	String ToString()

f [t] System.Runtime.Versioning.FrameworkName
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Version)
+ [m]	Void .ctor(String,Version,String)
+ [m]	String get_FullName()
+ [m]	String get_Identifier()
+ [m]	String get_Profile()
+ [m]	Version get_Version()
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(FrameworkName)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(FrameworkName,FrameworkName)
+ [m]	Boolean op_Inequality(FrameworkName,FrameworkName)
+ [m]	String ToString()

f [t] System.Net.WebUtility
+ [m]	String HtmlDecode(String)
+ [m]	String HtmlEncode(String)
+ [m]	String UrlDecode(String)
+ [m]	Byte[] UrlDecodeToBytes(Byte[],Int32,Int32)
+ [m]	String UrlEncode(String)
+ [m]	Byte[] UrlEncodeToBytes(Byte[],Int32,Int32)

f [t] System.IO.Path
+ [m]	String ChangeExtension(String,String)
+ [m]	String Combine(String,String)
+ [m]	String Combine(String,String,String)
+ [m]	String Combine(String[])
+ [m]	String GetDirectoryName(String)
+ [m]	String GetExtension(String)
+ [m]	String GetFileName(String)
+ [m]	String GetFileNameWithoutExtension(String)
+ [m]	String GetFullPath(String)
+ [m]	Char[] GetInvalidFileNameChars()
+ [m]	Char[] GetInvalidPathChars()
+ [m]	String GetPathRoot(String)
+ [m]	String GetRandomFileName()
+ [m]	String GetTempFileName()
+ [m]	String GetTempPath()
+ [m]	Boolean HasExtension(String)
+ [m]	Boolean IsPathRooted(String)

f [t] System.Diagnostics.Stopwatch
+ [m]	Void .ctor()
+ [m]	TimeSpan get_Elapsed()
+ [m]	Int64 get_ElapsedMilliseconds()
+ [m]	Int64 get_ElapsedTicks()
+ [m]	Boolean get_IsRunning()
+ [m]	Int64 GetTimestamp()
+ [m]	Void Reset()
+ [m]	Void Restart()
+ [m]	Void Start()
+ [m]	Stopwatch StartNew()
+ [m]	Void Stop()

---------------------------------------
+ [a] System.Runtime.Handles.dll
ref: ./netstandard/packages/System.Runtime.Handles/ref/netstandard1.3/System.Runtime.Handles.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Runtime.Handles.dll

f [t] System.Threading.WaitHandleExtensions
+ [m]	SafeWaitHandle GetSafeWaitHandle(WaitHandle)
+ [m]	Void SetSafeWaitHandle(WaitHandle,SafeWaitHandle)

f [t] System.Runtime.InteropServices.CriticalHandle
+ [m]	Void .ctor(IntPtr)
+ [m]	Boolean get_IsClosed()
+ [m]	Boolean get_IsInvalid()
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Boolean ReleaseHandle()
+ [m]	Void SetHandle(IntPtr)
+ [m]	Void SetHandleAsInvalid()
+ [m]	Void Finalize()

f [t] System.Runtime.InteropServices.SafeHandle
+ [m]	Void .ctor(IntPtr,Boolean)
+ [m]	Boolean get_IsClosed()
+ [m]	Boolean get_IsInvalid()
+ [m]	Void DangerousAddRef(Boolean&)
+ [m]	IntPtr DangerousGetHandle()
+ [m]	Void DangerousRelease()
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Boolean ReleaseHandle()
+ [m]	Void SetHandle(IntPtr)
+ [m]	Void SetHandleAsInvalid()
+ [m]	Void Finalize()

f [t] System.IO.HandleInheritability

f [t] Microsoft.Win32.SafeHandles.SafeWaitHandle
+ [m]	Void .ctor(IntPtr,Boolean)
+ [m]	Boolean ReleaseHandle()
- [m]	Boolean get_IsInvalid()

---------------------------------------
+ [a] System.Runtime.InteropServices.dll
ref: ./netstandard/packages/System.Runtime.InteropServices/ref/netstandard1.5/System.Runtime.InteropServices.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Runtime.InteropServices.dll

f [t] System.DataMisalignedException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.DllNotFoundException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Runtime.InteropServices.ArrayWithOffset
+ [m]	Void .ctor(Object,Int32)
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(ArrayWithOffset)
+ [m]	Object GetArray()
+ [m]	Int32 GetHashCode()
+ [m]	Int32 GetOffset()
+ [m]	Boolean op_Equality(ArrayWithOffset,ArrayWithOffset)
+ [m]	Boolean op_Inequality(ArrayWithOffset,ArrayWithOffset)

f [t] System.Runtime.InteropServices.BestFitMappingAttribute
+ [m]	Void .ctor(Boolean)
+ [m]	Boolean get_BestFitMapping()

f [t] System.Runtime.InteropServices.BStrWrapper
+ [m]	Void .ctor(Object)
+ [m]	Void .ctor(String)
+ [m]	String get_WrappedObject()

f [t] System.Runtime.InteropServices.CallingConvention

f [t] System.Runtime.InteropServices.ClassInterfaceAttribute
+ [m]	Void .ctor(Int16)
+ [m]	Void .ctor(ClassInterfaceType)
+ [m]	ClassInterfaceType get_Value()

f [t] System.Runtime.InteropServices.ClassInterfaceType

f [t] System.Runtime.InteropServices.CoClassAttribute
+ [m]	Void .ctor(Type)
+ [m]	Type get_CoClass()

f [t] System.Runtime.InteropServices.ComAwareEventInfo
+ [m]	Void .ctor(Type,String)
! [m]	EventAttributes get_Attributes()
! [m]	Type get_DeclaringType()
! [m]	String get_Name()
! [m]	Void AddEventHandler(Object,Delegate)
! [m]	Void RemoveEventHandler(Object,Delegate)

f [t] System.Runtime.InteropServices.ComDefaultInterfaceAttribute
+ [m]	Void .ctor(Type)
+ [m]	Type get_Value()

f [t] System.Runtime.InteropServices.ComEventInterfaceAttribute
+ [m]	Void .ctor(Type,Type)
+ [m]	Type get_EventProvider()
+ [m]	Type get_SourceInterface()

f [t] System.Runtime.InteropServices.ComEventsHelper
! [m]	Void Combine(Object,Guid,Int32,Delegate)
! [m]	Delegate Remove(Object,Guid,Int32,Delegate)

f [t] System.Runtime.InteropServices.COMException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	Void .ctor(String,Int32)

f [t] System.Runtime.InteropServices.ComImportAttribute
+ [m]	Void .ctor()

f [t] System.Runtime.InteropServices.ComInterfaceType

f [t] System.Runtime.InteropServices.ComMemberType

f [t] System.Runtime.InteropServices.ComSourceInterfacesAttribute
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(Type)
+ [m]	Void .ctor(Type,Type)
+ [m]	Void .ctor(Type,Type,Type)
+ [m]	Void .ctor(Type,Type,Type,Type)
+ [m]	String get_Value()

f [t] System.Runtime.InteropServices.CurrencyWrapper
+ [m]	Void .ctor(Decimal)
+ [m]	Void .ctor(Object)
+ [m]	Decimal get_WrappedObject()

f [t] System.Runtime.InteropServices.CustomQueryInterfaceMode

f [t] System.Runtime.InteropServices.CustomQueryInterfaceResult

f [t] System.Runtime.InteropServices.DefaultCharSetAttribute
+ [m]	Void .ctor(CharSet)
+ [m]	CharSet get_CharSet()

f [t] System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute
+ [m]	Void .ctor(DllImportSearchPath)
+ [m]	DllImportSearchPath get_Paths()

f [t] System.Runtime.InteropServices.DefaultParameterValueAttribute
+ [m]	Void .ctor(Object)
+ [m]	Object get_Value()

f [t] System.Runtime.InteropServices.DispatchWrapper
+ [m]	Void .ctor(Object)
+ [m]	Object get_WrappedObject()

f [t] System.Runtime.InteropServices.DispIdAttribute
+ [m]	Void .ctor(Int32)
+ [m]	Int32 get_Value()

f [t] System.Runtime.InteropServices.DllImportAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_Value()

f [t] System.Runtime.InteropServices.DllImportSearchPath

f [t] System.Runtime.InteropServices.ErrorWrapper
+ [m]	Void .ctor(Exception)
+ [m]	Void .ctor(Int32)
+ [m]	Void .ctor(Object)
+ [m]	Int32 get_ErrorCode()

f [t] System.Runtime.InteropServices.GCHandle
+ [m]	Boolean get_IsAllocated()
+ [m]	Object get_Target()
+ [m]	Void set_Target(Object)
+ [m]	IntPtr AddrOfPinnedObject()
+ [m]	GCHandle Alloc(Object)
+ [m]	GCHandle Alloc(Object,GCHandleType)
+ [m]	Boolean Equals(Object)
+ [m]	Void Free()
+ [m]	GCHandle FromIntPtr(IntPtr)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(GCHandle,GCHandle)
+ [m]	GCHandle op_Explicit(IntPtr)
+ [m]	IntPtr op_Explicit(GCHandle)
+ [m]	Boolean op_Inequality(GCHandle,GCHandle)
+ [m]	IntPtr ToIntPtr(GCHandle)

f [t] System.Runtime.InteropServices.GCHandleType

f [t] System.Runtime.InteropServices.GuidAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_Value()

f [t] System.Runtime.InteropServices.HandleCollector
+ [m]	Void .ctor(String,Int32)
+ [m]	Void .ctor(String,Int32,Int32)
+ [m]	Int32 get_Count()
+ [m]	Int32 get_InitialThreshold()
+ [m]	Int32 get_MaximumThreshold()
+ [m]	String get_Name()
+ [m]	Void Add()
+ [m]	Void Remove()

f [t] System.Runtime.InteropServices.ICustomAdapter
+ [m]	Object GetUnderlyingObject()

f [t] System.Runtime.InteropServices.ICustomQueryInterface
+ [m]	CustomQueryInterfaceResult GetInterface(Guid&,IntPtr&)

f [t] System.Runtime.InteropServices.InAttribute
+ [m]	Void .ctor()

f [t] System.Runtime.InteropServices.InterfaceTypeAttribute
+ [m]	Void .ctor(Int16)
+ [m]	Void .ctor(ComInterfaceType)
+ [m]	ComInterfaceType get_Value()

f [t] System.Runtime.InteropServices.InvalidComObjectException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Runtime.InteropServices.InvalidOleVariantTypeException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Runtime.InteropServices.Marshal
! [m]	Int32 AddRef(IntPtr)
+ [m]	IntPtr AllocCoTaskMem(Int32)
+ [m]	IntPtr AllocHGlobal(Int32)
+ [m]	IntPtr AllocHGlobal(IntPtr)
- [m]	Boolean AreComObjectsAvailableForCleanup()
+ [m]	Void Copy(Byte[],Int32,IntPtr,Int32)
+ [m]	Void Copy(Char[],Int32,IntPtr,Int32)
+ [m]	Void Copy(Double[],Int32,IntPtr,Int32)
+ [m]	Void Copy(Int16[],Int32,IntPtr,Int32)
+ [m]	Void Copy(Int32[],Int32,IntPtr,Int32)
+ [m]	Void Copy(Int64[],Int32,IntPtr,Int32)
+ [m]	Void Copy(IntPtr,Byte[],Int32,Int32)
+ [m]	Void Copy(IntPtr,Char[],Int32,Int32)
+ [m]	Void Copy(IntPtr,Double[],Int32,Int32)
+ [m]	Void Copy(IntPtr,Int16[],Int32,Int32)
+ [m]	Void Copy(IntPtr,Int32[],Int32,Int32)
+ [m]	Void Copy(IntPtr,Int64[],Int32,Int32)
+ [m]	Void Copy(IntPtr,IntPtr[],Int32,Int32)
+ [m]	Void Copy(IntPtr,Single[],Int32,Int32)
+ [m]	Void Copy(IntPtr[],Int32,IntPtr,Int32)
+ [m]	Void Copy(Single[],Int32,IntPtr,Int32)
! [m]	IntPtr CreateAggregatedObject(IntPtr,Object)
+ [m]	IntPtr CreateAggregatedObject(IntPtr,T)
+ [m]	Object CreateWrapperOfType(Object,Type)
+ [m]	TWrapper CreateWrapperOfType(T)
+ [m]	Void DestroyStructure(IntPtr,Type)
+ [m]	Void DestroyStructure(IntPtr)
+ [m]	Int32 FinalReleaseComObject(Object)
+ [m]	Void FreeBSTR(IntPtr)
+ [m]	Void FreeCoTaskMem(IntPtr)
+ [m]	Void FreeHGlobal(IntPtr)
! [m]	IntPtr GetComInterfaceForObject(Object,Type)
- [m]	IntPtr GetComInterfaceForObject(Object,Type,CustomQueryInterfaceMode)
+ [m]	IntPtr GetComInterfaceForObject(T)
+ [m]	Delegate GetDelegateForFunctionPointer(IntPtr,Type)
+ [m]	TDelegate GetDelegateForFunctionPointer(IntPtr)
! [m]	Int32 GetExceptionCode()
+ [m]	Exception GetExceptionForHR(Int32)
+ [m]	Exception GetExceptionForHR(Int32,IntPtr)
+ [m]	IntPtr GetFunctionPointerForDelegate(Delegate)
+ [m]	IntPtr GetFunctionPointerForDelegate(TDelegate)
+ [m]	Int32 GetHRForException(Exception)
! [m]	Int32 GetHRForLastWin32Error()
+ [m]	IntPtr GetIUnknownForObject(Object)
+ [m]	Int32 GetLastWin32Error()
+ [m]	Void GetNativeVariantForObject(Object,IntPtr)
+ [m]	Void GetNativeVariantForObject(T,IntPtr)
! [m]	Object GetObjectForIUnknown(IntPtr)
+ [m]	Object GetObjectForNativeVariant(IntPtr)
+ [m]	T GetObjectForNativeVariant(IntPtr)
+ [m]	Object[] GetObjectsForNativeVariants(IntPtr,Int32)
+ [m]	T[] GetObjectsForNativeVariants(IntPtr,Int32)
! [m]	Int32 GetStartComSlot(Type)
! [m]	Type GetTypeFromCLSID(Guid)
! [m]	String GetTypeInfoName(ITypeInfo)
! [m]	Object GetUniqueObjectForIUnknown(IntPtr)
! [m]	Boolean IsComObject(Object)
+ [m]	IntPtr OffsetOf(Type,String)
+ [m]	IntPtr OffsetOf(String)
+ [m]	String PtrToStringAnsi(IntPtr)
+ [m]	String PtrToStringAnsi(IntPtr,Int32)
! [m]	String PtrToStringBSTR(IntPtr)
+ [m]	String PtrToStringUni(IntPtr)
+ [m]	String PtrToStringUni(IntPtr,Int32)
+ [m]	Void PtrToStructure(IntPtr,Object)
+ [m]	Object PtrToStructure(IntPtr,Type)
+ [m]	T PtrToStructure(IntPtr)
+ [m]	Void PtrToStructure(IntPtr,T)
! [m]	Int32 QueryInterface(IntPtr,Guid&,IntPtr&)
+ [m]	Byte ReadByte(IntPtr)
+ [m]	Byte ReadByte(IntPtr,Int32)
! [m]	Byte ReadByte(Object,Int32)
+ [m]	Int16 ReadInt16(IntPtr)
+ [m]	Int16 ReadInt16(IntPtr,Int32)
! [m]	Int16 ReadInt16(Object,Int32)
+ [m]	Int32 ReadInt32(IntPtr)
+ [m]	Int32 ReadInt32(IntPtr,Int32)
! [m]	Int32 ReadInt32(Object,Int32)
+ [m]	Int64 ReadInt64(IntPtr)
+ [m]	Int64 ReadInt64(IntPtr,Int32)
! [m]	Int64 ReadInt64(Object,Int32)
+ [m]	IntPtr ReadIntPtr(IntPtr)
+ [m]	IntPtr ReadIntPtr(IntPtr,Int32)
! [m]	IntPtr ReadIntPtr(Object,Int32)
+ [m]	IntPtr ReAllocCoTaskMem(IntPtr,Int32)
+ [m]	IntPtr ReAllocHGlobal(IntPtr,IntPtr)
! [m]	Int32 Release(IntPtr)
+ [m]	Int32 ReleaseComObject(Object)
+ [m]	Int32 SizeOf(Object)
+ [m]	Int32 SizeOf(Type)
+ [m]	Int32 SizeOf()
+ [m]	Int32 SizeOf(T)
+ [m]	IntPtr StringToBSTR(String)
+ [m]	IntPtr StringToCoTaskMemAnsi(String)
+ [m]	IntPtr StringToCoTaskMemUni(String)
+ [m]	IntPtr StringToHGlobalAnsi(String)
+ [m]	IntPtr StringToHGlobalUni(String)
+ [m]	Void StructureToPtr(Object,IntPtr,Boolean)
+ [m]	Void StructureToPtr(T,IntPtr,Boolean)
+ [m]	Void ThrowExceptionForHR(Int32)
+ [m]	Void ThrowExceptionForHR(Int32,IntPtr)
+ [m]	IntPtr UnsafeAddrOfPinnedArrayElement(Array,Int32)
+ [m]	IntPtr UnsafeAddrOfPinnedArrayElement(T[],Int32)
+ [m]	Void WriteByte(IntPtr,Byte)
+ [m]	Void WriteByte(IntPtr,Int32,Byte)
! [m]	Void WriteByte(Object,Int32,Byte)
+ [m]	Void WriteInt16(IntPtr,Char)
+ [m]	Void WriteInt16(IntPtr,Int16)
+ [m]	Void WriteInt16(IntPtr,Int32,Char)
+ [m]	Void WriteInt16(IntPtr,Int32,Int16)
! [m]	Void WriteInt16(Object,Int32,Char)
! [m]	Void WriteInt16(Object,Int32,Int16)
+ [m]	Void WriteInt32(IntPtr,Int32)
+ [m]	Void WriteInt32(IntPtr,Int32,Int32)
! [m]	Void WriteInt32(Object,Int32,Int32)
+ [m]	Void WriteInt64(IntPtr,Int32,Int64)
+ [m]	Void WriteInt64(IntPtr,Int64)
! [m]	Void WriteInt64(Object,Int32,Int64)
+ [m]	Void WriteIntPtr(IntPtr,Int32,IntPtr)
+ [m]	Void WriteIntPtr(IntPtr,IntPtr)
! [m]	Void WriteIntPtr(Object,Int32,IntPtr)
+ [m]	Void ZeroFreeBSTR(IntPtr)
+ [m]	Void ZeroFreeCoTaskMemAnsi(IntPtr)
+ [m]	Void ZeroFreeCoTaskMemUnicode(IntPtr)
+ [m]	Void ZeroFreeGlobalAllocAnsi(IntPtr)
+ [m]	Void ZeroFreeGlobalAllocUnicode(IntPtr)

f [t] System.Runtime.InteropServices.MarshalAsAttribute
+ [m]	Void .ctor(Int16)
+ [m]	Void .ctor(UnmanagedType)
+ [m]	UnmanagedType get_Value()

f [t] System.Runtime.InteropServices.MarshalDirectiveException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Runtime.InteropServices.OptionalAttribute
+ [m]	Void .ctor()

f [t] System.Runtime.InteropServices.PreserveSigAttribute
+ [m]	Void .ctor()

f [t] System.Runtime.InteropServices.SafeArrayRankMismatchException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Runtime.InteropServices.SafeArrayTypeMismatchException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Runtime.InteropServices.SafeBuffer
+ [m]	Void .ctor(Boolean)
- [m]	Boolean get_IsInvalid()
+ [m]	UInt64 get_ByteLength()
+ [m]	Void AcquirePointer(Byte*&)
+ [m]	Void Initialize(UInt32,UInt32)
+ [m]	Void Initialize(UInt64)
+ [m]	Void Initialize(UInt32)
+ [m]	T Read(UInt64)
+ [m]	Void ReadArray(UInt64,T[],Int32,Int32)
+ [m]	Void ReleasePointer()
+ [m]	Void Write(UInt64,T)
+ [m]	Void WriteArray(UInt64,T[],Int32,Int32)

f [t] System.Runtime.InteropServices.SEHException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	Boolean CanResume()

f [t] System.Runtime.InteropServices.TypeIdentifierAttribute
+ [m]	Void .ctor()
+ [m]	Void .ctor(String,String)
+ [m]	String get_Identifier()
+ [m]	String get_Scope()

f [t] System.Runtime.InteropServices.UnknownWrapper
+ [m]	Void .ctor(Object)
+ [m]	Object get_WrappedObject()

f [t] System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute
+ [m]	Void .ctor(CallingConvention)
+ [m]	CallingConvention get_CallingConvention()

f [t] System.Runtime.InteropServices.UnmanagedType

f [t] System.Runtime.InteropServices.VarEnum

f [t] System.Runtime.InteropServices.VariantWrapper
+ [m]	Void .ctor(Object)
+ [m]	Object get_WrappedObject()

f [t] System.Runtime.InteropServices.ComTypes.ADVF

f [t] System.Runtime.InteropServices.ComTypes.BIND_OPTS

f [t] System.Runtime.InteropServices.ComTypes.BINDPTR

f [t] System.Runtime.InteropServices.ComTypes.CALLCONV

f [t] System.Runtime.InteropServices.ComTypes.CONNECTDATA

f [t] System.Runtime.InteropServices.ComTypes.DATADIR

f [t] System.Runtime.InteropServices.ComTypes.DESCKIND

f [t] System.Runtime.InteropServices.ComTypes.DISPPARAMS

f [t] System.Runtime.InteropServices.ComTypes.DVASPECT

f [t] System.Runtime.InteropServices.ComTypes.ELEMDESC

f [t] System.Runtime.InteropServices.ComTypes.EXCEPINFO

f [t] System.Runtime.InteropServices.ComTypes.FILETIME

f [t] System.Runtime.InteropServices.ComTypes.FORMATETC

f [t] System.Runtime.InteropServices.ComTypes.FUNCDESC

f [t] System.Runtime.InteropServices.ComTypes.FUNCFLAGS

f [t] System.Runtime.InteropServices.ComTypes.FUNCKIND

f [t] System.Runtime.InteropServices.ComTypes.IAdviseSink
+ [m]	Void OnClose()
+ [m]	Void OnDataChange(FORMATETC&,STGMEDIUM&)
+ [m]	Void OnRename(IMoniker)
+ [m]	Void OnSave()
+ [m]	Void OnViewChange(Int32,Int32)

f [t] System.Runtime.InteropServices.ComTypes.IBindCtx
+ [m]	Void EnumObjectParam(IEnumString&)
+ [m]	Void GetBindOptions(BIND_OPTS&)
+ [m]	Void GetObjectParam(String,Object&)
+ [m]	Void GetRunningObjectTable(IRunningObjectTable&)
+ [m]	Void RegisterObjectBound(Object)
+ [m]	Void RegisterObjectParam(String,Object)
+ [m]	Void ReleaseBoundObjects()
+ [m]	Void RevokeObjectBound(Object)
+ [m]	Int32 RevokeObjectParam(String)
+ [m]	Void SetBindOptions(BIND_OPTS&)

f [t] System.Runtime.InteropServices.ComTypes.IConnectionPoint
+ [m]	Void Advise(Object,Int32&)
+ [m]	Void EnumConnections(IEnumConnections&)
+ [m]	Void GetConnectionInterface(Guid&)
+ [m]	Void GetConnectionPointContainer(IConnectionPointContainer&)
+ [m]	Void Unadvise(Int32)

f [t] System.Runtime.InteropServices.ComTypes.IConnectionPointContainer
+ [m]	Void EnumConnectionPoints(IEnumConnectionPoints&)
+ [m]	Void FindConnectionPoint(Guid&,IConnectionPoint&)

f [t] System.Runtime.InteropServices.ComTypes.IDLDESC

f [t] System.Runtime.InteropServices.ComTypes.IDLFLAG

f [t] System.Runtime.InteropServices.ComTypes.IEnumConnectionPoints
+ [m]	Void Clone(IEnumConnectionPoints&)
+ [m]	Int32 Next(Int32,IConnectionPoint[],IntPtr)
+ [m]	Void Reset()
+ [m]	Int32 Skip(Int32)

f [t] System.Runtime.InteropServices.ComTypes.IEnumConnections
+ [m]	Void Clone(IEnumConnections&)
+ [m]	Int32 Next(Int32,CONNECTDATA[],IntPtr)
+ [m]	Void Reset()
+ [m]	Int32 Skip(Int32)

f [t] System.Runtime.InteropServices.ComTypes.IEnumFORMATETC
+ [m]	Void Clone(IEnumFORMATETC&)
+ [m]	Int32 Next(Int32,FORMATETC[],Int32[])
+ [m]	Int32 Reset()
+ [m]	Int32 Skip(Int32)

f [t] System.Runtime.InteropServices.ComTypes.IEnumMoniker
+ [m]	Void Clone(IEnumMoniker&)
+ [m]	Int32 Next(Int32,IMoniker[],IntPtr)
+ [m]	Void Reset()
+ [m]	Int32 Skip(Int32)

f [t] System.Runtime.InteropServices.ComTypes.IEnumString
+ [m]	Void Clone(IEnumString&)
+ [m]	Int32 Next(Int32,String[],IntPtr)
+ [m]	Void Reset()
+ [m]	Int32 Skip(Int32)

f [t] System.Runtime.InteropServices.ComTypes.IEnumVARIANT
+ [m]	IEnumVARIANT Clone()
+ [m]	Int32 Next(Int32,Object[],IntPtr)
+ [m]	Int32 Reset()
+ [m]	Int32 Skip(Int32)

f [t] System.Runtime.InteropServices.ComTypes.IMoniker
+ [m]	Void BindToObject(IBindCtx,IMoniker,Guid&,Object&)
+ [m]	Void BindToStorage(IBindCtx,IMoniker,Guid&,Object&)
+ [m]	Void CommonPrefixWith(IMoniker,IMoniker&)
+ [m]	Void ComposeWith(IMoniker,Boolean,IMoniker&)
+ [m]	Void Enum(Boolean,IEnumMoniker&)
+ [m]	Void GetClassID(Guid&)
+ [m]	Void GetDisplayName(IBindCtx,IMoniker,String&)
+ [m]	Void GetSizeMax(Int64&)
+ [m]	Void GetTimeOfLastChange(IBindCtx,IMoniker,FILETIME&)
+ [m]	Void Hash(Int32&)
+ [m]	Void Inverse(IMoniker&)
+ [m]	Int32 IsDirty()
+ [m]	Int32 IsEqual(IMoniker)
+ [m]	Int32 IsRunning(IBindCtx,IMoniker,IMoniker)
+ [m]	Int32 IsSystemMoniker(Int32&)
+ [m]	Void Load(IStream)
+ [m]	Void ParseDisplayName(IBindCtx,IMoniker,String,Int32&,IMoniker&)
+ [m]	Void Reduce(IBindCtx,Int32,IMoniker&,IMoniker&)
+ [m]	Void RelativePathTo(IMoniker,IMoniker&)
+ [m]	Void Save(IStream,Boolean)

f [t] System.Runtime.InteropServices.ComTypes.IMPLTYPEFLAGS

f [t] System.Runtime.InteropServices.ComTypes.INVOKEKIND

f [t] System.Runtime.InteropServices.ComTypes.IPersistFile
+ [m]	Void GetClassID(Guid&)
+ [m]	Void GetCurFile(String&)
+ [m]	Int32 IsDirty()
+ [m]	Void Load(String,Int32)
+ [m]	Void Save(String,Boolean)
+ [m]	Void SaveCompleted(String)

f [t] System.Runtime.InteropServices.ComTypes.IRunningObjectTable
+ [m]	Void EnumRunning(IEnumMoniker&)
+ [m]	Int32 GetObject(IMoniker,Object&)
+ [m]	Int32 GetTimeOfLastChange(IMoniker,FILETIME&)
+ [m]	Int32 IsRunning(IMoniker)
+ [m]	Void NoteChangeTime(Int32,FILETIME&)
+ [m]	Int32 Register(Int32,Object,IMoniker)
+ [m]	Void Revoke(Int32)

f [t] System.Runtime.InteropServices.ComTypes.IStream
+ [m]	Void Clone(IStream&)
+ [m]	Void Commit(Int32)
+ [m]	Void CopyTo(IStream,Int64,IntPtr,IntPtr)
+ [m]	Void LockRegion(Int64,Int64,Int32)
+ [m]	Void Read(Byte[],Int32,IntPtr)
+ [m]	Void Revert()
+ [m]	Void Seek(Int64,Int32,IntPtr)
+ [m]	Void SetSize(Int64)
+ [m]	Void Stat(STATSTG&,Int32)
+ [m]	Void UnlockRegion(Int64,Int64,Int32)
+ [m]	Void Write(Byte[],Int32,IntPtr)

f [t] System.Runtime.InteropServices.ComTypes.ITypeComp
+ [m]	Void Bind(String,Int32,Int16,ITypeInfo&,DESCKIND&,BINDPTR&)
+ [m]	Void BindType(String,Int32,ITypeInfo&,ITypeComp&)

f [t] System.Runtime.InteropServices.ComTypes.ITypeInfo
+ [m]	Void AddressOfMember(Int32,INVOKEKIND,IntPtr&)
+ [m]	Void CreateInstance(Object,Guid&,Object&)
+ [m]	Void GetContainingTypeLib(ITypeLib&,Int32&)
+ [m]	Void GetDllEntry(Int32,INVOKEKIND,IntPtr,IntPtr,IntPtr)
+ [m]	Void GetDocumentation(Int32,String&,String&,Int32&,String&)
+ [m]	Void GetFuncDesc(Int32,IntPtr&)
+ [m]	Void GetIDsOfNames(String[],Int32,Int32[])
+ [m]	Void GetImplTypeFlags(Int32,IMPLTYPEFLAGS&)
+ [m]	Void GetMops(Int32,String&)
+ [m]	Void GetNames(Int32,String[],Int32,Int32&)
+ [m]	Void GetRefTypeInfo(Int32,ITypeInfo&)
+ [m]	Void GetRefTypeOfImplType(Int32,Int32&)
+ [m]	Void GetTypeAttr(IntPtr&)
+ [m]	Void GetTypeComp(ITypeComp&)
+ [m]	Void GetVarDesc(Int32,IntPtr&)
+ [m]	Void Invoke(Object,Int32,Int16,DISPPARAMS&,IntPtr,IntPtr,Int32&)
+ [m]	Void ReleaseFuncDesc(IntPtr)
+ [m]	Void ReleaseTypeAttr(IntPtr)
+ [m]	Void ReleaseVarDesc(IntPtr)

f [t] System.Runtime.InteropServices.ComTypes.ITypeInfo2
+ [m]	Void AddressOfMember(Int32,INVOKEKIND,IntPtr&)
+ [m]	Void CreateInstance(Object,Guid&,Object&)
+ [m]	Void GetAllCustData(IntPtr)
+ [m]	Void GetAllFuncCustData(Int32,IntPtr)
+ [m]	Void GetAllImplTypeCustData(Int32,IntPtr)
+ [m]	Void GetAllParamCustData(Int32,Int32,IntPtr)
+ [m]	Void GetAllVarCustData(Int32,IntPtr)
+ [m]	Void GetContainingTypeLib(ITypeLib&,Int32&)
+ [m]	Void GetCustData(Guid&,Object&)
+ [m]	Void GetDllEntry(Int32,INVOKEKIND,IntPtr,IntPtr,IntPtr)
+ [m]	Void GetDocumentation(Int32,String&,String&,Int32&,String&)
+ [m]	Void GetDocumentation2(Int32,String&,Int32&,String&)
+ [m]	Void GetFuncCustData(Int32,Guid&,Object&)
+ [m]	Void GetFuncDesc(Int32,IntPtr&)
+ [m]	Void GetFuncIndexOfMemId(Int32,INVOKEKIND,Int32&)
+ [m]	Void GetIDsOfNames(String[],Int32,Int32[])
+ [m]	Void GetImplTypeCustData(Int32,Guid&,Object&)
+ [m]	Void GetImplTypeFlags(Int32,IMPLTYPEFLAGS&)
+ [m]	Void GetMops(Int32,String&)
+ [m]	Void GetNames(Int32,String[],Int32,Int32&)
+ [m]	Void GetParamCustData(Int32,Int32,Guid&,Object&)
+ [m]	Void GetRefTypeInfo(Int32,ITypeInfo&)
+ [m]	Void GetRefTypeOfImplType(Int32,Int32&)
+ [m]	Void GetTypeAttr(IntPtr&)
+ [m]	Void GetTypeComp(ITypeComp&)
+ [m]	Void GetTypeFlags(Int32&)
+ [m]	Void GetTypeKind(TYPEKIND&)
+ [m]	Void GetVarCustData(Int32,Guid&,Object&)
+ [m]	Void GetVarDesc(Int32,IntPtr&)
+ [m]	Void GetVarIndexOfMemId(Int32,Int32&)
+ [m]	Void Invoke(Object,Int32,Int16,DISPPARAMS&,IntPtr,IntPtr,Int32&)
+ [m]	Void ReleaseFuncDesc(IntPtr)
+ [m]	Void ReleaseTypeAttr(IntPtr)
+ [m]	Void ReleaseVarDesc(IntPtr)

f [t] System.Runtime.InteropServices.ComTypes.ITypeLib
+ [m]	Void FindName(String,Int32,ITypeInfo[],Int32[],Int16&)
+ [m]	Void GetDocumentation(Int32,String&,String&,Int32&,String&)
+ [m]	Void GetLibAttr(IntPtr&)
+ [m]	Void GetTypeComp(ITypeComp&)
+ [m]	Void GetTypeInfo(Int32,ITypeInfo&)
+ [m]	Int32 GetTypeInfoCount()
+ [m]	Void GetTypeInfoOfGuid(Guid&,ITypeInfo&)
+ [m]	Void GetTypeInfoType(Int32,TYPEKIND&)
+ [m]	Boolean IsName(String,Int32)
+ [m]	Void ReleaseTLibAttr(IntPtr)

f [t] System.Runtime.InteropServices.ComTypes.ITypeLib2
+ [m]	Void FindName(String,Int32,ITypeInfo[],Int32[],Int16&)
+ [m]	Void GetAllCustData(IntPtr)
+ [m]	Void GetCustData(Guid&,Object&)
+ [m]	Void GetDocumentation(Int32,String&,String&,Int32&,String&)
+ [m]	Void GetDocumentation2(Int32,String&,Int32&,String&)
+ [m]	Void GetLibAttr(IntPtr&)
+ [m]	Void GetLibStatistics(IntPtr,Int32&)
+ [m]	Void GetTypeComp(ITypeComp&)
+ [m]	Void GetTypeInfo(Int32,ITypeInfo&)
+ [m]	Int32 GetTypeInfoCount()
+ [m]	Void GetTypeInfoOfGuid(Guid&,ITypeInfo&)
+ [m]	Void GetTypeInfoType(Int32,TYPEKIND&)
+ [m]	Boolean IsName(String,Int32)
+ [m]	Void ReleaseTLibAttr(IntPtr)

f [t] System.Runtime.InteropServices.ComTypes.LIBFLAGS

f [t] System.Runtime.InteropServices.ComTypes.PARAMDESC

f [t] System.Runtime.InteropServices.ComTypes.PARAMFLAG

f [t] System.Runtime.InteropServices.ComTypes.STATDATA

f [t] System.Runtime.InteropServices.ComTypes.STATSTG

f [t] System.Runtime.InteropServices.ComTypes.STGMEDIUM

f [t] System.Runtime.InteropServices.ComTypes.SYSKIND

f [t] System.Runtime.InteropServices.ComTypes.TYMED

f [t] System.Runtime.InteropServices.ComTypes.TYPEATTR

f [t] System.Runtime.InteropServices.ComTypes.TYPEDESC

f [t] System.Runtime.InteropServices.ComTypes.TYPEFLAGS

f [t] System.Runtime.InteropServices.ComTypes.TYPEKIND

f [t] System.Runtime.InteropServices.ComTypes.TYPELIBATTR

f [t] System.Runtime.InteropServices.ComTypes.VARDESC

f [t] System.Runtime.InteropServices.ComTypes.VARFLAGS

f [t] System.Runtime.InteropServices.ComTypes.VARKIND

f [t] System.Reflection.Missing
+ [m]	Void .ctor()

---------------------------------------
- [a] System.Runtime.InteropServices.PInvoke.dll
---------------------------------------
+ [a] System.Runtime.InteropServices.RuntimeInformation.dll
ref: ./netstandard/packages/System.Runtime.InteropServices.RuntimeInformation/ref/netstandard1.1/System.Runtime.InteropServices.RuntimeInformation.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/mono/2.1/System.Runtime.InteropServices.RuntimeInformation.dll

+ [t] System.Runtime.InteropServices.OSPlatform
+ [m]	OSPlatform get_Linux()
+ [m]	OSPlatform get_OSX()
+ [m]	OSPlatform get_Windows()
+ [m]	OSPlatform Create(String)
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(OSPlatform)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(OSPlatform,OSPlatform)
+ [m]	Boolean op_Inequality(OSPlatform,OSPlatform)
+ [m]	String ToString()

+ [t] System.Runtime.InteropServices.Architecture

+ [t] System.Runtime.InteropServices.RuntimeInformation
+ [m]	Architecture get_ProcessArchitecture()
+ [m]	Architecture get_OSArchitecture()
+ [m]	String get_OSDescription()
+ [m]	String get_FrameworkDescription()
+ [m]	Boolean IsOSPlatform(OSPlatform)

---------------------------------------
+ [a] System.Runtime.InteropServices.WindowsRuntime.dll
ref: ./netstandard/packages/System.Runtime.InteropServices.WindowsRuntime/ref/netstandard1.0/System.Runtime.InteropServices.WindowsRuntime.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Runtime.InteropServices.WindowsRuntime.dll

f [t] System.Runtime.InteropServices.WindowsRuntime.DefaultInterfaceAttribute
+ [m]	Void .ctor(Type)
+ [m]	Type get_DefaultInterface()

f [t] System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(EventRegistrationToken,EventRegistrationToken)
+ [m]	Boolean op_Inequality(EventRegistrationToken,EventRegistrationToken)

f [t] System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1
+ [m]	Void .ctor()
! [m]	T get_InvocationList()
! [m]	Void set_InvocationList(T)
! [m]	EventRegistrationToken AddEventHandler(T)
! [m]	EventRegistrationTokenTable`1 GetOrCreateEventRegistrationTokenTable(EventRegistrationTokenTable`1&)
! [m]	Void RemoveEventHandler(T)
! [m]	Void RemoveEventHandler(EventRegistrationToken)

f [t] System.Runtime.InteropServices.WindowsRuntime.IActivationFactory
+ [m]	Object ActivateInstance()

f [t] System.Runtime.InteropServices.WindowsRuntime.InterfaceImplementedInVersionAttribute
+ [m]	Void .ctor(Type,Byte,Byte,Byte,Byte)
+ [m]	Byte get_BuildVersion()
+ [m]	Type get_InterfaceType()
+ [m]	Byte get_MajorVersion()
+ [m]	Byte get_MinorVersion()
+ [m]	Byte get_RevisionVersion()

f [t] System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute
+ [m]	Void .ctor()

f [t] System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_Name()

f [t] System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal
! [m]	Void AddEventHandler(Func`2,Action`1,T)
! [m]	Void FreeHString(IntPtr)
! [m]	IActivationFactory GetActivationFactory(Type)
! [m]	String PtrToStringHString(IntPtr)
! [m]	Void RemoveAllEventHandlers(Action`1)
! [m]	Void RemoveEventHandler(Action`1,T)
! [m]	IntPtr StringToHString(String)

f [t] System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute
+ [m]	Void .ctor()

---------------------------------------
- [a] System.Runtime.Loader.dll
---------------------------------------
+ [a] System.Runtime.Numerics.dll
ref: ./netstandard/packages/System.Runtime.Numerics/ref/netstandard1.1/System.Runtime.Numerics.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Runtime.Numerics.dll

f [t] System.Numerics.BigInteger
+ [m]	Void .ctor(Byte[])
+ [m]	Void .ctor(Decimal)
+ [m]	Void .ctor(Double)
+ [m]	Void .ctor(Int32)
+ [m]	Void .ctor(Int64)
+ [m]	Void .ctor(Single)
+ [m]	Void .ctor(UInt32)
+ [m]	Void .ctor(UInt64)
+ [m]	Boolean get_IsEven()
+ [m]	Boolean get_IsOne()
+ [m]	Boolean get_IsPowerOfTwo()
+ [m]	Boolean get_IsZero()
+ [m]	BigInteger get_MinusOne()
+ [m]	BigInteger get_One()
+ [m]	Int32 get_Sign()
+ [m]	BigInteger get_Zero()
+ [m]	BigInteger Abs(BigInteger)
+ [m]	BigInteger Add(BigInteger,BigInteger)
+ [m]	Int32 Compare(BigInteger,BigInteger)
+ [m]	Int32 CompareTo(Int64)
+ [m]	Int32 CompareTo(BigInteger)
+ [m]	Int32 CompareTo(UInt64)
+ [m]	BigInteger Divide(BigInteger,BigInteger)
+ [m]	BigInteger DivRem(BigInteger,BigInteger,BigInteger&)
+ [m]	Boolean Equals(Int64)
+ [m]	Boolean Equals(BigInteger)
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(UInt64)
+ [m]	Int32 GetHashCode()
+ [m]	BigInteger GreatestCommonDivisor(BigInteger,BigInteger)
+ [m]	Double Log(BigInteger)
+ [m]	Double Log(BigInteger,Double)
+ [m]	Double Log10(BigInteger)
+ [m]	BigInteger Max(BigInteger,BigInteger)
+ [m]	BigInteger Min(BigInteger,BigInteger)
+ [m]	BigInteger ModPow(BigInteger,BigInteger,BigInteger)
+ [m]	BigInteger Multiply(BigInteger,BigInteger)
+ [m]	BigInteger Negate(BigInteger)
+ [m]	BigInteger op_Addition(BigInteger,BigInteger)
+ [m]	BigInteger op_BitwiseAnd(BigInteger,BigInteger)
+ [m]	BigInteger op_BitwiseOr(BigInteger,BigInteger)
+ [m]	BigInteger op_Decrement(BigInteger)
+ [m]	BigInteger op_Division(BigInteger,BigInteger)
+ [m]	Boolean op_Equality(Int64,BigInteger)
+ [m]	Boolean op_Equality(BigInteger,Int64)
+ [m]	Boolean op_Equality(BigInteger,BigInteger)
+ [m]	Boolean op_Equality(BigInteger,UInt64)
+ [m]	Boolean op_Equality(UInt64,BigInteger)
+ [m]	BigInteger op_ExclusiveOr(BigInteger,BigInteger)
+ [m]	BigInteger op_Explicit(Decimal)
+ [m]	BigInteger op_Explicit(Double)
+ [m]	Byte op_Explicit(BigInteger)
+ [m]	Decimal op_Explicit(BigInteger)
+ [m]	Double op_Explicit(BigInteger)
+ [m]	Int16 op_Explicit(BigInteger)
+ [m]	Int32 op_Explicit(BigInteger)
+ [m]	Int64 op_Explicit(BigInteger)
+ [m]	SByte op_Explicit(BigInteger)
+ [m]	Single op_Explicit(BigInteger)
+ [m]	UInt16 op_Explicit(BigInteger)
+ [m]	UInt32 op_Explicit(BigInteger)
+ [m]	UInt64 op_Explicit(BigInteger)
+ [m]	BigInteger op_Explicit(Single)
+ [m]	Boolean op_GreaterThan(Int64,BigInteger)
+ [m]	Boolean op_GreaterThan(BigInteger,Int64)
+ [m]	Boolean op_GreaterThan(BigInteger,BigInteger)
+ [m]	Boolean op_GreaterThan(BigInteger,UInt64)
+ [m]	Boolean op_GreaterThan(UInt64,BigInteger)
+ [m]	Boolean op_GreaterThanOrEqual(Int64,BigInteger)
+ [m]	Boolean op_GreaterThanOrEqual(BigInteger,Int64)
+ [m]	Boolean op_GreaterThanOrEqual(BigInteger,BigInteger)
+ [m]	Boolean op_GreaterThanOrEqual(BigInteger,UInt64)
+ [m]	Boolean op_GreaterThanOrEqual(UInt64,BigInteger)
+ [m]	BigInteger op_Implicit(Byte)
+ [m]	BigInteger op_Implicit(Int16)
+ [m]	BigInteger op_Implicit(Int32)
+ [m]	BigInteger op_Implicit(Int64)
+ [m]	BigInteger op_Implicit(SByte)
+ [m]	BigInteger op_Implicit(UInt16)
+ [m]	BigInteger op_Implicit(UInt32)
+ [m]	BigInteger op_Implicit(UInt64)
+ [m]	BigInteger op_Increment(BigInteger)
+ [m]	Boolean op_Inequality(Int64,BigInteger)
+ [m]	Boolean op_Inequality(BigInteger,Int64)
+ [m]	Boolean op_Inequality(BigInteger,BigInteger)
+ [m]	Boolean op_Inequality(BigInteger,UInt64)
+ [m]	Boolean op_Inequality(UInt64,BigInteger)
+ [m]	BigInteger op_LeftShift(BigInteger,Int32)
+ [m]	Boolean op_LessThan(Int64,BigInteger)
+ [m]	Boolean op_LessThan(BigInteger,Int64)
+ [m]	Boolean op_LessThan(BigInteger,BigInteger)
+ [m]	Boolean op_LessThan(BigInteger,UInt64)
+ [m]	Boolean op_LessThan(UInt64,BigInteger)
+ [m]	Boolean op_LessThanOrEqual(Int64,BigInteger)
+ [m]	Boolean op_LessThanOrEqual(BigInteger,Int64)
+ [m]	Boolean op_LessThanOrEqual(BigInteger,BigInteger)
+ [m]	Boolean op_LessThanOrEqual(BigInteger,UInt64)
+ [m]	Boolean op_LessThanOrEqual(UInt64,BigInteger)
+ [m]	BigInteger op_Modulus(BigInteger,BigInteger)
+ [m]	BigInteger op_Multiply(BigInteger,BigInteger)
+ [m]	BigInteger op_OnesComplement(BigInteger)
+ [m]	BigInteger op_RightShift(BigInteger,Int32)
+ [m]	BigInteger op_Subtraction(BigInteger,BigInteger)
+ [m]	BigInteger op_UnaryNegation(BigInteger)
+ [m]	BigInteger op_UnaryPlus(BigInteger)
+ [m]	BigInteger Parse(String)
+ [m]	BigInteger Parse(String,NumberStyles)
+ [m]	BigInteger Parse(String,NumberStyles,IFormatProvider)
+ [m]	BigInteger Parse(String,IFormatProvider)
+ [m]	BigInteger Pow(BigInteger,Int32)
+ [m]	BigInteger Remainder(BigInteger,BigInteger)
+ [m]	BigInteger Subtract(BigInteger,BigInteger)
- [m]	Int32 System.IComparable.CompareTo(Object)
+ [m]	Byte[] ToByteArray()
+ [m]	String ToString()
+ [m]	String ToString(IFormatProvider)
+ [m]	String ToString(String)
+ [m]	String ToString(String,IFormatProvider)
+ [m]	Boolean TryParse(String,NumberStyles,IFormatProvider,BigInteger&)
+ [m]	Boolean TryParse(String,BigInteger&)

f [t] System.Numerics.Complex
+ [m]	Void .ctor(Double,Double)
+ [m]	Double get_Imaginary()
+ [m]	Double get_Magnitude()
+ [m]	Double get_Phase()
+ [m]	Double get_Real()
+ [m]	Double Abs(Complex)
+ [m]	Complex Acos(Complex)
+ [m]	Complex Add(Complex,Complex)
+ [m]	Complex Asin(Complex)
+ [m]	Complex Atan(Complex)
+ [m]	Complex Conjugate(Complex)
+ [m]	Complex Cos(Complex)
+ [m]	Complex Cosh(Complex)
+ [m]	Complex Divide(Complex,Complex)
+ [m]	Boolean Equals(Complex)
+ [m]	Boolean Equals(Object)
+ [m]	Complex Exp(Complex)
+ [m]	Complex FromPolarCoordinates(Double,Double)
+ [m]	Int32 GetHashCode()
+ [m]	Complex Log(Complex)
+ [m]	Complex Log(Complex,Double)
+ [m]	Complex Log10(Complex)
+ [m]	Complex Multiply(Complex,Complex)
+ [m]	Complex Negate(Complex)
+ [m]	Complex op_Addition(Complex,Complex)
+ [m]	Complex op_Division(Complex,Complex)
+ [m]	Boolean op_Equality(Complex,Complex)
+ [m]	Complex op_Explicit(Decimal)
+ [m]	Complex op_Explicit(BigInteger)
+ [m]	Complex op_Implicit(Byte)
+ [m]	Complex op_Implicit(Double)
+ [m]	Complex op_Implicit(Int16)
+ [m]	Complex op_Implicit(Int32)
+ [m]	Complex op_Implicit(Int64)
+ [m]	Complex op_Implicit(SByte)
+ [m]	Complex op_Implicit(Single)
+ [m]	Complex op_Implicit(UInt16)
+ [m]	Complex op_Implicit(UInt32)
+ [m]	Complex op_Implicit(UInt64)
+ [m]	Boolean op_Inequality(Complex,Complex)
+ [m]	Complex op_Multiply(Complex,Complex)
+ [m]	Complex op_Subtraction(Complex,Complex)
+ [m]	Complex op_UnaryNegation(Complex)
+ [m]	Complex Pow(Complex,Double)
+ [m]	Complex Pow(Complex,Complex)
+ [m]	Complex Reciprocal(Complex)
+ [m]	Complex Sin(Complex)
+ [m]	Complex Sinh(Complex)
+ [m]	Complex Sqrt(Complex)
+ [m]	Complex Subtract(Complex,Complex)
+ [m]	Complex Tan(Complex)
+ [m]	Complex Tanh(Complex)
+ [m]	String ToString()
+ [m]	String ToString(IFormatProvider)
+ [m]	String ToString(String)
+ [m]	String ToString(String,IFormatProvider)

---------------------------------------
+ [a] System.Runtime.Serialization.Formatters.dll
ref: ./netstandard/packages/System.Runtime.Serialization.Formatters/ref/netstandard1.3/System.Runtime.Serialization.Formatters.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Runtime.Serialization.Formatters.dll

f [t] System.NonSerializedAttribute
+ [m]	Void .ctor()

f [t] System.SerializableAttribute
+ [m]	Void .ctor()

f [t] System.Runtime.Serialization.IFormatterConverter
+ [m]	Object Convert(Object,Type)
+ [m]	Object Convert(Object,TypeCode)
+ [m]	Boolean ToBoolean(Object)
+ [m]	Char ToChar(Object)
+ [m]	SByte ToSByte(Object)
+ [m]	Byte ToByte(Object)
+ [m]	Int16 ToInt16(Object)
+ [m]	UInt16 ToUInt16(Object)
+ [m]	Int32 ToInt32(Object)
+ [m]	UInt32 ToUInt32(Object)
+ [m]	Int64 ToInt64(Object)
+ [m]	UInt64 ToUInt64(Object)
+ [m]	Single ToSingle(Object)
+ [m]	Double ToDouble(Object)
+ [m]	Decimal ToDecimal(Object)
+ [m]	DateTime ToDateTime(Object)
+ [m]	String ToString(Object)

f [t] System.Runtime.Serialization.ISerializable
+ [m]	Void GetObjectData(SerializationInfo,StreamingContext)

f [t] System.Runtime.Serialization.IDeserializationCallback
+ [m]	Void OnDeserialization(Object)

f [t] System.Runtime.Serialization.SerializationEntry
+ [m]	String get_Name()
+ [m]	Type get_ObjectType()
+ [m]	Object get_Value()

f [t] System.Runtime.Serialization.SerializationInfo
+ [m]	Void .ctor(Type,IFormatterConverter)
+ [m]	String get_AssemblyName()
+ [m]	Void set_AssemblyName(String)
+ [m]	String get_FullTypeName()
+ [m]	Void set_FullTypeName(String)
+ [m]	Int32 get_MemberCount()
+ [m]	Type get_ObjectType()
+ [m]	Void AddValue(String,Boolean)
+ [m]	Void AddValue(String,Byte)
+ [m]	Void AddValue(String,Char)
+ [m]	Void AddValue(String,DateTime)
+ [m]	Void AddValue(String,Decimal)
+ [m]	Void AddValue(String,Double)
+ [m]	Void AddValue(String,Int16)
+ [m]	Void AddValue(String,Int32)
+ [m]	Void AddValue(String,Int64)
+ [m]	Void AddValue(String,Object)
+ [m]	Void AddValue(String,Object,Type)
+ [m]	Void AddValue(String,SByte)
+ [m]	Void AddValue(String,Single)
+ [m]	Void AddValue(String,UInt16)
+ [m]	Void AddValue(String,UInt32)
+ [m]	Void AddValue(String,UInt64)
+ [m]	Boolean GetBoolean(String)
+ [m]	Byte GetByte(String)
+ [m]	Char GetChar(String)
+ [m]	DateTime GetDateTime(String)
+ [m]	Decimal GetDecimal(String)
+ [m]	Double GetDouble(String)
+ [m]	SerializationInfoEnumerator GetEnumerator()
+ [m]	Int16 GetInt16(String)
+ [m]	Int32 GetInt32(String)
+ [m]	Int64 GetInt64(String)
+ [m]	SByte GetSByte(String)
+ [m]	Single GetSingle(String)
+ [m]	String GetString(String)
+ [m]	UInt16 GetUInt16(String)
+ [m]	UInt32 GetUInt32(String)
+ [m]	UInt64 GetUInt64(String)
+ [m]	Object GetValue(String,Type)
+ [m]	Void SetType(Type)

f [t] System.Runtime.Serialization.SerializationInfoEnumerator
- [m]	Void .ctor()
+ [m]	SerializationEntry get_Current()
+ [m]	String get_Name()
+ [m]	Type get_ObjectType()
+ [m]	Object System.Collections.IEnumerator.get_Current()
+ [m]	Object get_Value()
+ [m]	Boolean MoveNext()
+ [m]	Void Reset()

---------------------------------------
+ [a] System.Runtime.Serialization.Json.dll
ref: ./netstandard/packages/System.Runtime.Serialization.Json/ref/netstandard1.0/System.Runtime.Serialization.Json.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Runtime.Serialization.Json.dll

f [t] System.Runtime.Serialization.DateTimeFormat
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,IFormatProvider)
+ [m]	DateTimeStyles get_DateTimeStyles()
+ [m]	Void set_DateTimeStyles(DateTimeStyles)
+ [m]	IFormatProvider get_FormatProvider()
+ [m]	String get_FormatString()

f [t] System.Runtime.Serialization.EmitTypeInformation

f [t] System.Runtime.Serialization.Json.DataContractJsonSerializer
+ [m]	Void .ctor(Type)
+ [m]	Void .ctor(Type,IEnumerable`1)
+ [m]	Void .ctor(Type,DataContractJsonSerializerSettings)
+ [m]	DateTimeFormat get_DateTimeFormat()
+ [m]	EmitTypeInformation get_EmitTypeInformation()
+ [m]	ReadOnlyCollection`1 get_KnownTypes()
+ [m]	Boolean get_SerializeReadOnlyTypes()
+ [m]	Boolean get_UseSimpleDictionaryFormat()
+ [m]	Object ReadObject(Stream)
+ [m]	Void WriteObject(Stream,Object)

f [t] System.Runtime.Serialization.Json.DataContractJsonSerializerSettings
+ [m]	Void .ctor()
+ [m]	DateTimeFormat get_DateTimeFormat()
+ [m]	Void set_DateTimeFormat(DateTimeFormat)
+ [m]	EmitTypeInformation get_EmitTypeInformation()
+ [m]	Void set_EmitTypeInformation(EmitTypeInformation)
+ [m]	IEnumerable`1 get_KnownTypes()
+ [m]	Void set_KnownTypes(IEnumerable`1)
+ [m]	Int32 get_MaxItemsInObjectGraph()
+ [m]	Void set_MaxItemsInObjectGraph(Int32)
+ [m]	String get_RootName()
+ [m]	Void set_RootName(String)
+ [m]	Boolean get_SerializeReadOnlyTypes()
+ [m]	Void set_SerializeReadOnlyTypes(Boolean)
+ [m]	Boolean get_UseSimpleDictionaryFormat()
+ [m]	Void set_UseSimpleDictionaryFormat(Boolean)

---------------------------------------
+ [a] System.Runtime.Serialization.Primitives.dll
ref: ./netstandard/packages/System.Runtime.Serialization.Primitives/ref/netstandard1.3/System.Runtime.Serialization.Primitives.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Runtime.Serialization.Primitives.dll

f [t] System.Runtime.Serialization.CollectionDataContractAttribute
+ [m]	Void .ctor()
+ [m]	Boolean get_IsItemNameSetExplicitly()
+ [m]	Boolean get_IsKeyNameSetExplicitly()
+ [m]	Boolean get_IsNameSetExplicitly()
+ [m]	Boolean get_IsNamespaceSetExplicitly()
+ [m]	Boolean get_IsReference()
+ [m]	Void set_IsReference(Boolean)
+ [m]	Boolean get_IsReferenceSetExplicitly()
+ [m]	Boolean get_IsValueNameSetExplicitly()
+ [m]	String get_ItemName()
+ [m]	Void set_ItemName(String)
+ [m]	String get_KeyName()
+ [m]	Void set_KeyName(String)
+ [m]	String get_Name()
+ [m]	Void set_Name(String)
+ [m]	String get_Namespace()
+ [m]	Void set_Namespace(String)
+ [m]	String get_ValueName()
+ [m]	Void set_ValueName(String)

f [t] System.Runtime.Serialization.ContractNamespaceAttribute
+ [m]	Void .ctor(String)
+ [m]	String get_ClrNamespace()
+ [m]	Void set_ClrNamespace(String)
+ [m]	String get_ContractNamespace()

f [t] System.Runtime.Serialization.DataContractAttribute
+ [m]	Void .ctor()
+ [m]	Boolean get_IsNameSetExplicitly()
+ [m]	Boolean get_IsNamespaceSetExplicitly()
+ [m]	Boolean get_IsReference()
+ [m]	Void set_IsReference(Boolean)
+ [m]	Boolean get_IsReferenceSetExplicitly()
+ [m]	String get_Name()
+ [m]	Void set_Name(String)
+ [m]	String get_Namespace()
+ [m]	Void set_Namespace(String)

f [t] System.Runtime.Serialization.DataMemberAttribute
+ [m]	Void .ctor()
+ [m]	Boolean get_EmitDefaultValue()
+ [m]	Void set_EmitDefaultValue(Boolean)
+ [m]	Boolean get_IsNameSetExplicitly()
+ [m]	Boolean get_IsRequired()
+ [m]	Void set_IsRequired(Boolean)
+ [m]	String get_Name()
+ [m]	Void set_Name(String)
+ [m]	Int32 get_Order()
+ [m]	Void set_Order(Int32)

f [t] System.Runtime.Serialization.EnumMemberAttribute
+ [m]	Void .ctor()
+ [m]	Boolean get_IsValueSetExplicitly()
+ [m]	String get_Value()
+ [m]	Void set_Value(String)

f [t] System.Runtime.Serialization.IgnoreDataMemberAttribute
+ [m]	Void .ctor()

f [t] System.Runtime.Serialization.InvalidDataContractException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

+ [t] System.Runtime.Serialization.ISerializationSurrogateProvider
+ [m]	Object GetDeserializedObject(Object,Type)
+ [m]	Object GetObjectToSerialize(Object,Type)
+ [m]	Type GetSurrogateType(Type)

f [t] System.Runtime.Serialization.KnownTypeAttribute
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(Type)
+ [m]	String get_MethodName()
+ [m]	Type get_Type()

f [t] System.Runtime.Serialization.OnDeserializedAttribute
+ [m]	Void .ctor()

f [t] System.Runtime.Serialization.OnDeserializingAttribute
+ [m]	Void .ctor()

f [t] System.Runtime.Serialization.OnSerializedAttribute
+ [m]	Void .ctor()

f [t] System.Runtime.Serialization.OnSerializingAttribute
+ [m]	Void .ctor()

f [t] System.Runtime.Serialization.SerializationException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Runtime.Serialization.StreamingContext
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()

---------------------------------------
+ [a] System.Runtime.Serialization.Xml.dll
ref: ./netstandard/packages/System.Runtime.Serialization.Xml/ref/netstandard1.3/System.Runtime.Serialization.Xml.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Runtime.Serialization.Xml.dll

f [t] System.Xml.IXmlDictionary
+ [m]	Boolean TryLookup(Int32,XmlDictionaryString&)
+ [m]	Boolean TryLookup(String,XmlDictionaryString&)
+ [m]	Boolean TryLookup(XmlDictionaryString,XmlDictionaryString&)

f [t] System.Xml.OnXmlDictionaryReaderClose
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(XmlDictionaryReader)
+ [m]	IAsyncResult BeginInvoke(XmlDictionaryReader,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Xml.UniqueId
+ [m]	Void .ctor()
+ [m]	Void .ctor(Byte[])
+ [m]	Void .ctor(Byte[],Int32)
+ [m]	Void .ctor(Char[],Int32,Int32)
+ [m]	Void .ctor(Guid)
+ [m]	Void .ctor(String)
+ [m]	Int32 get_CharArrayLength()
+ [m]	Boolean get_IsGuid()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(UniqueId,UniqueId)
+ [m]	Boolean op_Inequality(UniqueId,UniqueId)
+ [m]	Int32 ToCharArray(Char[],Int32)
+ [m]	String ToString()
+ [m]	Boolean TryGetGuid(Byte[],Int32)
+ [m]	Boolean TryGetGuid(Guid&)

f [t] System.Xml.XmlBinaryReaderSession
+ [m]	Void .ctor()
+ [m]	XmlDictionaryString Add(Int32,String)
+ [m]	Void Clear()
+ [m]	Boolean TryLookup(Int32,XmlDictionaryString&)
+ [m]	Boolean TryLookup(String,XmlDictionaryString&)
+ [m]	Boolean TryLookup(XmlDictionaryString,XmlDictionaryString&)

f [t] System.Xml.XmlBinaryWriterSession
+ [m]	Void .ctor()
+ [m]	Void Reset()
+ [m]	Boolean TryAdd(XmlDictionaryString,Int32&)

f [t] System.Xml.XmlDictionary
+ [m]	Void .ctor()
+ [m]	Void .ctor(Int32)
+ [m]	IXmlDictionary get_Empty()
+ [m]	XmlDictionaryString Add(String)
+ [m]	Boolean TryLookup(Int32,XmlDictionaryString&)
+ [m]	Boolean TryLookup(String,XmlDictionaryString&)
+ [m]	Boolean TryLookup(XmlDictionaryString,XmlDictionaryString&)

f [t] System.Xml.XmlDictionaryReader
+ [m]	Void .ctor()
+ [m]	Boolean get_CanCanonicalize()
+ [m]	XmlDictionaryReaderQuotas get_Quotas()
+ [m]	XmlDictionaryReader CreateBinaryReader(Byte[],Int32,Int32,IXmlDictionary,XmlDictionaryReaderQuotas)
+ [m]	XmlDictionaryReader CreateBinaryReader(Byte[],Int32,Int32,IXmlDictionary,XmlDictionaryReaderQuotas,XmlBinaryReaderSession)
+ [m]	XmlDictionaryReader CreateBinaryReader(Byte[],Int32,Int32,XmlDictionaryReaderQuotas)
+ [m]	XmlDictionaryReader CreateBinaryReader(Byte[],XmlDictionaryReaderQuotas)
+ [m]	XmlDictionaryReader CreateBinaryReader(Stream,IXmlDictionary,XmlDictionaryReaderQuotas)
+ [m]	XmlDictionaryReader CreateBinaryReader(Stream,IXmlDictionary,XmlDictionaryReaderQuotas,XmlBinaryReaderSession)
+ [m]	XmlDictionaryReader CreateBinaryReader(Stream,XmlDictionaryReaderQuotas)
+ [m]	XmlDictionaryReader CreateDictionaryReader(XmlReader)
+ [m]	XmlDictionaryReader CreateTextReader(Byte[],Int32,Int32,XmlDictionaryReaderQuotas)
+ [m]	XmlDictionaryReader CreateTextReader(Byte[],XmlDictionaryReaderQuotas)
+ [m]	XmlDictionaryReader CreateTextReader(Stream,Encoding,XmlDictionaryReaderQuotas,OnXmlDictionaryReaderClose)
+ [m]	XmlDictionaryReader CreateTextReader(Stream,XmlDictionaryReaderQuotas)
+ [m]	Void EndCanonicalization()
+ [m]	String GetAttribute(XmlDictionaryString,XmlDictionaryString)
+ [m]	Int32 IndexOfLocalName(String[],String)
+ [m]	Int32 IndexOfLocalName(XmlDictionaryString[],XmlDictionaryString)
+ [m]	Boolean IsLocalName(String)
+ [m]	Boolean IsLocalName(XmlDictionaryString)
+ [m]	Boolean IsNamespaceUri(String)
+ [m]	Boolean IsNamespaceUri(XmlDictionaryString)
+ [m]	Boolean IsStartArray(Type&)
+ [m]	Boolean IsStartElement(XmlDictionaryString,XmlDictionaryString)
+ [m]	Boolean IsTextNode(XmlNodeType)
+ [m]	Void MoveToStartElement()
+ [m]	Void MoveToStartElement(String)
+ [m]	Void MoveToStartElement(String,String)
+ [m]	Void MoveToStartElement(XmlDictionaryString,XmlDictionaryString)
+ [m]	Int32 ReadArray(String,String,Boolean[],Int32,Int32)
+ [m]	Int32 ReadArray(String,String,DateTime[],Int32,Int32)
+ [m]	Int32 ReadArray(String,String,Decimal[],Int32,Int32)
+ [m]	Int32 ReadArray(String,String,Double[],Int32,Int32)
+ [m]	Int32 ReadArray(String,String,Guid[],Int32,Int32)
+ [m]	Int32 ReadArray(String,String,Int16[],Int32,Int32)
+ [m]	Int32 ReadArray(String,String,Int32[],Int32,Int32)
+ [m]	Int32 ReadArray(String,String,Int64[],Int32,Int32)
+ [m]	Int32 ReadArray(String,String,Single[],Int32,Int32)
+ [m]	Int32 ReadArray(String,String,TimeSpan[],Int32,Int32)
+ [m]	Int32 ReadArray(XmlDictionaryString,XmlDictionaryString,Boolean[],Int32,Int32)
+ [m]	Int32 ReadArray(XmlDictionaryString,XmlDictionaryString,DateTime[],Int32,Int32)
+ [m]	Int32 ReadArray(XmlDictionaryString,XmlDictionaryString,Decimal[],Int32,Int32)
+ [m]	Int32 ReadArray(XmlDictionaryString,XmlDictionaryString,Double[],Int32,Int32)
+ [m]	Int32 ReadArray(XmlDictionaryString,XmlDictionaryString,Guid[],Int32,Int32)
+ [m]	Int32 ReadArray(XmlDictionaryString,XmlDictionaryString,Int16[],Int32,Int32)
+ [m]	Int32 ReadArray(XmlDictionaryString,XmlDictionaryString,Int32[],Int32,Int32)
+ [m]	Int32 ReadArray(XmlDictionaryString,XmlDictionaryString,Int64[],Int32,Int32)
+ [m]	Int32 ReadArray(XmlDictionaryString,XmlDictionaryString,Single[],Int32,Int32)
+ [m]	Int32 ReadArray(XmlDictionaryString,XmlDictionaryString,TimeSpan[],Int32,Int32)
+ [m]	Boolean[] ReadBooleanArray(String,String)
+ [m]	Boolean[] ReadBooleanArray(XmlDictionaryString,XmlDictionaryString)
+ [m]	Object ReadContentAs(Type,IXmlNamespaceResolver)
+ [m]	Byte[] ReadContentAsBase64()
+ [m]	Byte[] ReadContentAsBinHex()
+ [m]	Byte[] ReadContentAsBinHex(Int32)
+ [m]	Int32 ReadContentAsChars(Char[],Int32,Int32)
+ [m]	Decimal ReadContentAsDecimal()
+ [m]	Single ReadContentAsFloat()
+ [m]	Guid ReadContentAsGuid()
+ [m]	Void ReadContentAsQualifiedName(String&,String&)
+ [m]	String ReadContentAsString()
+ [m]	String ReadContentAsString(Int32)
+ [m]	String ReadContentAsString(String[],Int32&)
+ [m]	String ReadContentAsString(XmlDictionaryString[],Int32&)
+ [m]	TimeSpan ReadContentAsTimeSpan()
+ [m]	UniqueId ReadContentAsUniqueId()
+ [m]	DateTime[] ReadDateTimeArray(String,String)
+ [m]	DateTime[] ReadDateTimeArray(XmlDictionaryString,XmlDictionaryString)
+ [m]	Decimal[] ReadDecimalArray(String,String)
+ [m]	Decimal[] ReadDecimalArray(XmlDictionaryString,XmlDictionaryString)
+ [m]	Double[] ReadDoubleArray(String,String)
+ [m]	Double[] ReadDoubleArray(XmlDictionaryString,XmlDictionaryString)
+ [m]	Byte[] ReadElementContentAsBase64()
+ [m]	Byte[] ReadElementContentAsBinHex()
+ [m]	Boolean ReadElementContentAsBoolean()
+ [m]	Decimal ReadElementContentAsDecimal()
+ [m]	Double ReadElementContentAsDouble()
+ [m]	Single ReadElementContentAsFloat()
+ [m]	Guid ReadElementContentAsGuid()
+ [m]	Int32 ReadElementContentAsInt()
+ [m]	Int64 ReadElementContentAsLong()
+ [m]	String ReadElementContentAsString()
+ [m]	TimeSpan ReadElementContentAsTimeSpan()
+ [m]	UniqueId ReadElementContentAsUniqueId()
+ [m]	Void ReadFullStartElement()
+ [m]	Void ReadFullStartElement(String)
+ [m]	Void ReadFullStartElement(String,String)
+ [m]	Void ReadFullStartElement(XmlDictionaryString,XmlDictionaryString)
+ [m]	Guid[] ReadGuidArray(String,String)
+ [m]	Guid[] ReadGuidArray(XmlDictionaryString,XmlDictionaryString)
+ [m]	Int16[] ReadInt16Array(String,String)
+ [m]	Int16[] ReadInt16Array(XmlDictionaryString,XmlDictionaryString)
+ [m]	Int32[] ReadInt32Array(String,String)
+ [m]	Int32[] ReadInt32Array(XmlDictionaryString,XmlDictionaryString)
+ [m]	Int64[] ReadInt64Array(String,String)
+ [m]	Int64[] ReadInt64Array(XmlDictionaryString,XmlDictionaryString)
+ [m]	Single[] ReadSingleArray(String,String)
+ [m]	Single[] ReadSingleArray(XmlDictionaryString,XmlDictionaryString)
+ [m]	Void ReadStartElement(XmlDictionaryString,XmlDictionaryString)
+ [m]	TimeSpan[] ReadTimeSpanArray(String,String)
+ [m]	TimeSpan[] ReadTimeSpanArray(XmlDictionaryString,XmlDictionaryString)
+ [m]	Int32 ReadValueAsBase64(Byte[],Int32,Int32)
+ [m]	Void StartCanonicalization(Stream,Boolean,String[])
+ [m]	Boolean TryGetArrayLength(Int32&)
+ [m]	Boolean TryGetBase64ContentLength(Int32&)
+ [m]	Boolean TryGetLocalNameAsDictionaryString(XmlDictionaryString&)
+ [m]	Boolean TryGetNamespaceUriAsDictionaryString(XmlDictionaryString&)
+ [m]	Boolean TryGetValueAsDictionaryString(XmlDictionaryString&)

f [t] System.Xml.XmlDictionaryReaderQuotas
+ [m]	Void .ctor()
+ [m]	XmlDictionaryReaderQuotas get_Max()
+ [m]	Int32 get_MaxArrayLength()
+ [m]	Void set_MaxArrayLength(Int32)
+ [m]	Int32 get_MaxBytesPerRead()
+ [m]	Void set_MaxBytesPerRead(Int32)
+ [m]	Int32 get_MaxDepth()
+ [m]	Void set_MaxDepth(Int32)
+ [m]	Int32 get_MaxNameTableCharCount()
+ [m]	Void set_MaxNameTableCharCount(Int32)
+ [m]	Int32 get_MaxStringContentLength()
+ [m]	Void set_MaxStringContentLength(Int32)
+ [m]	XmlDictionaryReaderQuotaTypes get_ModifiedQuotas()
+ [m]	Void CopyTo(XmlDictionaryReaderQuotas)

f [t] System.Xml.XmlDictionaryReaderQuotaTypes

f [t] System.Xml.XmlDictionaryString
+ [m]	Void .ctor(IXmlDictionary,String,Int32)
+ [m]	IXmlDictionary get_Dictionary()
+ [m]	XmlDictionaryString get_Empty()
+ [m]	Int32 get_Key()
+ [m]	String get_Value()
+ [m]	String ToString()

f [t] System.Xml.XmlDictionaryWriter
+ [m]	Void .ctor()
+ [m]	Boolean get_CanCanonicalize()
+ [m]	XmlDictionaryWriter CreateBinaryWriter(Stream)
+ [m]	XmlDictionaryWriter CreateBinaryWriter(Stream,IXmlDictionary)
+ [m]	XmlDictionaryWriter CreateBinaryWriter(Stream,IXmlDictionary,XmlBinaryWriterSession)
+ [m]	XmlDictionaryWriter CreateBinaryWriter(Stream,IXmlDictionary,XmlBinaryWriterSession,Boolean)
+ [m]	XmlDictionaryWriter CreateDictionaryWriter(XmlWriter)
+ [m]	XmlDictionaryWriter CreateTextWriter(Stream)
+ [m]	XmlDictionaryWriter CreateTextWriter(Stream,Encoding)
+ [m]	XmlDictionaryWriter CreateTextWriter(Stream,Encoding,Boolean)
+ [m]	Void EndCanonicalization()
+ [m]	Void StartCanonicalization(Stream,Boolean,String[])
+ [m]	Void WriteArray(String,String,String,Boolean[],Int32,Int32)
+ [m]	Void WriteArray(String,String,String,DateTime[],Int32,Int32)
+ [m]	Void WriteArray(String,String,String,Decimal[],Int32,Int32)
+ [m]	Void WriteArray(String,String,String,Double[],Int32,Int32)
+ [m]	Void WriteArray(String,String,String,Guid[],Int32,Int32)
+ [m]	Void WriteArray(String,String,String,Int16[],Int32,Int32)
+ [m]	Void WriteArray(String,String,String,Int32[],Int32,Int32)
+ [m]	Void WriteArray(String,String,String,Int64[],Int32,Int32)
+ [m]	Void WriteArray(String,String,String,Single[],Int32,Int32)
+ [m]	Void WriteArray(String,String,String,TimeSpan[],Int32,Int32)
+ [m]	Void WriteArray(String,XmlDictionaryString,XmlDictionaryString,Boolean[],Int32,Int32)
+ [m]	Void WriteArray(String,XmlDictionaryString,XmlDictionaryString,DateTime[],Int32,Int32)
+ [m]	Void WriteArray(String,XmlDictionaryString,XmlDictionaryString,Decimal[],Int32,Int32)
+ [m]	Void WriteArray(String,XmlDictionaryString,XmlDictionaryString,Double[],Int32,Int32)
+ [m]	Void WriteArray(String,XmlDictionaryString,XmlDictionaryString,Guid[],Int32,Int32)
+ [m]	Void WriteArray(String,XmlDictionaryString,XmlDictionaryString,Int16[],Int32,Int32)
+ [m]	Void WriteArray(String,XmlDictionaryString,XmlDictionaryString,Int32[],Int32,Int32)
+ [m]	Void WriteArray(String,XmlDictionaryString,XmlDictionaryString,Int64[],Int32,Int32)
+ [m]	Void WriteArray(String,XmlDictionaryString,XmlDictionaryString,Single[],Int32,Int32)
+ [m]	Void WriteArray(String,XmlDictionaryString,XmlDictionaryString,TimeSpan[],Int32,Int32)
+ [m]	Void WriteAttributeString(String,XmlDictionaryString,XmlDictionaryString,String)
+ [m]	Void WriteAttributeString(XmlDictionaryString,XmlDictionaryString,String)
+ [m]	Void WriteElementString(String,XmlDictionaryString,XmlDictionaryString,String)
+ [m]	Void WriteElementString(XmlDictionaryString,XmlDictionaryString,String)
+ [m]	Void WriteNode(XmlDictionaryReader,Boolean)
+ [m]	Void WriteNode(XmlReader,Boolean)
+ [m]	Void WriteQualifiedName(XmlDictionaryString,XmlDictionaryString)
+ [m]	Void WriteStartAttribute(String,XmlDictionaryString,XmlDictionaryString)
+ [m]	Void WriteStartAttribute(XmlDictionaryString,XmlDictionaryString)
+ [m]	Void WriteStartElement(String,XmlDictionaryString,XmlDictionaryString)
+ [m]	Void WriteStartElement(XmlDictionaryString,XmlDictionaryString)
+ [m]	Void WriteString(XmlDictionaryString)
+ [m]	Void WriteTextNode(XmlDictionaryReader,Boolean)
+ [m]	Void WriteValue(Guid)
+ [m]	Void WriteValue(TimeSpan)
+ [m]	Void WriteValue(UniqueId)
+ [m]	Void WriteValue(XmlDictionaryString)
+ [m]	Void WriteXmlAttribute(String,String)
+ [m]	Void WriteXmlAttribute(XmlDictionaryString,XmlDictionaryString)
+ [m]	Void WriteXmlnsAttribute(String,String)
+ [m]	Void WriteXmlnsAttribute(String,XmlDictionaryString)

f [t] System.Runtime.Serialization.DataContractResolver
+ [m]	Void .ctor()
+ [m]	Type ResolveName(String,String,Type,DataContractResolver)
+ [m]	Boolean TryResolveType(Type,Type,DataContractResolver,XmlDictionaryString&,XmlDictionaryString&)

f [t] System.Runtime.Serialization.DataContractSerializer
+ [m]	Void .ctor(Type)
+ [m]	Void .ctor(Type,IEnumerable`1)
+ [m]	Void .ctor(Type,DataContractSerializerSettings)
+ [m]	Void .ctor(Type,String,String)
+ [m]	Void .ctor(Type,String,String,IEnumerable`1)
+ [m]	Void .ctor(Type,XmlDictionaryString,XmlDictionaryString)
+ [m]	Void .ctor(Type,XmlDictionaryString,XmlDictionaryString,IEnumerable`1)
+ [m]	Boolean get_IgnoreExtensionDataObject()
+ [m]	ReadOnlyCollection`1 get_KnownTypes()
+ [m]	Int32 get_MaxItemsInObjectGraph()
+ [m]	Boolean get_PreserveObjectReferences()
+ [m]	Boolean get_SerializeReadOnlyTypes()
+ [m]	Boolean IsStartObject(XmlDictionaryReader)
+ [m]	Boolean IsStartObject(XmlReader)
+ [m]	Object ReadObject(XmlDictionaryReader,Boolean)
+ [m]	Object ReadObject(XmlReader)
+ [m]	Object ReadObject(XmlReader,Boolean)
+ [m]	Void WriteEndObject(XmlDictionaryWriter)
+ [m]	Void WriteEndObject(XmlWriter)
+ [m]	Void WriteObject(XmlWriter,Object)
+ [m]	Void WriteObjectContent(XmlDictionaryWriter,Object)
+ [m]	Void WriteObjectContent(XmlWriter,Object)
+ [m]	Void WriteStartObject(XmlDictionaryWriter,Object)
+ [m]	Void WriteStartObject(XmlWriter,Object)

+ [t] System.Runtime.Serialization.DataContractSerializerExtensions
+ [m]	ISerializationSurrogateProvider GetSerializationSurrogateProvider(DataContractSerializer)
+ [m]	Void SetSerializationSurrogateProvider(DataContractSerializer,ISerializationSurrogateProvider)

f [t] System.Runtime.Serialization.DataContractSerializerSettings
+ [m]	Void .ctor()
+ [m]	DataContractResolver get_DataContractResolver()
+ [m]	Void set_DataContractResolver(DataContractResolver)
+ [m]	IEnumerable`1 get_KnownTypes()
+ [m]	Void set_KnownTypes(IEnumerable`1)
+ [m]	Int32 get_MaxItemsInObjectGraph()
+ [m]	Void set_MaxItemsInObjectGraph(Int32)
+ [m]	Boolean get_PreserveObjectReferences()
+ [m]	Void set_PreserveObjectReferences(Boolean)
+ [m]	XmlDictionaryString get_RootName()
+ [m]	Void set_RootName(XmlDictionaryString)
+ [m]	XmlDictionaryString get_RootNamespace()
+ [m]	Void set_RootNamespace(XmlDictionaryString)
+ [m]	Boolean get_SerializeReadOnlyTypes()
+ [m]	Void set_SerializeReadOnlyTypes(Boolean)

f [t] System.Runtime.Serialization.XmlObjectSerializer
+ [m]	Void .ctor()
+ [m]	Boolean IsStartObject(XmlDictionaryReader)
+ [m]	Boolean IsStartObject(XmlReader)
+ [m]	Object ReadObject(Stream)
+ [m]	Object ReadObject(XmlDictionaryReader)
+ [m]	Object ReadObject(XmlDictionaryReader,Boolean)
+ [m]	Object ReadObject(XmlReader)
+ [m]	Object ReadObject(XmlReader,Boolean)
+ [m]	Void WriteEndObject(XmlDictionaryWriter)
+ [m]	Void WriteEndObject(XmlWriter)
+ [m]	Void WriteObject(Stream,Object)
+ [m]	Void WriteObject(XmlDictionaryWriter,Object)
+ [m]	Void WriteObject(XmlWriter,Object)
+ [m]	Void WriteObjectContent(XmlDictionaryWriter,Object)
+ [m]	Void WriteObjectContent(XmlWriter,Object)
+ [m]	Void WriteStartObject(XmlDictionaryWriter,Object)
+ [m]	Void WriteStartObject(XmlWriter,Object)

---------------------------------------
- [a] System.Runtime.WindowsRuntime.dll
---------------------------------------
- [a] System.Runtime.WindowsRuntime.UI.Xaml.dll
---------------------------------------
+ [a] System.Security.AccessControl.dll
ref: ./netstandard/packages/System.Security.AccessControl/ref/netstandard1.3/System.Security.AccessControl.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Security.AccessControl.dll

f [t] System.Security.AccessControl.AccessControlActions

f [t] System.Security.AccessControl.AccessControlModification

f [t] System.Security.AccessControl.AccessControlSections

f [t] System.Security.AccessControl.AccessControlType

f [t] System.Security.AccessControl.AccessRule
+ [m]	Void .ctor(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
+ [m]	AccessControlType get_AccessControlType()

f [t] System.Security.AccessControl.AccessRule`1
+ [m]	Void .ctor(IdentityReference,T,AccessControlType)
+ [m]	Void .ctor(IdentityReference,T,InheritanceFlags,PropagationFlags,AccessControlType)
+ [m]	Void .ctor(String,T,AccessControlType)
+ [m]	Void .ctor(String,T,InheritanceFlags,PropagationFlags,AccessControlType)
+ [m]	T get_Rights()

f [t] System.Security.AccessControl.AceEnumerator
- [m]	Void .ctor()
+ [m]	GenericAce get_Current()
+ [m]	Object System.Collections.IEnumerator.get_Current()
+ [m]	Boolean MoveNext()
+ [m]	Void Reset()

f [t] System.Security.AccessControl.AceFlags

f [t] System.Security.AccessControl.AceQualifier

f [t] System.Security.AccessControl.AceType

f [t] System.Security.AccessControl.AuditFlags

f [t] System.Security.AccessControl.AuditRule
+ [m]	Void .ctor(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
+ [m]	AuditFlags get_AuditFlags()

f [t] System.Security.AccessControl.AuditRule`1
+ [m]	Void .ctor(IdentityReference,T,AuditFlags)
+ [m]	Void .ctor(IdentityReference,T,InheritanceFlags,PropagationFlags,AuditFlags)
+ [m]	Void .ctor(String,T,AuditFlags)
+ [m]	Void .ctor(String,T,InheritanceFlags,PropagationFlags,AuditFlags)
+ [m]	T get_Rights()

f [t] System.Security.AccessControl.AuthorizationRule
+ [m]	Void .ctor(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags)
+ [m]	Int32 get_AccessMask()
+ [m]	IdentityReference get_IdentityReference()
+ [m]	InheritanceFlags get_InheritanceFlags()
+ [m]	Boolean get_IsInherited()
+ [m]	PropagationFlags get_PropagationFlags()

f [t] System.Security.AccessControl.AuthorizationRuleCollection
- [m]	Void .ctor()
+ [m]	AuthorizationRule get_Item(Int32)
- [m]	Void AddRule(AuthorizationRule)
+ [m]	Void CopyTo(AuthorizationRule[],Int32)
- [m]	Int32 get_Count()
- [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
- [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
- [m]	Object System.Collections.ICollection.get_SyncRoot()
- [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)

f [t] System.Security.AccessControl.CommonAce
+ [m]	Void .ctor(AceFlags,AceQualifier,Int32,SecurityIdentifier,Boolean,Byte[])
+ [m]	Int32 get_BinaryLength()
+ [m]	Void GetBinaryForm(Byte[],Int32)
+ [m]	Int32 MaxOpaqueLength(Boolean)

f [t] System.Security.AccessControl.CommonAcl
- [m]	Void .ctor()
+ [m]	Int32 get_BinaryLength()
+ [m]	Int32 get_Count()
+ [m]	Boolean get_IsCanonical()
+ [m]	Boolean get_IsContainer()
+ [m]	Boolean get_IsDS()
+ [m]	GenericAce get_Item(Int32)
+ [m]	Void set_Item(Int32,GenericAce)
+ [m]	Byte get_Revision()
+ [m]	Void GetBinaryForm(Byte[],Int32)
+ [m]	Void Purge(SecurityIdentifier)
+ [m]	Void RemoveInheritedAces()

f [t] System.Security.AccessControl.CommonObjectSecurity
+ [m]	Void .ctor(Boolean)
+ [m]	Void AddAccessRule(AccessRule)
+ [m]	Void AddAuditRule(AuditRule)
+ [m]	AuthorizationRuleCollection GetAccessRules(Boolean,Boolean,Type)
+ [m]	AuthorizationRuleCollection GetAuditRules(Boolean,Boolean,Type)
+ [m]	Boolean ModifyAccess(AccessControlModification,AccessRule,Boolean&)
+ [m]	Boolean ModifyAudit(AccessControlModification,AuditRule,Boolean&)
+ [m]	Boolean RemoveAccessRule(AccessRule)
+ [m]	Void RemoveAccessRuleAll(AccessRule)
+ [m]	Void RemoveAccessRuleSpecific(AccessRule)
+ [m]	Boolean RemoveAuditRule(AuditRule)
+ [m]	Void RemoveAuditRuleAll(AuditRule)
+ [m]	Void RemoveAuditRuleSpecific(AuditRule)
+ [m]	Void ResetAccessRule(AccessRule)
+ [m]	Void SetAccessRule(AccessRule)
+ [m]	Void SetAuditRule(AuditRule)

f [t] System.Security.AccessControl.CommonSecurityDescriptor
+ [m]	Void .ctor(Boolean,Boolean,Byte[],Int32)
+ [m]	Void .ctor(Boolean,Boolean,ControlFlags,SecurityIdentifier,SecurityIdentifier,SystemAcl,DiscretionaryAcl)
+ [m]	Void .ctor(Boolean,Boolean,RawSecurityDescriptor)
+ [m]	Void .ctor(Boolean,Boolean,String)
+ [m]	ControlFlags get_ControlFlags()
+ [m]	DiscretionaryAcl get_DiscretionaryAcl()
+ [m]	Void set_DiscretionaryAcl(DiscretionaryAcl)
+ [m]	SecurityIdentifier get_Group()
+ [m]	Void set_Group(SecurityIdentifier)
+ [m]	Boolean get_IsContainer()
+ [m]	Boolean get_IsDiscretionaryAclCanonical()
+ [m]	Boolean get_IsDS()
+ [m]	Boolean get_IsSystemAclCanonical()
+ [m]	SecurityIdentifier get_Owner()
+ [m]	Void set_Owner(SecurityIdentifier)
+ [m]	SystemAcl get_SystemAcl()
+ [m]	Void set_SystemAcl(SystemAcl)
- [m]	Void AddDiscretionaryAcl(Byte,Int32)
- [m]	Void AddSystemAcl(Byte,Int32)
+ [m]	Void PurgeAccessControl(SecurityIdentifier)
+ [m]	Void PurgeAudit(SecurityIdentifier)
+ [m]	Void SetDiscretionaryAclProtection(Boolean,Boolean)
+ [m]	Void SetSystemAclProtection(Boolean,Boolean)

f [t] System.Security.AccessControl.CompoundAce
+ [m]	Void .ctor(AceFlags,Int32,CompoundAceType,SecurityIdentifier)
! [m]	Int32 get_BinaryLength()
+ [m]	CompoundAceType get_CompoundAceType()
+ [m]	Void set_CompoundAceType(CompoundAceType)
! [m]	Void GetBinaryForm(Byte[],Int32)

f [t] System.Security.AccessControl.CompoundAceType

f [t] System.Security.AccessControl.ControlFlags

f [t] System.Security.AccessControl.CustomAce
+ [m]	Void .ctor(AceType,AceFlags,Byte[])
! [m]	Int32 get_BinaryLength()
+ [m]	Int32 get_OpaqueLength()
! [m]	Void GetBinaryForm(Byte[],Int32)
+ [m]	Byte[] GetOpaque()
+ [m]	Void SetOpaque(Byte[])

f [t] System.Security.AccessControl.DiscretionaryAcl
+ [m]	Void .ctor(Boolean,Boolean,Byte,Int32)
+ [m]	Void .ctor(Boolean,Boolean,Int32)
+ [m]	Void .ctor(Boolean,Boolean,RawAcl)
+ [m]	Void AddAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
+ [m]	Void AddAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
- [m]	Void AddAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)
! [m]	Boolean RemoveAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
! [m]	Boolean RemoveAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
- [m]	Boolean RemoveAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)
+ [m]	Void RemoveAccessSpecific(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
+ [m]	Void RemoveAccessSpecific(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
- [m]	Void RemoveAccessSpecific(AccessControlType,SecurityIdentifier,ObjectAccessRule)
+ [m]	Void SetAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
+ [m]	Void SetAccess(AccessControlType,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
- [m]	Void SetAccess(AccessControlType,SecurityIdentifier,ObjectAccessRule)

f [t] System.Security.AccessControl.GenericAce
- [m]	Void .ctor()
+ [m]	AceFlags get_AceFlags()
+ [m]	Void set_AceFlags(AceFlags)
+ [m]	AceType get_AceType()
+ [m]	AuditFlags get_AuditFlags()
+ [m]	Int32 get_BinaryLength()
+ [m]	InheritanceFlags get_InheritanceFlags()
+ [m]	Boolean get_IsInherited()
+ [m]	PropagationFlags get_PropagationFlags()
+ [m]	GenericAce Copy()
+ [m]	GenericAce CreateFromBinaryForm(Byte[],Int32)
+ [m]	Boolean Equals(Object)
+ [m]	Void GetBinaryForm(Byte[],Int32)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(GenericAce,GenericAce)
+ [m]	Boolean op_Inequality(GenericAce,GenericAce)

f [t] System.Security.AccessControl.GenericAcl
+ [m]	Void .ctor()
+ [m]	Int32 get_BinaryLength()
+ [m]	Int32 get_Count()
+ [m]	Boolean get_IsSynchronized()
+ [m]	GenericAce get_Item(Int32)
+ [m]	Void set_Item(Int32,GenericAce)
+ [m]	Byte get_Revision()
+ [m]	Object get_SyncRoot()
+ [m]	Void CopyTo(GenericAce[],Int32)
+ [m]	Void GetBinaryForm(Byte[],Int32)
+ [m]	AceEnumerator GetEnumerator()
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()

f [t] System.Security.AccessControl.GenericSecurityDescriptor
+ [m]	Void .ctor()
+ [m]	Int32 get_BinaryLength()
+ [m]	ControlFlags get_ControlFlags()
+ [m]	SecurityIdentifier get_Group()
+ [m]	Void set_Group(SecurityIdentifier)
+ [m]	SecurityIdentifier get_Owner()
+ [m]	Void set_Owner(SecurityIdentifier)
+ [m]	Byte get_Revision()
+ [m]	Void GetBinaryForm(Byte[],Int32)
+ [m]	String GetSddlForm(AccessControlSections)
+ [m]	Boolean IsSddlConversionSupported()

f [t] System.Security.AccessControl.InheritanceFlags

f [t] System.Security.AccessControl.KnownAce
- [m]	Void .ctor()
+ [m]	Int32 get_AccessMask()
+ [m]	Void set_AccessMask(Int32)
+ [m]	SecurityIdentifier get_SecurityIdentifier()
+ [m]	Void set_SecurityIdentifier(SecurityIdentifier)

f [t] System.Security.AccessControl.NativeObjectSecurity
+ [m]	Void .ctor(Boolean,ResourceType)
+ [m]	Void .ctor(Boolean,ResourceType,SafeHandle,AccessControlSections)
+ [m]	Void .ctor(Boolean,ResourceType,SafeHandle,AccessControlSections,ExceptionFromErrorCode,Object)
+ [m]	Void .ctor(Boolean,ResourceType,ExceptionFromErrorCode,Object)
+ [m]	Void .ctor(Boolean,ResourceType,String,AccessControlSections)
+ [m]	Void .ctor(Boolean,ResourceType,String,AccessControlSections,ExceptionFromErrorCode,Object)
+ [m]	Void Persist(SafeHandle,AccessControlSections)
+ [m]	Void Persist(SafeHandle,AccessControlSections,Object)
+ [m]	Void Persist(String,AccessControlSections)
+ [m]	Void Persist(String,AccessControlSections,Object)

f [t] System.Security.AccessControl.ObjectAccessRule
+ [m]	Void .ctor(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,Guid,Guid,AccessControlType)
+ [m]	Guid get_InheritedObjectType()
+ [m]	ObjectAceFlags get_ObjectFlags()
+ [m]	Guid get_ObjectType()

f [t] System.Security.AccessControl.ObjectAce
+ [m]	Void .ctor(AceFlags,AceQualifier,Int32,SecurityIdentifier,ObjectAceFlags,Guid,Guid,Boolean,Byte[])
+ [m]	Int32 get_BinaryLength()
+ [m]	Guid get_InheritedObjectAceType()
+ [m]	Void set_InheritedObjectAceType(Guid)
+ [m]	ObjectAceFlags get_ObjectAceFlags()
+ [m]	Void set_ObjectAceFlags(ObjectAceFlags)
+ [m]	Guid get_ObjectAceType()
+ [m]	Void set_ObjectAceType(Guid)
+ [m]	Void GetBinaryForm(Byte[],Int32)
+ [m]	Int32 MaxOpaqueLength(Boolean)

f [t] System.Security.AccessControl.ObjectAceFlags

f [t] System.Security.AccessControl.ObjectAuditRule
+ [m]	Void .ctor(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,Guid,Guid,AuditFlags)
+ [m]	Guid get_InheritedObjectType()
+ [m]	ObjectAceFlags get_ObjectFlags()
+ [m]	Guid get_ObjectType()

f [t] System.Security.AccessControl.ObjectSecurity
- [m]	Void .ctor()
+ [m]	Void .ctor(Boolean,Boolean)
+ [m]	Void .ctor(CommonSecurityDescriptor)
+ [m]	Type get_AccessRightType()
+ [m]	Boolean get_AccessRulesModified()
+ [m]	Void set_AccessRulesModified(Boolean)
+ [m]	Type get_AccessRuleType()
+ [m]	Boolean get_AreAccessRulesCanonical()
+ [m]	Boolean get_AreAccessRulesProtected()
+ [m]	Boolean get_AreAuditRulesCanonical()
+ [m]	Boolean get_AreAuditRulesProtected()
+ [m]	Boolean get_AuditRulesModified()
+ [m]	Void set_AuditRulesModified(Boolean)
+ [m]	Type get_AuditRuleType()
+ [m]	Boolean get_GroupModified()
+ [m]	Void set_GroupModified(Boolean)
+ [m]	Boolean get_IsContainer()
+ [m]	Boolean get_IsDS()
+ [m]	Boolean get_OwnerModified()
+ [m]	Void set_OwnerModified(Boolean)
+ [m]	AccessRule AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
+ [m]	AuditRule AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
+ [m]	IdentityReference GetGroup(Type)
+ [m]	IdentityReference GetOwner(Type)
+ [m]	Byte[] GetSecurityDescriptorBinaryForm()
+ [m]	String GetSecurityDescriptorSddlForm(AccessControlSections)
+ [m]	Boolean IsSddlConversionSupported()
+ [m]	Boolean ModifyAccess(AccessControlModification,AccessRule,Boolean&)
+ [m]	Boolean ModifyAccessRule(AccessControlModification,AccessRule,Boolean&)
+ [m]	Boolean ModifyAudit(AccessControlModification,AuditRule,Boolean&)
+ [m]	Boolean ModifyAuditRule(AccessControlModification,AuditRule,Boolean&)
! [m]	Void Persist(Boolean,String,AccessControlSections)
+ [m]	Void Persist(SafeHandle,AccessControlSections)
+ [m]	Void Persist(String,AccessControlSections)
+ [m]	Void PurgeAccessRules(IdentityReference)
+ [m]	Void PurgeAuditRules(IdentityReference)
+ [m]	Void ReadLock()
+ [m]	Void ReadUnlock()
+ [m]	Void SetAccessRuleProtection(Boolean,Boolean)
+ [m]	Void SetAuditRuleProtection(Boolean,Boolean)
+ [m]	Void SetGroup(IdentityReference)
+ [m]	Void SetOwner(IdentityReference)
+ [m]	Void SetSecurityDescriptorBinaryForm(Byte[])
+ [m]	Void SetSecurityDescriptorBinaryForm(Byte[],AccessControlSections)
+ [m]	Void SetSecurityDescriptorSddlForm(String)
+ [m]	Void SetSecurityDescriptorSddlForm(String,AccessControlSections)
+ [m]	Void WriteLock()
+ [m]	Void WriteUnlock()

f [t] System.Security.AccessControl.ObjectSecurity`1
+ [m]	Void .ctor(Boolean,ResourceType)
+ [m]	Void .ctor(Boolean,ResourceType,SafeHandle,AccessControlSections)
+ [m]	Void .ctor(Boolean,ResourceType,SafeHandle,AccessControlSections,ExceptionFromErrorCode,Object)
+ [m]	Void .ctor(Boolean,ResourceType,String,AccessControlSections)
+ [m]	Void .ctor(Boolean,ResourceType,String,AccessControlSections,ExceptionFromErrorCode,Object)
+ [m]	Type get_AccessRightType()
+ [m]	Type get_AccessRuleType()
+ [m]	Type get_AuditRuleType()
+ [m]	AccessRule AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
+ [m]	Void AddAccessRule(AccessRule`1)
+ [m]	Void AddAuditRule(AuditRule`1)
+ [m]	AuditRule AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
+ [m]	Void Persist(SafeHandle)
+ [m]	Void Persist(String)
+ [m]	Boolean RemoveAccessRule(AccessRule`1)
+ [m]	Void RemoveAccessRuleAll(AccessRule`1)
+ [m]	Void RemoveAccessRuleSpecific(AccessRule`1)
+ [m]	Boolean RemoveAuditRule(AuditRule`1)
+ [m]	Void RemoveAuditRuleAll(AuditRule`1)
+ [m]	Void RemoveAuditRuleSpecific(AuditRule`1)
+ [m]	Void ResetAccessRule(AccessRule`1)
+ [m]	Void SetAccessRule(AccessRule`1)
+ [m]	Void SetAuditRule(AuditRule`1)

f [t] System.Security.AccessControl.PrivilegeNotHeldException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
! [m]	String get_PrivilegeName()

f [t] System.Security.AccessControl.PropagationFlags

f [t] System.Security.AccessControl.QualifiedAce
- [m]	Void .ctor()
+ [m]	AceQualifier get_AceQualifier()
+ [m]	Boolean get_IsCallback()
+ [m]	Int32 get_OpaqueLength()
+ [m]	Byte[] GetOpaque()
+ [m]	Void SetOpaque(Byte[])

f [t] System.Security.AccessControl.RawAcl
+ [m]	Void .ctor(Byte,Int32)
+ [m]	Void .ctor(Byte[],Int32)
+ [m]	Int32 get_BinaryLength()
+ [m]	Int32 get_Count()
+ [m]	GenericAce get_Item(Int32)
+ [m]	Void set_Item(Int32,GenericAce)
+ [m]	Byte get_Revision()
+ [m]	Void GetBinaryForm(Byte[],Int32)
+ [m]	Void InsertAce(Int32,GenericAce)
+ [m]	Void RemoveAce(Int32)

f [t] System.Security.AccessControl.RawSecurityDescriptor
+ [m]	Void .ctor(Byte[],Int32)
+ [m]	Void .ctor(ControlFlags,SecurityIdentifier,SecurityIdentifier,RawAcl,RawAcl)
+ [m]	Void .ctor(String)
+ [m]	ControlFlags get_ControlFlags()
+ [m]	RawAcl get_DiscretionaryAcl()
+ [m]	Void set_DiscretionaryAcl(RawAcl)
+ [m]	SecurityIdentifier get_Group()
+ [m]	Void set_Group(SecurityIdentifier)
+ [m]	SecurityIdentifier get_Owner()
+ [m]	Void set_Owner(SecurityIdentifier)
+ [m]	Byte get_ResourceManagerControl()
+ [m]	Void set_ResourceManagerControl(Byte)
+ [m]	RawAcl get_SystemAcl()
+ [m]	Void set_SystemAcl(RawAcl)
+ [m]	Void SetFlags(ControlFlags)

f [t] System.Security.AccessControl.ResourceType

f [t] System.Security.AccessControl.SecurityInfos

f [t] System.Security.AccessControl.SystemAcl
+ [m]	Void .ctor(Boolean,Boolean,Byte,Int32)
+ [m]	Void .ctor(Boolean,Boolean,Int32)
+ [m]	Void .ctor(Boolean,Boolean,RawAcl)
+ [m]	Void AddAudit(AuditFlags,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
+ [m]	Void AddAudit(AuditFlags,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
- [m]	Void AddAudit(SecurityIdentifier,ObjectAuditRule)
! [m]	Boolean RemoveAudit(AuditFlags,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
! [m]	Boolean RemoveAudit(AuditFlags,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
- [m]	Boolean RemoveAudit(SecurityIdentifier,ObjectAuditRule)
+ [m]	Void RemoveAuditSpecific(AuditFlags,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
+ [m]	Void RemoveAuditSpecific(AuditFlags,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
- [m]	Void RemoveAuditSpecific(SecurityIdentifier,ObjectAuditRule)
+ [m]	Void SetAudit(AuditFlags,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags)
+ [m]	Void SetAudit(AuditFlags,SecurityIdentifier,Int32,InheritanceFlags,PropagationFlags,ObjectAceFlags,Guid,Guid)
- [m]	Void SetAudit(SecurityIdentifier,ObjectAuditRule)

---------------------------------------
+ [a] System.Security.Claims.dll
ref: ./netstandard/packages/System.Security.Claims/ref/netstandard1.3/System.Security.Claims.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Security.Claims.dll

f [t] System.Security.Principal.GenericIdentity
+ [m]	Void .ctor(GenericIdentity)
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,String)
+ [m]	String get_AuthenticationType()
+ [m]	IEnumerable`1 get_Claims()
+ [m]	Boolean get_IsAuthenticated()
+ [m]	String get_Name()
+ [m]	ClaimsIdentity Clone()

f [t] System.Security.Principal.GenericPrincipal
+ [m]	Void .ctor(IIdentity,String[])
+ [m]	IIdentity get_Identity()
+ [m]	Boolean IsInRole(String)

f [t] System.Security.Claims.Claim
+ [m]	Void .ctor(BinaryReader)
+ [m]	Void .ctor(BinaryReader,ClaimsIdentity)
+ [m]	Void .ctor(Claim)
+ [m]	Void .ctor(Claim,ClaimsIdentity)
+ [m]	Void .ctor(String,String)
+ [m]	Void .ctor(String,String,String)
+ [m]	Void .ctor(String,String,String,String)
+ [m]	Void .ctor(String,String,String,String,String)
+ [m]	Void .ctor(String,String,String,String,String,ClaimsIdentity)
+ [m]	Byte[] get_CustomSerializationData()
+ [m]	String get_Issuer()
+ [m]	String get_OriginalIssuer()
+ [m]	IDictionary`2 get_Properties()
+ [m]	ClaimsIdentity get_Subject()
+ [m]	String get_Type()
+ [m]	String get_Value()
+ [m]	String get_ValueType()
+ [m]	Claim Clone()
+ [m]	Claim Clone(ClaimsIdentity)
+ [m]	String ToString()
+ [m]	Void WriteTo(BinaryWriter)
+ [m]	Void WriteTo(BinaryWriter,Byte[])

f [t] System.Security.Claims.ClaimsIdentity
+ [m]	Void .ctor()
+ [m]	Void .ctor(IEnumerable`1)
+ [m]	Void .ctor(IEnumerable`1,String)
+ [m]	Void .ctor(IEnumerable`1,String,String,String)
+ [m]	Void .ctor(BinaryReader)
+ [m]	Void .ctor(ClaimsIdentity)
+ [m]	Void .ctor(IIdentity)
+ [m]	Void .ctor(IIdentity,IEnumerable`1)
+ [m]	Void .ctor(IIdentity,IEnumerable`1,String,String,String)
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,String,String)
+ [m]	ClaimsIdentity get_Actor()
+ [m]	Void set_Actor(ClaimsIdentity)
+ [m]	String get_AuthenticationType()
+ [m]	Object get_BootstrapContext()
+ [m]	Void set_BootstrapContext(Object)
+ [m]	IEnumerable`1 get_Claims()
+ [m]	Byte[] get_CustomSerializationData()
+ [m]	Boolean get_IsAuthenticated()
+ [m]	String get_Label()
+ [m]	Void set_Label(String)
+ [m]	String get_Name()
+ [m]	String get_NameClaimType()
+ [m]	String get_RoleClaimType()
+ [m]	Void AddClaim(Claim)
+ [m]	Void AddClaims(IEnumerable`1)
+ [m]	ClaimsIdentity Clone()
+ [m]	Claim CreateClaim(BinaryReader)
+ [m]	IEnumerable`1 FindAll(Predicate`1)
+ [m]	IEnumerable`1 FindAll(String)
+ [m]	Claim FindFirst(Predicate`1)
+ [m]	Claim FindFirst(String)
+ [m]	Boolean HasClaim(Predicate`1)
+ [m]	Boolean HasClaim(String,String)
+ [m]	Void RemoveClaim(Claim)
+ [m]	Boolean TryRemoveClaim(Claim)
+ [m]	Void WriteTo(BinaryWriter)
+ [m]	Void WriteTo(BinaryWriter,Byte[])

f [t] System.Security.Claims.ClaimsPrincipal
+ [m]	Void .ctor()
+ [m]	Void .ctor(IEnumerable`1)
+ [m]	Void .ctor(BinaryReader)
+ [m]	Void .ctor(IIdentity)
+ [m]	Void .ctor(IPrincipal)
+ [m]	IEnumerable`1 get_Claims()
+ [m]	Func`1 get_ClaimsPrincipalSelector()
+ [m]	Void set_ClaimsPrincipalSelector(Func`1)
+ [m]	ClaimsPrincipal get_Current()
+ [m]	Byte[] get_CustomSerializationData()
+ [m]	IEnumerable`1 get_Identities()
+ [m]	IIdentity get_Identity()
+ [m]	Func`2 get_PrimaryIdentitySelector()
+ [m]	Void set_PrimaryIdentitySelector(Func`2)
+ [m]	Void AddIdentities(IEnumerable`1)
+ [m]	Void AddIdentity(ClaimsIdentity)
+ [m]	ClaimsPrincipal Clone()
+ [m]	ClaimsIdentity CreateClaimsIdentity(BinaryReader)
+ [m]	IEnumerable`1 FindAll(Predicate`1)
+ [m]	IEnumerable`1 FindAll(String)
+ [m]	Claim FindFirst(Predicate`1)
+ [m]	Claim FindFirst(String)
+ [m]	Boolean HasClaim(Predicate`1)
+ [m]	Boolean HasClaim(String,String)
+ [m]	Boolean IsInRole(String)
+ [m]	Void WriteTo(BinaryWriter)
+ [m]	Void WriteTo(BinaryWriter,Byte[])

f [t] System.Security.Claims.ClaimTypes

f [t] System.Security.Claims.ClaimValueTypes

---------------------------------------
+ [a] System.Security.Cryptography.Algorithms.dll
ref: ./netstandard/packages/System.Security.Cryptography.Algorithms/ref/netstandard1.6/System.Security.Cryptography.Algorithms.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Security.Cryptography.Algorithms.dll

f [t] System.Security.Cryptography.Aes
+ [m]	Void .ctor()
- [m]	KeySizes[] get_LegalBlockSizes()
- [m]	KeySizes[] get_LegalKeySizes()
+ [m]	Aes Create()

f [t] System.Security.Cryptography.DeriveBytes
+ [m]	Void .ctor()
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Byte[] GetBytes(Int32)
+ [m]	Void Reset()

+ [t] System.Security.Cryptography.ECCurve
! [m]	Boolean get_IsCharacteristic2()
! [m]	Boolean get_IsExplicit()
! [m]	Boolean get_IsNamed()
! [m]	Boolean get_IsPrime()
! [m]	Oid get_Oid()
! [m]	ECCurve CreateFromFriendlyName(String)
! [m]	ECCurve CreateFromOid(Oid)
! [m]	ECCurve CreateFromValue(String)
! [m]	Void Validate()

f [t] System.Security.Cryptography.ECDsa
+ [m]	Void .ctor()
! [m]	ECDsa Create()
- [m]	ECDsa Create(ECCurve)
- [m]	ECDsa Create(ECParameters)
- [m]	ECParameters ExportExplicitParameters(Boolean)
- [m]	ECParameters ExportParameters(Boolean)
- [m]	Void GenerateKey(ECCurve)
+ [m]	Byte[] HashData(Byte[],Int32,Int32,HashAlgorithmName)
+ [m]	Byte[] HashData(Stream,HashAlgorithmName)
- [m]	Void ImportParameters(ECParameters)
+ [m]	Byte[] SignData(Byte[],Int32,Int32,HashAlgorithmName)
+ [m]	Byte[] SignData(Byte[],HashAlgorithmName)
+ [m]	Byte[] SignData(Stream,HashAlgorithmName)
+ [m]	Byte[] SignHash(Byte[])
+ [m]	Boolean VerifyData(Byte[],Byte[],HashAlgorithmName)
+ [m]	Boolean VerifyData(Byte[],Int32,Int32,Byte[],HashAlgorithmName)
+ [m]	Boolean VerifyData(Stream,Byte[],HashAlgorithmName)
+ [m]	Boolean VerifyHash(Byte[],Byte[])

+ [t] System.Security.Cryptography.ECParameters
! [m]	Void Validate()

+ [t] System.Security.Cryptography.ECPoint

f [t] System.Security.Cryptography.HMACMD5
+ [m]	Void .ctor()
+ [m]	Void .ctor(Byte[])
- [m]	Int32 get_HashSize()
- [m]	Byte[] get_Key()
- [m]	Void set_Key(Byte[])
- [m]	Void Dispose(Boolean)
- [m]	Void HashCore(Byte[],Int32,Int32)
- [m]	Byte[] HashFinal()
- [m]	Void Initialize()

f [t] System.Security.Cryptography.HMACSHA1
+ [m]	Void .ctor()
+ [m]	Void .ctor(Byte[])
- [m]	Int32 get_HashSize()
- [m]	Byte[] get_Key()
- [m]	Void set_Key(Byte[])
- [m]	Void Dispose(Boolean)
- [m]	Void HashCore(Byte[],Int32,Int32)
- [m]	Byte[] HashFinal()
- [m]	Void Initialize()

f [t] System.Security.Cryptography.HMACSHA256
+ [m]	Void .ctor()
+ [m]	Void .ctor(Byte[])
- [m]	Int32 get_HashSize()
- [m]	Byte[] get_Key()
- [m]	Void set_Key(Byte[])
- [m]	Void Dispose(Boolean)
- [m]	Void HashCore(Byte[],Int32,Int32)
- [m]	Byte[] HashFinal()
- [m]	Void Initialize()

f [t] System.Security.Cryptography.HMACSHA384
+ [m]	Void .ctor()
+ [m]	Void .ctor(Byte[])
- [m]	Int32 get_HashSize()
- [m]	Byte[] get_Key()
- [m]	Void set_Key(Byte[])
- [m]	Void Dispose(Boolean)
- [m]	Void HashCore(Byte[],Int32,Int32)
- [m]	Byte[] HashFinal()
- [m]	Void Initialize()

f [t] System.Security.Cryptography.HMACSHA512
+ [m]	Void .ctor()
+ [m]	Void .ctor(Byte[])
- [m]	Int32 get_HashSize()
- [m]	Byte[] get_Key()
- [m]	Void set_Key(Byte[])
- [m]	Void Dispose(Boolean)
- [m]	Void HashCore(Byte[],Int32,Int32)
- [m]	Byte[] HashFinal()
- [m]	Void Initialize()

+ [t] System.Security.Cryptography.IncrementalHash
+ [m]	Void .ctor()
! [m]	HashAlgorithmName get_AlgorithmName()
+ [m]	Void AppendData(Byte[])
+ [m]	Void AppendData(Byte[],Int32,Int32)
! [m]	IncrementalHash CreateHash(HashAlgorithmName)
! [m]	IncrementalHash CreateHMAC(HashAlgorithmName,Byte[])
+ [m]	Void Dispose()
! [m]	Byte[] GetHashAndReset()

f [t] System.Security.Cryptography.MD5
+ [m]	Void .ctor()
+ [m]	MD5 Create()

f [t] System.Security.Cryptography.RandomNumberGenerator
+ [m]	Void .ctor()
+ [m]	RandomNumberGenerator Create()
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Void GetBytes(Byte[])

f [t] System.Security.Cryptography.Rfc2898DeriveBytes
+ [m]	Void .ctor(Byte[],Byte[],Int32)
+ [m]	Void .ctor(String,Byte[])
+ [m]	Void .ctor(String,Byte[],Int32)
+ [m]	Void .ctor(String,Int32)
+ [m]	Void .ctor(String,Int32,Int32)
+ [m]	Int32 get_IterationCount()
+ [m]	Void set_IterationCount(Int32)
+ [m]	Byte[] get_Salt()
+ [m]	Void set_Salt(Byte[])
+ [m]	Void Dispose(Boolean)
+ [m]	Byte[] GetBytes(Int32)
+ [m]	Void Reset()

f [t] System.Security.Cryptography.RSA
+ [m]	Void .ctor()
+ [m]	RSA Create()
+ [m]	Byte[] Decrypt(Byte[],RSAEncryptionPadding)
+ [m]	Byte[] Encrypt(Byte[],RSAEncryptionPadding)
+ [m]	RSAParameters ExportParameters(Boolean)
+ [m]	Byte[] HashData(Byte[],Int32,Int32,HashAlgorithmName)
+ [m]	Byte[] HashData(Stream,HashAlgorithmName)
+ [m]	Void ImportParameters(RSAParameters)
+ [m]	Byte[] SignData(Byte[],Int32,Int32,HashAlgorithmName,RSASignaturePadding)
+ [m]	Byte[] SignData(Byte[],HashAlgorithmName,RSASignaturePadding)
+ [m]	Byte[] SignData(Stream,HashAlgorithmName,RSASignaturePadding)
+ [m]	Byte[] SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
+ [m]	Boolean VerifyData(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
+ [m]	Boolean VerifyData(Byte[],Int32,Int32,Byte[],HashAlgorithmName,RSASignaturePadding)
+ [m]	Boolean VerifyData(Stream,Byte[],HashAlgorithmName,RSASignaturePadding)
+ [m]	Boolean VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)

f [t] System.Security.Cryptography.RSAEncryptionPadding
- [m]	Void .ctor()
+ [m]	RSAEncryptionPaddingMode get_Mode()
+ [m]	HashAlgorithmName get_OaepHashAlgorithm()
+ [m]	RSAEncryptionPadding get_OaepSHA1()
+ [m]	RSAEncryptionPadding get_OaepSHA256()
+ [m]	RSAEncryptionPadding get_OaepSHA384()
+ [m]	RSAEncryptionPadding get_OaepSHA512()
+ [m]	RSAEncryptionPadding get_Pkcs1()
+ [m]	RSAEncryptionPadding CreateOaep(HashAlgorithmName)
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(RSAEncryptionPadding)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(RSAEncryptionPadding,RSAEncryptionPadding)
+ [m]	Boolean op_Inequality(RSAEncryptionPadding,RSAEncryptionPadding)
+ [m]	String ToString()

f [t] System.Security.Cryptography.RSAEncryptionPaddingMode

f [t] System.Security.Cryptography.RSAParameters

f [t] System.Security.Cryptography.RSASignaturePadding
- [m]	Void .ctor()
+ [m]	RSASignaturePaddingMode get_Mode()
+ [m]	RSASignaturePadding get_Pkcs1()
+ [m]	RSASignaturePadding get_Pss()
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(RSASignaturePadding)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(RSASignaturePadding,RSASignaturePadding)
+ [m]	Boolean op_Inequality(RSASignaturePadding,RSASignaturePadding)
+ [m]	String ToString()

f [t] System.Security.Cryptography.RSASignaturePaddingMode

f [t] System.Security.Cryptography.SHA1
+ [m]	Void .ctor()
+ [m]	SHA1 Create()

f [t] System.Security.Cryptography.SHA256
+ [m]	Void .ctor()
+ [m]	SHA256 Create()

f [t] System.Security.Cryptography.SHA384
+ [m]	Void .ctor()
+ [m]	SHA384 Create()

f [t] System.Security.Cryptography.SHA512
+ [m]	Void .ctor()
+ [m]	SHA512 Create()

f [t] System.Security.Cryptography.TripleDES
+ [m]	Void .ctor()
+ [m]	Byte[] get_Key()
+ [m]	Void set_Key(Byte[])
- [m]	KeySizes[] get_LegalBlockSizes()
- [m]	KeySizes[] get_LegalKeySizes()
+ [m]	TripleDES Create()
+ [m]	Boolean IsWeakKey(Byte[])

---------------------------------------
+ [a] System.Security.Cryptography.Cng.dll
ref: ./netstandard/packages/System.Security.Cryptography.Cng/ref/netstandard1.6/System.Security.Cryptography.Cng.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Security.Cryptography.Cng.dll

f [t] System.Security.Cryptography.AesCng
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,CngProvider)
+ [m]	Void .ctor(String,CngProvider,CngKeyOpenOptions)
! [m]	Byte[] get_Key()
! [m]	Void set_Key(Byte[])
! [m]	Int32 get_KeySize()
! [m]	Void set_KeySize(Int32)
! [m]	ICryptoTransform CreateDecryptor()
! [m]	ICryptoTransform CreateDecryptor(Byte[],Byte[])
! [m]	ICryptoTransform CreateEncryptor()
+ [m]	ICryptoTransform CreateEncryptor(Byte[],Byte[])
! [m]	Void Dispose(Boolean)
! [m]	Void GenerateIV()
! [m]	Void GenerateKey()

f [t] System.Security.Cryptography.CngAlgorithm
+ [m]	Void .ctor(String)
+ [m]	String get_Algorithm()
- [m]	CngAlgorithm get_ECDiffieHellman()
+ [m]	CngAlgorithm get_ECDiffieHellmanP256()
+ [m]	CngAlgorithm get_ECDiffieHellmanP384()
+ [m]	CngAlgorithm get_ECDiffieHellmanP521()
- [m]	CngAlgorithm get_ECDsa()
+ [m]	CngAlgorithm get_ECDsaP256()
+ [m]	CngAlgorithm get_ECDsaP384()
+ [m]	CngAlgorithm get_ECDsaP521()
+ [m]	CngAlgorithm get_MD5()
+ [m]	CngAlgorithm get_Rsa()
+ [m]	CngAlgorithm get_Sha1()
+ [m]	CngAlgorithm get_Sha256()
+ [m]	CngAlgorithm get_Sha384()
+ [m]	CngAlgorithm get_Sha512()
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(CngAlgorithm)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(CngAlgorithm,CngAlgorithm)
+ [m]	Boolean op_Inequality(CngAlgorithm,CngAlgorithm)
+ [m]	String ToString()

f [t] System.Security.Cryptography.CngAlgorithmGroup
+ [m]	Void .ctor(String)
+ [m]	String get_AlgorithmGroup()
+ [m]	CngAlgorithmGroup get_DiffieHellman()
+ [m]	CngAlgorithmGroup get_Dsa()
+ [m]	CngAlgorithmGroup get_ECDiffieHellman()
+ [m]	CngAlgorithmGroup get_ECDsa()
+ [m]	CngAlgorithmGroup get_Rsa()
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(CngAlgorithmGroup)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(CngAlgorithmGroup,CngAlgorithmGroup)
+ [m]	Boolean op_Inequality(CngAlgorithmGroup,CngAlgorithmGroup)
+ [m]	String ToString()

f [t] System.Security.Cryptography.CngExportPolicies

f [t] System.Security.Cryptography.CngKey
+ [m]	Void .ctor()
- [m]	CngAlgorithm get_Algorithm()
- [m]	CngAlgorithmGroup get_AlgorithmGroup()
- [m]	CngExportPolicies get_ExportPolicy()
- [m]	SafeNCryptKeyHandle get_Handle()
- [m]	Boolean get_IsEphemeral()
- [m]	Boolean get_IsMachineKey()
- [m]	String get_KeyName()
- [m]	Int32 get_KeySize()
- [m]	CngKeyUsages get_KeyUsage()
- [m]	IntPtr get_ParentWindowHandle()
- [m]	Void set_ParentWindowHandle(IntPtr)
- [m]	CngProvider get_Provider()
- [m]	SafeNCryptProviderHandle get_ProviderHandle()
- [m]	CngUIPolicy get_UIPolicy()
- [m]	String get_UniqueName()
- [m]	CngKey Create(CngAlgorithm)
- [m]	CngKey Create(CngAlgorithm,String)
- [m]	CngKey Create(CngAlgorithm,String,CngKeyCreationParameters)
- [m]	Void Delete()
+ [m]	Void Dispose()
- [m]	Boolean Exists(String)
- [m]	Boolean Exists(String,CngProvider)
- [m]	Boolean Exists(String,CngProvider,CngKeyOpenOptions)
- [m]	Byte[] Export(CngKeyBlobFormat)
- [m]	CngProperty GetProperty(String,CngPropertyOptions)
- [m]	Boolean HasProperty(String,CngPropertyOptions)
- [m]	CngKey Import(Byte[],CngKeyBlobFormat)
- [m]	CngKey Import(Byte[],CngKeyBlobFormat,CngProvider)
- [m]	CngKey Open(SafeNCryptKeyHandle,CngKeyHandleOpenOptions)
- [m]	CngKey Open(String)
- [m]	CngKey Open(String,CngProvider)
- [m]	CngKey Open(String,CngProvider,CngKeyOpenOptions)
- [m]	Void SetProperty(CngProperty)

f [t] System.Security.Cryptography.CngKeyBlobFormat
+ [m]	Void .ctor(String)
- [m]	CngKeyBlobFormat get_EccFullPrivateBlob()
- [m]	CngKeyBlobFormat get_EccFullPublicBlob()
+ [m]	CngKeyBlobFormat get_EccPrivateBlob()
+ [m]	CngKeyBlobFormat get_EccPublicBlob()
+ [m]	String get_Format()
+ [m]	CngKeyBlobFormat get_GenericPrivateBlob()
+ [m]	CngKeyBlobFormat get_GenericPublicBlob()
+ [m]	CngKeyBlobFormat get_OpaqueTransportBlob()
+ [m]	CngKeyBlobFormat get_Pkcs8PrivateBlob()
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(CngKeyBlobFormat)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(CngKeyBlobFormat,CngKeyBlobFormat)
+ [m]	Boolean op_Inequality(CngKeyBlobFormat,CngKeyBlobFormat)
+ [m]	String ToString()

f [t] System.Security.Cryptography.CngKeyCreationOptions

f [t] System.Security.Cryptography.CngKeyCreationParameters
+ [m]	Void .ctor()
+ [m]	Nullable`1 get_ExportPolicy()
+ [m]	Void set_ExportPolicy(Nullable`1)
+ [m]	CngKeyCreationOptions get_KeyCreationOptions()
+ [m]	Void set_KeyCreationOptions(CngKeyCreationOptions)
+ [m]	Nullable`1 get_KeyUsage()
+ [m]	Void set_KeyUsage(Nullable`1)
+ [m]	CngPropertyCollection get_Parameters()
+ [m]	IntPtr get_ParentWindowHandle()
+ [m]	Void set_ParentWindowHandle(IntPtr)
+ [m]	CngProvider get_Provider()
+ [m]	Void set_Provider(CngProvider)
+ [m]	CngUIPolicy get_UIPolicy()
+ [m]	Void set_UIPolicy(CngUIPolicy)

f [t] System.Security.Cryptography.CngKeyHandleOpenOptions

f [t] System.Security.Cryptography.CngKeyOpenOptions

f [t] System.Security.Cryptography.CngKeyUsages

f [t] System.Security.Cryptography.CngProperty
+ [m]	Void .ctor(String,Byte[],CngPropertyOptions)
+ [m]	String get_Name()
+ [m]	CngPropertyOptions get_Options()
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(CngProperty)
+ [m]	Int32 GetHashCode()
+ [m]	Byte[] GetValue()
+ [m]	Boolean op_Equality(CngProperty,CngProperty)
+ [m]	Boolean op_Inequality(CngProperty,CngProperty)

f [t] System.Security.Cryptography.CngPropertyCollection
+ [m]	Void .ctor()

f [t] System.Security.Cryptography.CngPropertyOptions

f [t] System.Security.Cryptography.CngProvider
+ [m]	Void .ctor(String)
+ [m]	CngProvider get_MicrosoftSmartCardKeyStorageProvider()
+ [m]	CngProvider get_MicrosoftSoftwareKeyStorageProvider()
+ [m]	String get_Provider()
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(CngProvider)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(CngProvider,CngProvider)
+ [m]	Boolean op_Inequality(CngProvider,CngProvider)
+ [m]	String ToString()

f [t] System.Security.Cryptography.CngUIPolicy
+ [m]	Void .ctor(CngUIProtectionLevels)
+ [m]	Void .ctor(CngUIProtectionLevels,String)
+ [m]	Void .ctor(CngUIProtectionLevels,String,String)
+ [m]	Void .ctor(CngUIProtectionLevels,String,String,String)
+ [m]	Void .ctor(CngUIProtectionLevels,String,String,String,String)
+ [m]	String get_CreationTitle()
+ [m]	String get_Description()
+ [m]	String get_FriendlyName()
+ [m]	CngUIProtectionLevels get_ProtectionLevel()
+ [m]	String get_UseContext()

f [t] System.Security.Cryptography.CngUIProtectionLevels

f [t] System.Security.Cryptography.ECDsaCng
+ [m]	Void .ctor()
- [m]	Void .ctor(Int32)
- [m]	Void .ctor(CngKey)
- [m]	Void .ctor(ECCurve)
- [m]	CngKey get_Key()
- [m]	Int32 get_KeySize()
- [m]	Void set_KeySize(Int32)
- [m]	KeySizes[] get_LegalKeySizes()
- [m]	Void Dispose(Boolean)
- [m]	ECParameters ExportExplicitParameters(Boolean)
- [m]	ECParameters ExportParameters(Boolean)
- [m]	Void GenerateKey(ECCurve)
- [m]	Byte[] HashData(Byte[],Int32,Int32,HashAlgorithmName)
- [m]	Byte[] HashData(Stream,HashAlgorithmName)
- [m]	Void ImportParameters(ECParameters)
! [m]	Byte[] SignHash(Byte[])
! [m]	Boolean VerifyHash(Byte[],Byte[])

f [t] System.Security.Cryptography.RSACng
+ [m]	Void .ctor()
- [m]	Void .ctor(Int32)
- [m]	Void .ctor(CngKey)
- [m]	CngKey get_Key()
- [m]	KeySizes[] get_LegalKeySizes()
- [m]	Byte[] Decrypt(Byte[],RSAEncryptionPadding)
- [m]	Void Dispose(Boolean)
- [m]	Byte[] Encrypt(Byte[],RSAEncryptionPadding)
! [m]	RSAParameters ExportParameters(Boolean)
- [m]	Byte[] HashData(Byte[],Int32,Int32,HashAlgorithmName)
- [m]	Byte[] HashData(Stream,HashAlgorithmName)
! [m]	Void ImportParameters(RSAParameters)
- [m]	Byte[] SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
- [m]	Boolean VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)

f [t] System.Security.Cryptography.TripleDESCng
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,CngProvider)
+ [m]	Void .ctor(String,CngProvider,CngKeyOpenOptions)
! [m]	Byte[] get_Key()
! [m]	Void set_Key(Byte[])
! [m]	Int32 get_KeySize()
! [m]	Void set_KeySize(Int32)
- [m]	KeySizes[] get_LegalKeySizes()
! [m]	ICryptoTransform CreateDecryptor()
! [m]	ICryptoTransform CreateDecryptor(Byte[],Byte[])
! [m]	ICryptoTransform CreateEncryptor()
+ [m]	ICryptoTransform CreateEncryptor(Byte[],Byte[])
! [m]	Void Dispose(Boolean)
! [m]	Void GenerateIV()
! [m]	Void GenerateKey()

f [t] Microsoft.Win32.SafeHandles.SafeNCryptHandle
+ [m]	Void .ctor()
! [m]	Boolean get_IsInvalid()
+ [m]	Boolean ReleaseHandle()
+ [m]	Boolean ReleaseNativeHandle()

f [t] Microsoft.Win32.SafeHandles.SafeNCryptKeyHandle
+ [m]	Void .ctor()
+ [m]	Boolean ReleaseNativeHandle()

f [t] Microsoft.Win32.SafeHandles.SafeNCryptProviderHandle
+ [m]	Void .ctor()
+ [m]	Boolean ReleaseNativeHandle()

f [t] Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle
+ [m]	Void .ctor()
+ [m]	Boolean ReleaseNativeHandle()

---------------------------------------
+ [a] System.Security.Cryptography.Csp.dll
ref: ./netstandard/packages/System.Security.Cryptography.Csp/ref/netstandard1.3/System.Security.Cryptography.Csp.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Security.Cryptography.Csp.dll

f [t] System.Security.Cryptography.CspKeyContainerInfo
+ [m]	Void .ctor(CspParameters)
+ [m]	Boolean get_Accessible()
+ [m]	Boolean get_Exportable()
+ [m]	Boolean get_HardwareDevice()
+ [m]	String get_KeyContainerName()
+ [m]	KeyNumber get_KeyNumber()
+ [m]	Boolean get_MachineKeyStore()
+ [m]	Boolean get_Protected()
+ [m]	String get_ProviderName()
+ [m]	Int32 get_ProviderType()
+ [m]	Boolean get_RandomlyGenerated()
+ [m]	Boolean get_Removable()
+ [m]	String get_UniqueKeyContainerName()

f [t] System.Security.Cryptography.CspParameters
+ [m]	Void .ctor()
+ [m]	Void .ctor(Int32)
+ [m]	Void .ctor(Int32,String)
+ [m]	Void .ctor(Int32,String,String)
+ [m]	CspProviderFlags get_Flags()
+ [m]	Void set_Flags(CspProviderFlags)
+ [m]	IntPtr get_ParentWindowHandle()
+ [m]	Void set_ParentWindowHandle(IntPtr)

f [t] System.Security.Cryptography.CspProviderFlags

f [t] System.Security.Cryptography.ICspAsymmetricAlgorithm
+ [m]	CspKeyContainerInfo get_CspKeyContainerInfo()
+ [m]	Byte[] ExportCspBlob(Boolean)
+ [m]	Void ImportCspBlob(Byte[])

f [t] System.Security.Cryptography.KeyNumber

f [t] System.Security.Cryptography.RSACryptoServiceProvider
+ [m]	Void .ctor()
+ [m]	Void .ctor(Int32)
+ [m]	Void .ctor(Int32,CspParameters)
+ [m]	Void .ctor(CspParameters)
+ [m]	CspKeyContainerInfo get_CspKeyContainerInfo()
+ [m]	Int32 get_KeySize()
+ [m]	Boolean get_PersistKeyInCsp()
+ [m]	Void set_PersistKeyInCsp(Boolean)
+ [m]	Boolean get_PublicOnly()
+ [m]	Boolean get_UseMachineKeyStore()
+ [m]	Void set_UseMachineKeyStore(Boolean)
+ [m]	Byte[] Decrypt(Byte[],Boolean)
- [m]	Byte[] Decrypt(Byte[],RSAEncryptionPadding)
+ [m]	Void Dispose(Boolean)
+ [m]	Byte[] Encrypt(Byte[],Boolean)
- [m]	Byte[] Encrypt(Byte[],RSAEncryptionPadding)
+ [m]	Byte[] ExportCspBlob(Boolean)
+ [m]	RSAParameters ExportParameters(Boolean)
- [m]	Byte[] HashData(Byte[],Int32,Int32,HashAlgorithmName)
- [m]	Byte[] HashData(Stream,HashAlgorithmName)
+ [m]	Void ImportCspBlob(Byte[])
+ [m]	Void ImportParameters(RSAParameters)
- [m]	KeySizes[] get_LegalKeySizes()
+ [m]	Byte[] SignData(Byte[],Int32,Int32,Object)
+ [m]	Byte[] SignData(Byte[],Object)
+ [m]	Byte[] SignData(Stream,Object)
- [m]	Byte[] SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
+ [m]	Byte[] SignHash(Byte[],String)
+ [m]	Boolean VerifyData(Byte[],Object,Byte[])
- [m]	Boolean VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)
+ [m]	Boolean VerifyHash(Byte[],String,Byte[])

---------------------------------------
+ [a] System.Security.Cryptography.Encoding.dll
ref: ./netstandard/packages/System.Security.Cryptography.Encoding/ref/netstandard1.3/System.Security.Cryptography.Encoding.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Security.Cryptography.Encoding.dll

f [t] System.Security.Cryptography.AsnEncodedData
+ [m]	Void .ctor()
+ [m]	Void .ctor(Byte[])
+ [m]	Void .ctor(AsnEncodedData)
+ [m]	Void .ctor(Oid,Byte[])
+ [m]	Void .ctor(String,Byte[])
+ [m]	Oid get_Oid()
+ [m]	Void set_Oid(Oid)
+ [m]	Byte[] get_RawData()
+ [m]	Void set_RawData(Byte[])
+ [m]	Void CopyFrom(AsnEncodedData)
+ [m]	String Format(Boolean)

f [t] System.Security.Cryptography.Oid
+ [m]	Void .ctor(Oid)
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,String)
+ [m]	String get_FriendlyName()
+ [m]	Void set_FriendlyName(String)
+ [m]	String get_Value()
+ [m]	Void set_Value(String)
- [m]	Oid FromFriendlyName(String,OidGroup)
- [m]	Oid FromOidValue(String,OidGroup)

f [t] System.Security.Cryptography.OidCollection
+ [m]	Void .ctor()
+ [m]	Int32 get_Count()
+ [m]	Oid get_Item(Int32)
+ [m]	Oid get_Item(String)
- [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
- [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Int32 Add(Oid)
+ [m]	Void CopyTo(Oid[],Int32)
+ [m]	OidEnumerator GetEnumerator()
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()

f [t] System.Security.Cryptography.OidEnumerator
- [m]	Void .ctor()
+ [m]	Oid get_Current()
+ [m]	Object System.Collections.IEnumerator.get_Current()
+ [m]	Boolean MoveNext()
+ [m]	Void Reset()

f [t] System.Security.Cryptography.OidGroup

f [t] System.Security.Cryptography.AsnEncodedDataCollection
+ [m]	Void .ctor()
+ [m]	Void .ctor(AsnEncodedData)
+ [m]	Int32 get_Count()
- [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
- [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	AsnEncodedData get_Item(Int32)
+ [m]	Int32 Add(AsnEncodedData)
+ [m]	Void CopyTo(AsnEncodedData[],Int32)
+ [m]	AsnEncodedDataEnumerator GetEnumerator()
+ [m]	Void Remove(AsnEncodedData)
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()

f [t] System.Security.Cryptography.AsnEncodedDataEnumerator
- [m]	Void .ctor()
+ [m]	AsnEncodedData get_Current()
+ [m]	Object System.Collections.IEnumerator.get_Current()
+ [m]	Boolean MoveNext()
+ [m]	Void Reset()

---------------------------------------
+ [a] System.Security.Cryptography.OpenSsl.dll
ref: ./netstandard/packages/System.Security.Cryptography.OpenSsl/ref/netstandard1.6/System.Security.Cryptography.OpenSsl.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Security.Cryptography.OpenSsl.dll

+ [t] System.Security.Cryptography.ECDsaOpenSsl
+ [m]	Void .ctor()
- [m]	Void .ctor(Int32)
- [m]	Void .ctor(IntPtr)
- [m]	Void .ctor(ECCurve)
- [m]	Void .ctor(SafeEvpPKeyHandle)
- [m]	Int32 get_KeySize()
- [m]	Void set_KeySize(Int32)
- [m]	KeySizes[] get_LegalKeySizes()
- [m]	Void Dispose(Boolean)
- [m]	SafeEvpPKeyHandle DuplicateKeyHandle()
- [m]	ECParameters ExportExplicitParameters(Boolean)
- [m]	ECParameters ExportParameters(Boolean)
- [m]	Void GenerateKey(ECCurve)
- [m]	Byte[] HashData(Byte[],Int32,Int32,HashAlgorithmName)
- [m]	Byte[] HashData(Stream,HashAlgorithmName)
- [m]	Void ImportParameters(ECParameters)
! [m]	Byte[] SignHash(Byte[])
! [m]	Boolean VerifyHash(Byte[],Byte[])

+ [t] System.Security.Cryptography.RSAOpenSsl
+ [m]	Void .ctor()
- [m]	Void .ctor(Int32)
- [m]	Void .ctor(IntPtr)
- [m]	Void .ctor(RSAParameters)
- [m]	Void .ctor(SafeEvpPKeyHandle)
- [m]	Void set_KeySize(Int32)
- [m]	KeySizes[] get_LegalKeySizes()
- [m]	Byte[] Decrypt(Byte[],RSAEncryptionPadding)
- [m]	Void Dispose(Boolean)
- [m]	SafeEvpPKeyHandle DuplicateKeyHandle()
- [m]	Byte[] Encrypt(Byte[],RSAEncryptionPadding)
! [m]	RSAParameters ExportParameters(Boolean)
- [m]	Byte[] HashData(Byte[],Int32,Int32,HashAlgorithmName)
- [m]	Byte[] HashData(Stream,HashAlgorithmName)
! [m]	Void ImportParameters(RSAParameters)
! [m]	Byte[] SignHash(Byte[],HashAlgorithmName,RSASignaturePadding)
! [m]	Boolean VerifyHash(Byte[],Byte[],HashAlgorithmName,RSASignaturePadding)

+ [t] System.Security.Cryptography.SafeEvpPKeyHandle
+ [m]	Void .ctor(IntPtr,Boolean)
! [m]	Boolean get_IsInvalid()
! [m]	SafeEvpPKeyHandle DuplicateHandle()
+ [m]	Boolean ReleaseHandle()

---------------------------------------
+ [a] System.Security.Cryptography.Pkcs.dll
ref: ./netstandard/packages/System.Security.Cryptography.Pkcs/ref/netstandard1.3/System.Security.Cryptography.Pkcs.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Security.Cryptography.Pkcs.dll

f [t] System.Security.Cryptography.CryptographicAttributeObject
+ [m]	Void .ctor(Oid)
+ [m]	Void .ctor(Oid,AsnEncodedDataCollection)
+ [m]	Oid get_Oid()
+ [m]	AsnEncodedDataCollection get_Values()

f [t] System.Security.Cryptography.CryptographicAttributeObjectCollection
+ [m]	Void .ctor()
+ [m]	Void .ctor(CryptographicAttributeObject)
+ [m]	Int32 get_Count()
+ [m]	CryptographicAttributeObject get_Item(Int32)
- [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
- [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Int32 Add(AsnEncodedData)
+ [m]	Int32 Add(CryptographicAttributeObject)
+ [m]	Void CopyTo(CryptographicAttributeObject[],Int32)
+ [m]	CryptographicAttributeObjectEnumerator GetEnumerator()
+ [m]	Void Remove(CryptographicAttributeObject)
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()

f [t] System.Security.Cryptography.CryptographicAttributeObjectEnumerator
- [m]	Void .ctor()
+ [m]	CryptographicAttributeObject get_Current()
+ [m]	Object System.Collections.IEnumerator.get_Current()
+ [m]	Boolean MoveNext()
+ [m]	Void Reset()

f [t] System.Security.Cryptography.Xml.X509IssuerSerial
+ [m]	String get_IssuerName()
+ [m]	Void set_IssuerName(String)
+ [m]	String get_SerialNumber()
+ [m]	Void set_SerialNumber(String)

f [t] System.Security.Cryptography.Pkcs.AlgorithmIdentifier
+ [m]	Void .ctor()
+ [m]	Void .ctor(Oid)
+ [m]	Void .ctor(Oid,Int32)
+ [m]	Int32 get_KeyLength()
+ [m]	Void set_KeyLength(Int32)
+ [m]	Oid get_Oid()
+ [m]	Void set_Oid(Oid)

f [t] System.Security.Cryptography.Pkcs.CmsRecipient
+ [m]	Void .ctor(SubjectIdentifierType,X509Certificate2)
+ [m]	Void .ctor(X509Certificate2)
+ [m]	X509Certificate2 get_Certificate()
+ [m]	SubjectIdentifierType get_RecipientIdentifierType()

f [t] System.Security.Cryptography.Pkcs.CmsRecipientCollection
+ [m]	Void .ctor()
+ [m]	Void .ctor(CmsRecipient)
+ [m]	Void .ctor(SubjectIdentifierType,X509Certificate2Collection)
+ [m]	Int32 get_Count()
+ [m]	CmsRecipient get_Item(Int32)
- [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
- [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Int32 Add(CmsRecipient)
+ [m]	Void CopyTo(Array,Int32)
+ [m]	Void CopyTo(CmsRecipient[],Int32)
+ [m]	CmsRecipientEnumerator GetEnumerator()
+ [m]	Void Remove(CmsRecipient)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()

f [t] System.Security.Cryptography.Pkcs.CmsRecipientEnumerator
- [m]	Void .ctor()
+ [m]	CmsRecipient get_Current()
+ [m]	Object System.Collections.IEnumerator.get_Current()
+ [m]	Boolean MoveNext()
+ [m]	Void Reset()

f [t] System.Security.Cryptography.Pkcs.ContentInfo
+ [m]	Void .ctor(Byte[])
+ [m]	Void .ctor(Oid,Byte[])
+ [m]	Byte[] get_Content()
+ [m]	Oid get_ContentType()
+ [m]	Oid GetContentType(Byte[])

f [t] System.Security.Cryptography.Pkcs.EnvelopedCms
+ [m]	Void .ctor()
+ [m]	Void .ctor(ContentInfo)
+ [m]	Void .ctor(ContentInfo,AlgorithmIdentifier)
+ [m]	X509Certificate2Collection get_Certificates()
+ [m]	AlgorithmIdentifier get_ContentEncryptionAlgorithm()
+ [m]	ContentInfo get_ContentInfo()
+ [m]	RecipientInfoCollection get_RecipientInfos()
+ [m]	CryptographicAttributeObjectCollection get_UnprotectedAttributes()
+ [m]	Int32 get_Version()
+ [m]	Void Decode(Byte[])
+ [m]	Void Decrypt()
+ [m]	Void Decrypt(RecipientInfo)
+ [m]	Void Decrypt(RecipientInfo,X509Certificate2Collection)
+ [m]	Void Decrypt(X509Certificate2Collection)
+ [m]	Byte[] Encode()
+ [m]	Void Encrypt(CmsRecipient)
+ [m]	Void Encrypt(CmsRecipientCollection)

f [t] System.Security.Cryptography.Pkcs.KeyAgreeRecipientInfo
+ [m]	Void .ctor()
+ [m]	DateTime get_Date()
+ [m]	Byte[] get_EncryptedKey()
+ [m]	AlgorithmIdentifier get_KeyEncryptionAlgorithm()
+ [m]	SubjectIdentifierOrKey get_OriginatorIdentifierOrKey()
+ [m]	CryptographicAttributeObject get_OtherKeyAttribute()
+ [m]	SubjectIdentifier get_RecipientIdentifier()
+ [m]	Int32 get_Version()

f [t] System.Security.Cryptography.Pkcs.KeyTransRecipientInfo
- [m]	Void .ctor()
+ [m]	Byte[] get_EncryptedKey()
+ [m]	AlgorithmIdentifier get_KeyEncryptionAlgorithm()
+ [m]	SubjectIdentifier get_RecipientIdentifier()
+ [m]	Int32 get_Version()

f [t] System.Security.Cryptography.Pkcs.Pkcs9AttributeObject
+ [m]	Void .ctor()
+ [m]	Void .ctor(AsnEncodedData)
+ [m]	Void .ctor(Oid,Byte[])
+ [m]	Void .ctor(String,Byte[])
+ [m]	Oid get_Oid()
+ [m]	Void CopyFrom(AsnEncodedData)

f [t] System.Security.Cryptography.Pkcs.Pkcs9ContentType
+ [m]	Void .ctor()
+ [m]	Oid get_ContentType()
+ [m]	Void CopyFrom(AsnEncodedData)

f [t] System.Security.Cryptography.Pkcs.Pkcs9DocumentDescription
+ [m]	Void .ctor()
+ [m]	Void .ctor(Byte[])
+ [m]	Void .ctor(String)
+ [m]	String get_DocumentDescription()
+ [m]	Void CopyFrom(AsnEncodedData)

f [t] System.Security.Cryptography.Pkcs.Pkcs9DocumentName
+ [m]	Void .ctor()
+ [m]	Void .ctor(Byte[])
+ [m]	Void .ctor(String)
+ [m]	String get_DocumentName()
+ [m]	Void CopyFrom(AsnEncodedData)

f [t] System.Security.Cryptography.Pkcs.Pkcs9MessageDigest
+ [m]	Void .ctor()
+ [m]	Byte[] get_MessageDigest()
+ [m]	Void CopyFrom(AsnEncodedData)

f [t] System.Security.Cryptography.Pkcs.Pkcs9SigningTime
+ [m]	Void .ctor()
+ [m]	Void .ctor(Byte[])
+ [m]	Void .ctor(DateTime)
+ [m]	DateTime get_SigningTime()
+ [m]	Void CopyFrom(AsnEncodedData)

f [t] System.Security.Cryptography.Pkcs.PublicKeyInfo
- [m]	Void .ctor()
+ [m]	AlgorithmIdentifier get_Algorithm()
+ [m]	Byte[] get_KeyValue()

f [t] System.Security.Cryptography.Pkcs.RecipientInfo
- [m]	Void .ctor()
+ [m]	Byte[] get_EncryptedKey()
+ [m]	AlgorithmIdentifier get_KeyEncryptionAlgorithm()
+ [m]	SubjectIdentifier get_RecipientIdentifier()
+ [m]	RecipientInfoType get_Type()
+ [m]	Int32 get_Version()

f [t] System.Security.Cryptography.Pkcs.RecipientInfoCollection
+ [m]	Void .ctor()
+ [m]	Int32 get_Count()
+ [m]	RecipientInfo get_Item(Int32)
- [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
- [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Void CopyTo(Array,Int32)
+ [m]	Void CopyTo(RecipientInfo[],Int32)
+ [m]	RecipientInfoEnumerator GetEnumerator()
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()

f [t] System.Security.Cryptography.Pkcs.RecipientInfoEnumerator
- [m]	Void .ctor()
+ [m]	RecipientInfo get_Current()
+ [m]	Object System.Collections.IEnumerator.get_Current()
+ [m]	Boolean MoveNext()
+ [m]	Void Reset()

f [t] System.Security.Cryptography.Pkcs.RecipientInfoType

f [t] System.Security.Cryptography.Pkcs.SubjectIdentifier
- [m]	Void .ctor()
+ [m]	SubjectIdentifierType get_Type()
+ [m]	Object get_Value()

f [t] System.Security.Cryptography.Pkcs.SubjectIdentifierOrKey
- [m]	Void .ctor()
+ [m]	SubjectIdentifierOrKeyType get_Type()
+ [m]	Object get_Value()

f [t] System.Security.Cryptography.Pkcs.SubjectIdentifierOrKeyType

f [t] System.Security.Cryptography.Pkcs.SubjectIdentifierType

---------------------------------------
+ [a] System.Security.Cryptography.Primitives.dll
ref: ./netstandard/packages/System.Security.Cryptography.Primitives/ref/netstandard1.3/System.Security.Cryptography.Primitives.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Security.Cryptography.Primitives.dll

f [t] System.Security.Cryptography.AsymmetricAlgorithm
+ [m]	Void .ctor()
+ [m]	Int32 get_KeySize()
+ [m]	Void set_KeySize(Int32)
+ [m]	KeySizes[] get_LegalKeySizes()
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)

f [t] System.Security.Cryptography.CipherMode

f [t] System.Security.Cryptography.CryptographicException
+ [m]	Void .ctor()
+ [m]	Void .ctor(Int32)
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	Void .ctor(String,String)

f [t] System.Security.Cryptography.CryptoStream
+ [m]	Void .ctor(Stream,ICryptoTransform,CryptoStreamMode)
+ [m]	Boolean get_CanRead()
+ [m]	Boolean get_CanSeek()
+ [m]	Boolean get_CanWrite()
+ [m]	Boolean get_HasFlushedFinalBlock()
+ [m]	Int64 get_Length()
+ [m]	Int64 get_Position()
+ [m]	Void set_Position(Int64)
+ [m]	Void Dispose(Boolean)
+ [m]	Void Flush()
+ [m]	Task FlushAsync(CancellationToken)
+ [m]	Void FlushFinalBlock()
+ [m]	Int32 Read(Byte[],Int32,Int32)
+ [m]	Task`1 ReadAsync(Byte[],Int32,Int32,CancellationToken)
+ [m]	Int64 Seek(Int64,SeekOrigin)
+ [m]	Void SetLength(Int64)
+ [m]	Void Write(Byte[],Int32,Int32)
+ [m]	Task WriteAsync(Byte[],Int32,Int32,CancellationToken)

f [t] System.Security.Cryptography.CryptoStreamMode

f [t] System.Security.Cryptography.HashAlgorithm
+ [m]	Void .ctor()
+ [m]	Int32 get_HashSize()
+ [m]	Byte[] ComputeHash(Byte[])
+ [m]	Byte[] ComputeHash(Byte[],Int32,Int32)
+ [m]	Byte[] ComputeHash(Stream)
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Void HashCore(Byte[],Int32,Int32)
+ [m]	Byte[] HashFinal()
+ [m]	Void Initialize()

f [t] System.Security.Cryptography.HashAlgorithmName
+ [m]	Void .ctor(String)
+ [m]	HashAlgorithmName get_MD5()
+ [m]	String get_Name()
+ [m]	HashAlgorithmName get_SHA1()
+ [m]	HashAlgorithmName get_SHA256()
+ [m]	HashAlgorithmName get_SHA384()
+ [m]	HashAlgorithmName get_SHA512()
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(HashAlgorithmName)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(HashAlgorithmName,HashAlgorithmName)
+ [m]	Boolean op_Inequality(HashAlgorithmName,HashAlgorithmName)
+ [m]	String ToString()

f [t] System.Security.Cryptography.HMAC
+ [m]	Void .ctor()
+ [m]	String get_HashName()
+ [m]	Void set_HashName(String)
+ [m]	Byte[] get_Key()
+ [m]	Void set_Key(Byte[])
+ [m]	Void Dispose(Boolean)
+ [m]	Void HashCore(Byte[],Int32,Int32)
+ [m]	Byte[] HashFinal()
+ [m]	Void Initialize()

f [t] System.Security.Cryptography.ICryptoTransform
+ [m]	Boolean get_CanReuseTransform()
+ [m]	Boolean get_CanTransformMultipleBlocks()
+ [m]	Int32 get_InputBlockSize()
+ [m]	Int32 get_OutputBlockSize()
+ [m]	Int32 TransformBlock(Byte[],Int32,Int32,Byte[],Int32)
+ [m]	Byte[] TransformFinalBlock(Byte[],Int32,Int32)

f [t] System.Security.Cryptography.KeyedHashAlgorithm
+ [m]	Void .ctor()
+ [m]	Byte[] get_Key()
+ [m]	Void set_Key(Byte[])
+ [m]	Void Dispose(Boolean)

f [t] System.Security.Cryptography.KeySizes
+ [m]	Void .ctor(Int32,Int32,Int32)
+ [m]	Int32 get_MaxSize()
+ [m]	Int32 get_MinSize()
+ [m]	Int32 get_SkipSize()

f [t] System.Security.Cryptography.PaddingMode

f [t] System.Security.Cryptography.SymmetricAlgorithm
+ [m]	Void .ctor()
+ [m]	Int32 get_BlockSize()
+ [m]	Void set_BlockSize(Int32)
+ [m]	Byte[] get_IV()
+ [m]	Void set_IV(Byte[])
+ [m]	Byte[] get_Key()
+ [m]	Void set_Key(Byte[])
+ [m]	Int32 get_KeySize()
+ [m]	Void set_KeySize(Int32)
+ [m]	KeySizes[] get_LegalBlockSizes()
+ [m]	KeySizes[] get_LegalKeySizes()
+ [m]	CipherMode get_Mode()
+ [m]	Void set_Mode(CipherMode)
+ [m]	PaddingMode get_Padding()
+ [m]	Void set_Padding(PaddingMode)
+ [m]	ICryptoTransform CreateDecryptor()
+ [m]	ICryptoTransform CreateDecryptor(Byte[],Byte[])
+ [m]	ICryptoTransform CreateEncryptor()
+ [m]	ICryptoTransform CreateEncryptor(Byte[],Byte[])
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Void GenerateIV()
+ [m]	Void GenerateKey()

---------------------------------------
+ [a] System.Security.Cryptography.ProtectedData.dll
ref: ./netstandard/packages/System.Security.Cryptography.ProtectedData/ref/netstandard1.3/System.Security.Cryptography.ProtectedData.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Security.Cryptography.ProtectedData.dll

f [t] System.Security.Cryptography.DataProtectionScope

f [t] System.Security.Cryptography.ProtectedData
+ [m]	Byte[] Protect(Byte[],Byte[],DataProtectionScope)
+ [m]	Byte[] Unprotect(Byte[],Byte[],DataProtectionScope)

---------------------------------------
+ [a] System.Security.Cryptography.X509Certificates.dll
ref: ./netstandard/packages/System.Security.Cryptography.X509Certificates/ref/netstandard1.4/System.Security.Cryptography.X509Certificates.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Security.Cryptography.X509Certificates.dll

f [t] System.Security.Cryptography.X509Certificates.ECDsaCertificateExtensions
! [m]	ECDsa GetECDsaPrivateKey(X509Certificate2)
! [m]	ECDsa GetECDsaPublicKey(X509Certificate2)

f [t] System.Security.Cryptography.X509Certificates.OpenFlags

f [t] System.Security.Cryptography.X509Certificates.PublicKey
+ [m]	Void .ctor(Oid,AsnEncodedData,AsnEncodedData)
+ [m]	AsnEncodedData get_EncodedKeyValue()
+ [m]	AsnEncodedData get_EncodedParameters()
+ [m]	Oid get_Oid()

f [t] System.Security.Cryptography.X509Certificates.RSACertificateExtensions
! [m]	RSA GetRSAPrivateKey(X509Certificate2)
! [m]	RSA GetRSAPublicKey(X509Certificate2)

f [t] System.Security.Cryptography.X509Certificates.StoreLocation

f [t] System.Security.Cryptography.X509Certificates.StoreName

f [t] System.Security.Cryptography.X509Certificates.X500DistinguishedName
+ [m]	Void .ctor(Byte[])
+ [m]	Void .ctor(AsnEncodedData)
+ [m]	Void .ctor(X500DistinguishedName)
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,X500DistinguishedNameFlags)
+ [m]	String get_Name()
+ [m]	String Decode(X500DistinguishedNameFlags)
+ [m]	String Format(Boolean)

f [t] System.Security.Cryptography.X509Certificates.X500DistinguishedNameFlags

f [t] System.Security.Cryptography.X509Certificates.X509BasicConstraintsExtension
+ [m]	Void .ctor()
+ [m]	Void .ctor(Boolean,Boolean,Int32,Boolean)
+ [m]	Void .ctor(AsnEncodedData,Boolean)
+ [m]	Boolean get_CertificateAuthority()
+ [m]	Boolean get_HasPathLengthConstraint()
+ [m]	Int32 get_PathLengthConstraint()
+ [m]	Void CopyFrom(AsnEncodedData)

f [t] System.Security.Cryptography.X509Certificates.X509Certificate
+ [m]	Void .ctor()
+ [m]	Void .ctor(Byte[])
+ [m]	Void .ctor(Byte[],String)
+ [m]	Void .ctor(Byte[],String,X509KeyStorageFlags)
+ [m]	Void .ctor(IntPtr)
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,String)
+ [m]	Void .ctor(String,String,X509KeyStorageFlags)
+ [m]	IntPtr get_Handle()
+ [m]	String get_Issuer()
+ [m]	String get_Subject()
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(X509Certificate)
+ [m]	Byte[] Export(X509ContentType)
+ [m]	Byte[] Export(X509ContentType,String)
+ [m]	Byte[] GetCertHash()
+ [m]	String GetFormat()
+ [m]	Int32 GetHashCode()
+ [m]	String GetKeyAlgorithm()
+ [m]	Byte[] GetKeyAlgorithmParameters()
+ [m]	String GetKeyAlgorithmParametersString()
+ [m]	Byte[] GetPublicKey()
+ [m]	Byte[] GetSerialNumber()
+ [m]	String ToString()
+ [m]	String ToString(Boolean)

f [t] System.Security.Cryptography.X509Certificates.X509Certificate2
+ [m]	Void .ctor()
+ [m]	Void .ctor(Byte[])
+ [m]	Void .ctor(Byte[],String)
+ [m]	Void .ctor(Byte[],String,X509KeyStorageFlags)
+ [m]	Void .ctor(IntPtr)
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,String)
+ [m]	Void .ctor(String,String,X509KeyStorageFlags)
+ [m]	Boolean get_Archived()
+ [m]	Void set_Archived(Boolean)
+ [m]	X509ExtensionCollection get_Extensions()
+ [m]	String get_FriendlyName()
+ [m]	Void set_FriendlyName(String)
+ [m]	Boolean get_HasPrivateKey()
+ [m]	X500DistinguishedName get_IssuerName()
+ [m]	DateTime get_NotAfter()
+ [m]	DateTime get_NotBefore()
+ [m]	PublicKey get_PublicKey()
+ [m]	Byte[] get_RawData()
+ [m]	String get_SerialNumber()
+ [m]	Oid get_SignatureAlgorithm()
+ [m]	X500DistinguishedName get_SubjectName()
+ [m]	String get_Thumbprint()
+ [m]	Int32 get_Version()
+ [m]	X509ContentType GetCertContentType(Byte[])
+ [m]	X509ContentType GetCertContentType(String)
+ [m]	String GetNameInfo(X509NameType,Boolean)
+ [m]	String ToString()
+ [m]	String ToString(Boolean)

f [t] System.Security.Cryptography.X509Certificates.X509Certificate2Collection
+ [m]	Void .ctor()
+ [m]	Void .ctor(X509Certificate2)
+ [m]	Void .ctor(X509Certificate2[])
+ [m]	Void .ctor(X509Certificate2Collection)
+ [m]	X509Certificate2 get_Item(Int32)
+ [m]	Void set_Item(Int32,X509Certificate2)
+ [m]	Int32 Add(X509Certificate2)
+ [m]	Void AddRange(X509Certificate2[])
+ [m]	Void AddRange(X509Certificate2Collection)
+ [m]	Boolean Contains(X509Certificate2)
+ [m]	Byte[] Export(X509ContentType)
+ [m]	Byte[] Export(X509ContentType,String)
+ [m]	X509Certificate2Collection Find(X509FindType,Object,Boolean)
+ [m]	X509Certificate2Enumerator GetEnumerator()
+ [m]	Void Import(Byte[])
+ [m]	Void Import(Byte[],String,X509KeyStorageFlags)
+ [m]	Void Import(String)
+ [m]	Void Import(String,String,X509KeyStorageFlags)
+ [m]	Void Insert(Int32,X509Certificate2)
+ [m]	Void Remove(X509Certificate2)
+ [m]	Void RemoveRange(X509Certificate2[])
+ [m]	Void RemoveRange(X509Certificate2Collection)

f [t] System.Security.Cryptography.X509Certificates.X509Certificate2Enumerator
- [m]	Void .ctor()
+ [m]	X509Certificate2 get_Current()
+ [m]	Object System.Collections.IEnumerator.get_Current()
+ [m]	Boolean MoveNext()
+ [m]	Void Reset()
+ [m]	Boolean System.Collections.IEnumerator.MoveNext()
+ [m]	Void System.Collections.IEnumerator.Reset()

f [t] System.Security.Cryptography.X509Certificates.X509CertificateCollection
+ [m]	Void .ctor()
+ [m]	Void .ctor(X509Certificate[])
+ [m]	Void .ctor(X509CertificateCollection)
+ [m]	X509Certificate get_Item(Int32)
+ [m]	Void set_Item(Int32,X509Certificate)
+ [m]	Int32 Add(X509Certificate)
+ [m]	Void AddRange(X509Certificate[])
+ [m]	Void AddRange(X509CertificateCollection)
+ [m]	Boolean Contains(X509Certificate)
+ [m]	Void CopyTo(X509Certificate[],Int32)
+ [m]	X509CertificateEnumerator GetEnumerator()
+ [m]	Int32 GetHashCode()
+ [m]	Int32 IndexOf(X509Certificate)
+ [m]	Void Insert(Int32,X509Certificate)
+ [m]	Void Remove(X509Certificate)
- [m]	Int32 get_Count()
- [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
- [m]	Object System.Collections.ICollection.get_SyncRoot()
- [m]	Boolean System.Collections.IList.get_IsFixedSize()
- [m]	Boolean System.Collections.IList.get_IsReadOnly()
- [m]	Object System.Collections.IList.get_Item(Int32)
- [m]	Void System.Collections.IList.set_Item(Int32,Object)
- [m]	Void Clear()
- [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
- [m]	Void RemoveAt(Int32)
- [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
- [m]	Int32 System.Collections.IList.Add(Object)
- [m]	Boolean System.Collections.IList.Contains(Object)
- [m]	Int32 System.Collections.IList.IndexOf(Object)
- [m]	Void System.Collections.IList.Insert(Int32,Object)
- [m]	Void System.Collections.IList.Remove(Object)

f [t] System.Security.Cryptography.X509Certificates.X509Chain
+ [m]	Void .ctor()
+ [m]	X509ChainElementCollection get_ChainElements()
+ [m]	X509ChainPolicy get_ChainPolicy()
+ [m]	Void set_ChainPolicy(X509ChainPolicy)
+ [m]	X509ChainStatus[] get_ChainStatus()
- [m]	SafeX509ChainHandle get_SafeHandle()
+ [m]	Boolean Build(X509Certificate2)
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)

f [t] System.Security.Cryptography.X509Certificates.X509ChainElement
- [m]	Void .ctor()
+ [m]	X509Certificate2 get_Certificate()
+ [m]	X509ChainStatus[] get_ChainElementStatus()
+ [m]	String get_Information()

f [t] System.Security.Cryptography.X509Certificates.X509ChainElementCollection
+ [m]	Void .ctor()
+ [m]	Int32 get_Count()
- [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	X509ChainElement get_Item(Int32)
- [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Void CopyTo(X509ChainElement[],Int32)
+ [m]	X509ChainElementEnumerator GetEnumerator()
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()

f [t] System.Security.Cryptography.X509Certificates.X509ChainElementEnumerator
- [m]	Void .ctor()
+ [m]	X509ChainElement get_Current()
+ [m]	Object System.Collections.IEnumerator.get_Current()
+ [m]	Boolean MoveNext()
+ [m]	Void Reset()

f [t] System.Security.Cryptography.X509Certificates.X509ChainPolicy
+ [m]	Void .ctor()
+ [m]	OidCollection get_ApplicationPolicy()
+ [m]	OidCollection get_CertificatePolicy()
+ [m]	X509Certificate2Collection get_ExtraStore()
+ [m]	X509RevocationFlag get_RevocationFlag()
+ [m]	Void set_RevocationFlag(X509RevocationFlag)
+ [m]	X509RevocationMode get_RevocationMode()
+ [m]	Void set_RevocationMode(X509RevocationMode)
+ [m]	TimeSpan get_UrlRetrievalTimeout()
+ [m]	Void set_UrlRetrievalTimeout(TimeSpan)
+ [m]	X509VerificationFlags get_VerificationFlags()
+ [m]	Void set_VerificationFlags(X509VerificationFlags)
+ [m]	DateTime get_VerificationTime()
+ [m]	Void set_VerificationTime(DateTime)
+ [m]	Void Reset()

f [t] System.Security.Cryptography.X509Certificates.X509ChainStatus
+ [m]	X509ChainStatusFlags get_Status()
+ [m]	Void set_Status(X509ChainStatusFlags)
+ [m]	String get_StatusInformation()
+ [m]	Void set_StatusInformation(String)

f [t] System.Security.Cryptography.X509Certificates.X509ChainStatusFlags

f [t] System.Security.Cryptography.X509Certificates.X509ContentType

f [t] System.Security.Cryptography.X509Certificates.X509EnhancedKeyUsageExtension
+ [m]	Void .ctor()
+ [m]	Void .ctor(AsnEncodedData,Boolean)
+ [m]	Void .ctor(OidCollection,Boolean)
+ [m]	OidCollection get_EnhancedKeyUsages()
+ [m]	Void CopyFrom(AsnEncodedData)

f [t] System.Security.Cryptography.X509Certificates.X509Extension
+ [m]	Void .ctor()
+ [m]	Void .ctor(AsnEncodedData,Boolean)
+ [m]	Void .ctor(Oid,Byte[],Boolean)
+ [m]	Void .ctor(String,Byte[],Boolean)
+ [m]	Boolean get_Critical()
+ [m]	Void set_Critical(Boolean)
+ [m]	Void CopyFrom(AsnEncodedData)

f [t] System.Security.Cryptography.X509Certificates.X509ExtensionCollection
+ [m]	Void .ctor()
+ [m]	Int32 get_Count()
- [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	X509Extension get_Item(Int32)
+ [m]	X509Extension get_Item(String)
- [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	Int32 Add(X509Extension)
+ [m]	Void CopyTo(X509Extension[],Int32)
+ [m]	X509ExtensionEnumerator GetEnumerator()
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()

f [t] System.Security.Cryptography.X509Certificates.X509ExtensionEnumerator
- [m]	Void .ctor()
+ [m]	X509Extension get_Current()
+ [m]	Object System.Collections.IEnumerator.get_Current()
+ [m]	Boolean MoveNext()
+ [m]	Void Reset()

f [t] System.Security.Cryptography.X509Certificates.X509FindType

f [t] System.Security.Cryptography.X509Certificates.X509KeyStorageFlags

f [t] System.Security.Cryptography.X509Certificates.X509KeyUsageExtension
+ [m]	Void .ctor()
+ [m]	Void .ctor(AsnEncodedData,Boolean)
+ [m]	Void .ctor(X509KeyUsageFlags,Boolean)
+ [m]	X509KeyUsageFlags get_KeyUsages()
+ [m]	Void CopyFrom(AsnEncodedData)

f [t] System.Security.Cryptography.X509Certificates.X509KeyUsageFlags

f [t] System.Security.Cryptography.X509Certificates.X509NameType

f [t] System.Security.Cryptography.X509Certificates.X509RevocationFlag

f [t] System.Security.Cryptography.X509Certificates.X509RevocationMode

f [t] System.Security.Cryptography.X509Certificates.X509Store
+ [m]	Void .ctor()
+ [m]	Void .ctor(StoreName,StoreLocation)
+ [m]	Void .ctor(String,StoreLocation)
+ [m]	X509Certificate2Collection get_Certificates()
+ [m]	StoreLocation get_Location()
+ [m]	String get_Name()
+ [m]	Void Add(X509Certificate2)
- [m]	Void Dispose()
+ [m]	Void Open(OpenFlags)
+ [m]	Void Remove(X509Certificate2)

f [t] System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension
+ [m]	Void .ctor()
+ [m]	Void .ctor(Byte[],Boolean)
+ [m]	Void .ctor(AsnEncodedData,Boolean)
+ [m]	Void .ctor(PublicKey,Boolean)
+ [m]	Void .ctor(PublicKey,X509SubjectKeyIdentifierHashAlgorithm,Boolean)
+ [m]	Void .ctor(String,Boolean)
+ [m]	String get_SubjectKeyIdentifier()
+ [m]	Void CopyFrom(AsnEncodedData)

f [t] System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierHashAlgorithm

f [t] System.Security.Cryptography.X509Certificates.X509VerificationFlags

f [t] Microsoft.Win32.SafeHandles.SafeX509ChainHandle
+ [m]	Void .ctor()
! [m]	Boolean ReleaseHandle()
! [m]	Boolean get_IsInvalid()

---------------------------------------
+ [a] System.Security.Principal.dll
ref: ./netstandard/packages/System.Security.Principal/ref/netstandard1.0/System.Security.Principal.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Security.Principal.dll

f [t] System.Security.Principal.IIdentity
+ [m]	String get_AuthenticationType()
+ [m]	Boolean get_IsAuthenticated()
+ [m]	String get_Name()

f [t] System.Security.Principal.IPrincipal
+ [m]	IIdentity get_Identity()
+ [m]	Boolean IsInRole(String)

f [t] System.Security.Principal.TokenImpersonationLevel

---------------------------------------
+ [a] System.Security.Principal.Windows.dll
ref: ./netstandard/packages/System.Security.Principal.Windows/ref/netstandard1.3/System.Security.Principal.Windows.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Security.Principal.Windows.dll

f [t] System.Security.Principal.IdentityNotMappedException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	IdentityReferenceCollection get_UnmappedIdentities()

f [t] System.Security.Principal.IdentityReference
+ [m]	Void .ctor()
+ [m]	String get_Value()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean IsValidTargetType(Type)
+ [m]	Boolean op_Equality(IdentityReference,IdentityReference)
+ [m]	Boolean op_Inequality(IdentityReference,IdentityReference)
+ [m]	String ToString()
+ [m]	IdentityReference Translate(Type)

f [t] System.Security.Principal.IdentityReferenceCollection
+ [m]	Void .ctor()
+ [m]	Void .ctor(Int32)
+ [m]	Int32 get_Count()
+ [m]	IdentityReference get_Item(Int32)
+ [m]	Void set_Item(Int32,IdentityReference)
- [m]	Boolean System.Collections.Generic.ICollection<System.Security.Principal.IdentityReference>.get_IsReadOnly()
+ [m]	Void Add(IdentityReference)
+ [m]	Void Clear()
+ [m]	Boolean Contains(IdentityReference)
! [m]	Void CopyTo(IdentityReference[],Int32)
! [m]	IEnumerator`1 GetEnumerator()
+ [m]	Boolean Remove(IdentityReference)
! [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
! [m]	IdentityReferenceCollection Translate(Type)
! [m]	IdentityReferenceCollection Translate(Type,Boolean)

f [t] System.Security.Principal.NTAccount
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,String)
+ [m]	String get_Value()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean IsValidTargetType(Type)
+ [m]	Boolean op_Equality(NTAccount,NTAccount)
+ [m]	Boolean op_Inequality(NTAccount,NTAccount)
+ [m]	String ToString()
+ [m]	IdentityReference Translate(Type)

f [t] System.Security.Principal.SecurityIdentifier
+ [m]	Void .ctor(Byte[],Int32)
+ [m]	Void .ctor(IntPtr)
+ [m]	Void .ctor(WellKnownSidType,SecurityIdentifier)
+ [m]	Void .ctor(String)
+ [m]	SecurityIdentifier get_AccountDomainSid()
+ [m]	Int32 get_BinaryLength()
+ [m]	String get_Value()
+ [m]	Int32 CompareTo(SecurityIdentifier)
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(SecurityIdentifier)
+ [m]	Void GetBinaryForm(Byte[],Int32)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean IsAccountSid()
+ [m]	Boolean IsEqualDomainSid(SecurityIdentifier)
+ [m]	Boolean IsValidTargetType(Type)
+ [m]	Boolean IsWellKnown(WellKnownSidType)
+ [m]	Boolean op_Equality(SecurityIdentifier,SecurityIdentifier)
+ [m]	Boolean op_Inequality(SecurityIdentifier,SecurityIdentifier)
+ [m]	String ToString()
+ [m]	IdentityReference Translate(Type)

f [t] System.Security.Principal.TokenAccessLevels

f [t] System.Security.Principal.WellKnownSidType

f [t] System.Security.Principal.WindowsBuiltInRole

f [t] System.Security.Principal.WindowsIdentity
+ [m]	Void .ctor(IntPtr)
+ [m]	Void .ctor(IntPtr,String)
+ [m]	Void .ctor(String)
! [m]	SafeAccessTokenHandle get_AccessToken()
+ [m]	String get_AuthenticationType()
- [m]	IEnumerable`1 get_Claims()
! [m]	IdentityReferenceCollection get_Groups()
! [m]	TokenImpersonationLevel get_ImpersonationLevel()
+ [m]	Boolean get_IsAnonymous()
+ [m]	Boolean get_IsAuthenticated()
+ [m]	Boolean get_IsGuest()
+ [m]	Boolean get_IsSystem()
+ [m]	String get_Name()
! [m]	SecurityIdentifier get_Owner()
! [m]	SecurityIdentifier get_User()
- [m]	ClaimsIdentity Clone()
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	WindowsIdentity GetAnonymous()
+ [m]	WindowsIdentity GetCurrent()
! [m]	WindowsIdentity GetCurrent(Boolean)
! [m]	WindowsIdentity GetCurrent(TokenAccessLevels)
- [m]	Void RunImpersonated(SafeAccessTokenHandle,Action)
- [m]	T RunImpersonated(SafeAccessTokenHandle,Func`1)

f [t] System.Security.Principal.WindowsPrincipal
+ [m]	Void .ctor(WindowsIdentity)
+ [m]	IIdentity get_Identity()
+ [m]	Boolean IsInRole(Int32)
! [m]	Boolean IsInRole(SecurityIdentifier)
+ [m]	Boolean IsInRole(WindowsBuiltInRole)
+ [m]	Boolean IsInRole(String)

f [t] Microsoft.Win32.SafeHandles.SafeAccessTokenHandle
- [m]	Void .ctor(IntPtr)
- [m]	SafeAccessTokenHandle get_InvalidHandle()
+ [m]	Boolean get_IsInvalid()
+ [m]	Boolean ReleaseHandle()

---------------------------------------
+ [a] System.Security.SecureString.dll
ref: ./netstandard/packages/System.Security.SecureString/ref/netstandard1.3/System.Security.SecureString.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Security.SecureString.dll

f [t] System.Security.SecureString
+ [m]	Void .ctor()
+ [m]	Void .ctor(Char*,Int32)
+ [m]	Int32 get_Length()
+ [m]	Void AppendChar(Char)
+ [m]	Void Clear()
+ [m]	SecureString Copy()
+ [m]	Void Dispose()
+ [m]	Void InsertAt(Int32,Char)
+ [m]	Boolean IsReadOnly()
+ [m]	Void MakeReadOnly()
+ [m]	Void RemoveAt(Int32)
+ [m]	Void SetAt(Int32,Char)

+ [t] System.Security.SecureStringMarshal
! [m]	IntPtr SecureStringToCoTaskMemAnsi(SecureString)
! [m]	IntPtr SecureStringToCoTaskMemUnicode(SecureString)
! [m]	IntPtr SecureStringToGlobalAllocAnsi(SecureString)
! [m]	IntPtr SecureStringToGlobalAllocUnicode(SecureString)

---------------------------------------
+ [a] System.ServiceModel.Duplex.dll
ref: ./netstandard/packages/System.ServiceModel.Duplex/ref/netstandard1.1/System.ServiceModel.Duplex.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.ServiceModel.Duplex.dll

f [t] System.ServiceModel.CallbackBehaviorAttribute
+ [m]	Void .ctor()
+ [m]	Boolean get_AutomaticSessionShutdown()
+ [m]	Void set_AutomaticSessionShutdown(Boolean)
+ [m]	Boolean get_UseSynchronizationContext()
+ [m]	Void set_UseSynchronizationContext(Boolean)
+ [m]	Void System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(ServiceEndpoint,BindingParameterCollection)
+ [m]	Void System.ServiceModel.Description.IEndpointBehavior.ApplyClientBehavior(ServiceEndpoint,ClientRuntime)
+ [m]	Void System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(ServiceEndpoint,EndpointDispatcher)
! [m]	Void System.ServiceModel.Description.IEndpointBehavior.Validate(ServiceEndpoint)

f [t] System.ServiceModel.DuplexChannelFactory`1
+ [m]	Void .ctor(InstanceContext,Binding)
+ [m]	Void .ctor(InstanceContext,Binding,EndpointAddress)
+ [m]	Void .ctor(InstanceContext,Binding,String)
+ [m]	Void .ctor(InstanceContext,String)
+ [m]	Void .ctor(InstanceContext,String,EndpointAddress)
+ [m]	TChannel CreateChannel(EndpointAddress,Uri)
+ [m]	TChannel CreateChannel(InstanceContext)
+ [m]	TChannel CreateChannel(InstanceContext,EndpointAddress)
+ [m]	TChannel CreateChannel(InstanceContext,EndpointAddress,Uri)

f [t] System.ServiceModel.DuplexClientBase`1
+ [m]	Void .ctor(InstanceContext)
+ [m]	Void .ctor(InstanceContext,Binding,EndpointAddress)
+ [m]	Void .ctor(InstanceContext,String)
+ [m]	Void .ctor(InstanceContext,String,EndpointAddress)
+ [m]	Void .ctor(InstanceContext,String,String)

f [t] System.ServiceModel.InstanceContext
+ [m]	Void .ctor(Object)
- [m]	TimeSpan get_DefaultCloseTimeout()
- [m]	TimeSpan get_DefaultOpenTimeout()
- [m]	SynchronizationContext get_SynchronizationContext()
- [m]	Void set_SynchronizationContext(SynchronizationContext)
- [m]	IExtensionCollection`1 System.ServiceModel.IExtensibleObject<System.ServiceModel.InstanceContext>.get_Extensions()
- [m]	Object GetServiceInstance(Message)
- [m]	Void OnAbort()
- [m]	IAsyncResult OnBeginClose(TimeSpan,AsyncCallback,Object)
- [m]	IAsyncResult OnBeginOpen(TimeSpan,AsyncCallback,Object)
- [m]	Void OnClose(TimeSpan)
- [m]	Void OnClosed()
- [m]	Void OnEndClose(IAsyncResult)
- [m]	Void OnEndOpen(IAsyncResult)
- [m]	Void OnFaulted()
- [m]	Void OnOpen(TimeSpan)
- [m]	Void OnOpened()
- [m]	Void OnOpening()

---------------------------------------
+ [a] System.ServiceModel.Http.dll
ref: ./netstandard/packages/System.ServiceModel.Http/ref/netstandard1.3/System.ServiceModel.Http.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.ServiceModel.Http.dll

f [t] System.ServiceModel.BasicHttpBinding
+ [m]	Void .ctor()
+ [m]	Void .ctor(BasicHttpSecurityMode)
+ [m]	BasicHttpSecurity get_Security()
+ [m]	Void set_Security(BasicHttpSecurity)
- [m]	IChannelFactory`1 BuildChannelFactory(BindingParameterCollection)
+ [m]	BindingElementCollection CreateBindingElements()

f [t] System.ServiceModel.BasicHttpMessageCredentialType

f [t] System.ServiceModel.BasicHttpSecurity
+ [m]	Void .ctor()
+ [m]	BasicHttpSecurityMode get_Mode()
+ [m]	Void set_Mode(BasicHttpSecurityMode)
+ [m]	HttpTransportSecurity get_Transport()
+ [m]	Void set_Transport(HttpTransportSecurity)

f [t] System.ServiceModel.BasicHttpSecurityMode

f [t] System.ServiceModel.BasicHttpsBinding
+ [m]	Void .ctor()
+ [m]	Void .ctor(BasicHttpsSecurityMode)
+ [m]	BasicHttpsSecurity get_Security()
+ [m]	Void set_Security(BasicHttpsSecurity)
- [m]	IChannelFactory`1 BuildChannelFactory(BindingParameterCollection)
+ [m]	BindingElementCollection CreateBindingElements()

f [t] System.ServiceModel.BasicHttpsSecurity
+ [m]	Void .ctor()
+ [m]	BasicHttpsSecurityMode get_Mode()
+ [m]	Void set_Mode(BasicHttpsSecurityMode)
+ [m]	HttpTransportSecurity get_Transport()
+ [m]	Void set_Transport(HttpTransportSecurity)

f [t] System.ServiceModel.BasicHttpsSecurityMode

f [t] System.ServiceModel.HttpBindingBase
+ [m]	Void .ctor()
+ [m]	Boolean get_AllowCookies()
+ [m]	Void set_AllowCookies(Boolean)
+ [m]	EnvelopeVersion get_EnvelopeVersion()
+ [m]	Int64 get_MaxBufferPoolSize()
+ [m]	Void set_MaxBufferPoolSize(Int64)
+ [m]	Int32 get_MaxBufferSize()
+ [m]	Void set_MaxBufferSize(Int32)
+ [m]	Int64 get_MaxReceivedMessageSize()
+ [m]	Void set_MaxReceivedMessageSize(Int64)
+ [m]	XmlDictionaryReaderQuotas get_ReaderQuotas()
+ [m]	Void set_ReaderQuotas(XmlDictionaryReaderQuotas)
+ [m]	String get_Scheme()
+ [m]	Encoding get_TextEncoding()
+ [m]	Void set_TextEncoding(Encoding)
+ [m]	TransferMode get_TransferMode()
+ [m]	Void set_TransferMode(TransferMode)

f [t] System.ServiceModel.HttpClientCredentialType

f [t] System.ServiceModel.HttpTransportSecurity
+ [m]	Void .ctor()
+ [m]	HttpClientCredentialType get_ClientCredentialType()
+ [m]	Void set_ClientCredentialType(HttpClientCredentialType)

f [t] System.ServiceModel.NetHttpBinding
+ [m]	Void .ctor()
+ [m]	Void .ctor(BasicHttpSecurityMode)
+ [m]	Void .ctor(String)
+ [m]	NetHttpMessageEncoding get_MessageEncoding()
+ [m]	Void set_MessageEncoding(NetHttpMessageEncoding)
+ [m]	BasicHttpSecurity get_Security()
+ [m]	Void set_Security(BasicHttpSecurity)
! [m]	WebSocketTransportSettings get_WebSocketSettings()
- [m]	IChannelFactory`1 BuildChannelFactory(BindingParameterCollection)
! [m]	BindingElementCollection CreateBindingElements()

f [t] System.ServiceModel.NetHttpsBinding
+ [m]	Void .ctor()
+ [m]	Void .ctor(BasicHttpsSecurityMode)
+ [m]	NetHttpMessageEncoding get_MessageEncoding()
+ [m]	Void set_MessageEncoding(NetHttpMessageEncoding)
+ [m]	BasicHttpsSecurity get_Security()
+ [m]	Void set_Security(BasicHttpsSecurity)
! [m]	WebSocketTransportSettings get_WebSocketSettings()
- [m]	IChannelFactory`1 BuildChannelFactory(BindingParameterCollection)
! [m]	BindingElementCollection CreateBindingElements()

f [t] System.ServiceModel.NetHttpMessageEncoding

f [t] System.ServiceModel.Channels.HttpRequestMessageProperty
+ [m]	Void .ctor()
+ [m]	WebHeaderCollection get_Headers()
+ [m]	String get_Method()
+ [m]	Void set_Method(String)
+ [m]	String get_Name()
+ [m]	String get_QueryString()
+ [m]	Void set_QueryString(String)
+ [m]	Boolean get_SuppressEntityBody()
+ [m]	Void set_SuppressEntityBody(Boolean)
+ [m]	IMessageProperty System.ServiceModel.Channels.IMessageProperty.CreateCopy()

f [t] System.ServiceModel.Channels.HttpResponseMessageProperty
+ [m]	Void .ctor()
+ [m]	WebHeaderCollection get_Headers()
+ [m]	String get_Name()
+ [m]	HttpStatusCode get_StatusCode()
+ [m]	Void set_StatusCode(HttpStatusCode)
+ [m]	String get_StatusDescription()
+ [m]	Void set_StatusDescription(String)
+ [m]	IMessageProperty System.ServiceModel.Channels.IMessageProperty.CreateCopy()

f [t] System.ServiceModel.Channels.HttpsTransportBindingElement
+ [m]	Void .ctor()
+ [m]	Void .ctor(HttpsTransportBindingElement)
+ [m]	Boolean get_RequireClientCertificate()
+ [m]	Void set_RequireClientCertificate(Boolean)
+ [m]	String get_Scheme()
+ [m]	IChannelFactory`1 BuildChannelFactory(BindingContext)
+ [m]	BindingElement Clone()
+ [m]	T GetProperty(BindingContext)

f [t] System.ServiceModel.Channels.HttpTransportBindingElement
+ [m]	Void .ctor()
+ [m]	Void .ctor(HttpTransportBindingElement)
+ [m]	Boolean get_AllowCookies()
+ [m]	Void set_AllowCookies(Boolean)
+ [m]	AuthenticationSchemes get_AuthenticationScheme()
+ [m]	Void set_AuthenticationScheme(AuthenticationSchemes)
+ [m]	Int32 get_MaxBufferSize()
+ [m]	Void set_MaxBufferSize(Int32)
+ [m]	String get_Scheme()
+ [m]	TransferMode get_TransferMode()
+ [m]	Void set_TransferMode(TransferMode)
! [m]	WebSocketTransportSettings get_WebSocketSettings()
! [m]	Void set_WebSocketSettings(WebSocketTransportSettings)
+ [m]	IChannelFactory`1 BuildChannelFactory(BindingContext)
+ [m]	Boolean CanBuildChannelFactory(BindingContext)
+ [m]	BindingElement Clone()
+ [m]	T GetProperty(BindingContext)

f [t] System.ServiceModel.Channels.IHttpCookieContainerManager
+ [m]	CookieContainer get_CookieContainer()
+ [m]	Void set_CookieContainer(CookieContainer)

f [t] System.ServiceModel.Channels.WebSocketTransportSettings
+ [m]	Void .ctor()
+ [m]	Boolean get_DisablePayloadMasking()
+ [m]	Void set_DisablePayloadMasking(Boolean)
+ [m]	TimeSpan get_KeepAliveInterval()
+ [m]	Void set_KeepAliveInterval(TimeSpan)
+ [m]	String get_SubProtocol()
+ [m]	Void set_SubProtocol(String)
+ [m]	WebSocketTransportUsage get_TransportUsage()
+ [m]	Void set_TransportUsage(WebSocketTransportUsage)
- [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(WebSocketTransportSettings)
- [m]	Int32 GetHashCode()

f [t] System.ServiceModel.Channels.WebSocketTransportUsage

---------------------------------------
+ [a] System.ServiceModel.NetTcp.dll
ref: ./netstandard/packages/System.ServiceModel.NetTcp/ref/netstandard1.3/System.ServiceModel.NetTcp.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.ServiceModel.NetTcp.dll

f [t] System.ServiceModel.MessageSecurityOverTcp
+ [m]	Void .ctor()
+ [m]	MessageCredentialType get_ClientCredentialType()
+ [m]	Void set_ClientCredentialType(MessageCredentialType)

f [t] System.ServiceModel.NetTcpBinding
+ [m]	Void .ctor()
+ [m]	Void .ctor(SecurityMode)
+ [m]	Void .ctor(String)
+ [m]	EnvelopeVersion get_EnvelopeVersion()
+ [m]	Int64 get_MaxBufferPoolSize()
+ [m]	Void set_MaxBufferPoolSize(Int64)
+ [m]	Int32 get_MaxBufferSize()
+ [m]	Void set_MaxBufferSize(Int32)
+ [m]	Int64 get_MaxReceivedMessageSize()
+ [m]	Void set_MaxReceivedMessageSize(Int64)
+ [m]	XmlDictionaryReaderQuotas get_ReaderQuotas()
+ [m]	Void set_ReaderQuotas(XmlDictionaryReaderQuotas)
+ [m]	String get_Scheme()
+ [m]	NetTcpSecurity get_Security()
+ [m]	Void set_Security(NetTcpSecurity)
+ [m]	TransferMode get_TransferMode()
+ [m]	Void set_TransferMode(TransferMode)
+ [m]	BindingElementCollection CreateBindingElements()

f [t] System.ServiceModel.NetTcpSecurity
+ [m]	Void .ctor()
+ [m]	MessageSecurityOverTcp get_Message()
+ [m]	Void set_Message(MessageSecurityOverTcp)
+ [m]	SecurityMode get_Mode()
+ [m]	Void set_Mode(SecurityMode)
+ [m]	TcpTransportSecurity get_Transport()
+ [m]	Void set_Transport(TcpTransportSecurity)

f [t] System.ServiceModel.TcpClientCredentialType

f [t] System.ServiceModel.TcpTransportSecurity
+ [m]	Void .ctor()
+ [m]	TcpClientCredentialType get_ClientCredentialType()
+ [m]	Void set_ClientCredentialType(TcpClientCredentialType)
- [m]	SslProtocols get_SslProtocols()
- [m]	Void set_SslProtocols(SslProtocols)

f [t] System.ServiceModel.Channels.ConnectionOrientedTransportBindingElement
+ [m]	Void .ctor()
+ [m]	Int32 get_ConnectionBufferSize()
+ [m]	Void set_ConnectionBufferSize(Int32)
+ [m]	Int32 get_MaxBufferSize()
+ [m]	Void set_MaxBufferSize(Int32)
+ [m]	TransferMode get_TransferMode()
+ [m]	Void set_TransferMode(TransferMode)
+ [m]	Boolean CanBuildChannelFactory(BindingContext)
+ [m]	T GetProperty(BindingContext)

f [t] System.ServiceModel.Channels.SslStreamSecurityBindingElement
+ [m]	Void .ctor()
- [m]	SslProtocols get_SslProtocols()
- [m]	Void set_SslProtocols(SslProtocols)
! [m]	IChannelFactory`1 BuildChannelFactory(BindingContext)
! [m]	Boolean CanBuildChannelFactory(BindingContext)
+ [m]	BindingElement Clone()
! [m]	T GetProperty(BindingContext)

f [t] System.ServiceModel.Channels.TcpConnectionPoolSettings
+ [m]	Void .ctor()
+ [m]	String get_GroupName()
+ [m]	Void set_GroupName(String)
+ [m]	TimeSpan get_IdleTimeout()
+ [m]	Void set_IdleTimeout(TimeSpan)
+ [m]	TimeSpan get_LeaseTimeout()
+ [m]	Void set_LeaseTimeout(TimeSpan)
+ [m]	Int32 get_MaxOutboundConnectionsPerEndpoint()
+ [m]	Void set_MaxOutboundConnectionsPerEndpoint(Int32)

f [t] System.ServiceModel.Channels.TcpTransportBindingElement
+ [m]	Void .ctor()
+ [m]	Void .ctor(TcpTransportBindingElement)
+ [m]	TcpConnectionPoolSettings get_ConnectionPoolSettings()
+ [m]	String get_Scheme()
+ [m]	IChannelFactory`1 BuildChannelFactory(BindingContext)
+ [m]	BindingElement Clone()
+ [m]	T GetProperty(BindingContext)

f [t] System.ServiceModel.Channels.WindowsStreamSecurityBindingElement
+ [m]	Void .ctor()
+ [m]	IChannelFactory`1 BuildChannelFactory(BindingContext)
+ [m]	Boolean CanBuildChannelFactory(BindingContext)
+ [m]	BindingElement Clone()
+ [m]	T GetProperty(BindingContext)

---------------------------------------
+ [a] System.ServiceModel.Primitives.dll
ref: ./netstandard/packages/System.ServiceModel.Primitives/ref/netstandard1.3/System.ServiceModel.Primitives.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.ServiceModel.Primitives.dll

f [t] System.ServiceModel.ActionNotSupportedException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.ServiceModel.ChannelFactory
+ [m]	Void .ctor()
+ [m]	ClientCredentials get_Credentials()
+ [m]	TimeSpan get_DefaultCloseTimeout()
+ [m]	TimeSpan get_DefaultOpenTimeout()
+ [m]	ServiceEndpoint get_Endpoint()
+ [m]	Void ApplyConfiguration(String)
+ [m]	ServiceEndpoint CreateDescription()
+ [m]	IChannelFactory CreateFactory()
+ [m]	Void EnsureOpened()
+ [m]	T GetProperty()
+ [m]	Void InitializeEndpoint(Binding,EndpointAddress)
+ [m]	Void InitializeEndpoint(ServiceEndpoint)
+ [m]	Void InitializeEndpoint(String,EndpointAddress)
+ [m]	Void OnAbort()
+ [m]	IAsyncResult OnBeginClose(TimeSpan,AsyncCallback,Object)
+ [m]	IAsyncResult OnBeginOpen(TimeSpan,AsyncCallback,Object)
+ [m]	Void OnClose(TimeSpan)
+ [m]	Void OnEndClose(IAsyncResult)
+ [m]	Void OnEndOpen(IAsyncResult)
+ [m]	Void OnOpen(TimeSpan)
+ [m]	Void OnOpened()
+ [m]	Void OnOpening()
+ [m]	Void System.IDisposable.Dispose()

f [t] System.ServiceModel.ChannelFactory`1
+ [m]	Void .ctor(Binding,EndpointAddress)
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,EndpointAddress)
+ [m]	Void .ctor(Type)
+ [m]	TChannel CreateChannel()
+ [m]	TChannel CreateChannel(EndpointAddress)
+ [m]	TChannel CreateChannel(EndpointAddress,Uri)
+ [m]	ServiceEndpoint CreateDescription()

f [t] System.ServiceModel.ClientBase`1
+ [m]	Void .ctor()
+ [m]	Void .ctor(Binding,EndpointAddress)
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,EndpointAddress)
+ [m]	Void .ctor(String,String)
+ [m]	TChannel get_Channel()
+ [m]	ChannelFactory`1 get_ChannelFactory()
+ [m]	ClientCredentials get_ClientCredentials()
+ [m]	ServiceEndpoint get_Endpoint()
+ [m]	IClientChannel get_InnerChannel()
+ [m]	CommunicationState get_State()
+ [m]	Void System.ServiceModel.ICommunicationObject.add_Closed(EventHandler)
+ [m]	Void System.ServiceModel.ICommunicationObject.remove_Closed(EventHandler)
+ [m]	Void System.ServiceModel.ICommunicationObject.add_Closing(EventHandler)
+ [m]	Void System.ServiceModel.ICommunicationObject.remove_Closing(EventHandler)
+ [m]	Void System.ServiceModel.ICommunicationObject.add_Faulted(EventHandler)
+ [m]	Void System.ServiceModel.ICommunicationObject.remove_Faulted(EventHandler)
+ [m]	Void System.ServiceModel.ICommunicationObject.add_Opened(EventHandler)
+ [m]	Void System.ServiceModel.ICommunicationObject.remove_Opened(EventHandler)
+ [m]	Void System.ServiceModel.ICommunicationObject.add_Opening(EventHandler)
+ [m]	Void System.ServiceModel.ICommunicationObject.remove_Opening(EventHandler)
+ [m]	Void Abort()
+ [m]	TChannel CreateChannel()
+ [m]	T GetDefaultValueForInitialization()
+ [m]	Void InvokeAsync(BeginOperationDelegate,Object[],EndOperationDelegate,SendOrPostCallback,Object)
+ [m]	IAsyncResult System.ServiceModel.ICommunicationObject.BeginClose(AsyncCallback,Object)
+ [m]	IAsyncResult System.ServiceModel.ICommunicationObject.BeginClose(TimeSpan,AsyncCallback,Object)
+ [m]	IAsyncResult System.ServiceModel.ICommunicationObject.BeginOpen(AsyncCallback,Object)
+ [m]	IAsyncResult System.ServiceModel.ICommunicationObject.BeginOpen(TimeSpan,AsyncCallback,Object)
- [m]	Void System.ServiceModel.ICommunicationObject.Close()
+ [m]	Void System.ServiceModel.ICommunicationObject.Close(TimeSpan)
+ [m]	Void System.ServiceModel.ICommunicationObject.EndClose(IAsyncResult)
+ [m]	Void System.ServiceModel.ICommunicationObject.EndOpen(IAsyncResult)
- [m]	Void System.ServiceModel.ICommunicationObject.Open()
+ [m]	Void System.ServiceModel.ICommunicationObject.Open(TimeSpan)

f [t] System.ServiceModel.CommunicationException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.ServiceModel.CommunicationObjectAbortedException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.ServiceModel.CommunicationObjectFaultedException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.ServiceModel.CommunicationState

f [t] System.ServiceModel.DataContractFormatAttribute
+ [m]	Void .ctor()
+ [m]	OperationFormatStyle get_Style()
+ [m]	Void set_Style(OperationFormatStyle)

f [t] System.ServiceModel.EndpointAddress
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(Uri,AddressHeader[])
+ [m]	Void .ctor(Uri,EndpointIdentity,AddressHeader[])
+ [m]	Uri get_AnonymousUri()
+ [m]	AddressHeaderCollection get_Headers()
+ [m]	EndpointIdentity get_Identity()
+ [m]	Boolean get_IsAnonymous()
+ [m]	Boolean get_IsNone()
+ [m]	Uri get_NoneUri()
+ [m]	Uri get_Uri()
! [m]	Void ApplyTo(Message)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(EndpointAddress,EndpointAddress)
+ [m]	Boolean op_Inequality(EndpointAddress,EndpointAddress)
+ [m]	EndpointAddress ReadFrom(AddressingVersion,XmlDictionaryReader)
+ [m]	String ToString()
+ [m]	Void WriteContentsTo(AddressingVersion,XmlDictionaryWriter)

f [t] System.ServiceModel.EndpointAddressBuilder
+ [m]	Void .ctor()
+ [m]	Void .ctor(EndpointAddress)
+ [m]	Collection`1 get_Headers()
- [m]	EndpointIdentity get_Identity()
- [m]	Void set_Identity(EndpointIdentity)
+ [m]	Uri get_Uri()
+ [m]	Void set_Uri(Uri)
+ [m]	EndpointAddress ToEndpointAddress()

f [t] System.ServiceModel.EndpointIdentity
+ [m]	Void .ctor()
- [m]	Boolean Equals(Object)
- [m]	Int32 GetHashCode()
- [m]	String ToString()

f [t] System.ServiceModel.EndpointNotFoundException
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.ServiceModel.EnvelopeVersion
- [m]	Void .ctor()
+ [m]	String get_NextDestinationActorValue()
+ [m]	EnvelopeVersion get_None()
+ [m]	EnvelopeVersion get_Soap11()
+ [m]	EnvelopeVersion get_Soap12()
+ [m]	String[] GetUltimateDestinationActorValues()
+ [m]	String ToString()

f [t] System.ServiceModel.ExceptionDetail
+ [m]	Void .ctor(Exception)
+ [m]	String get_HelpLink()
+ [m]	Void set_HelpLink(String)
+ [m]	ExceptionDetail get_InnerException()
+ [m]	Void set_InnerException(ExceptionDetail)
+ [m]	String get_Message()
+ [m]	Void set_Message(String)
+ [m]	String get_StackTrace()
+ [m]	Void set_StackTrace(String)
+ [m]	String get_Type()
+ [m]	Void set_Type(String)
+ [m]	String ToString()

f [t] System.ServiceModel.FaultCode
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,FaultCode)
+ [m]	Void .ctor(String,String)
+ [m]	Void .ctor(String,String,FaultCode)
+ [m]	Boolean get_IsPredefinedFault()
+ [m]	Boolean get_IsReceiverFault()
+ [m]	Boolean get_IsSenderFault()
+ [m]	String get_Name()
+ [m]	String get_Namespace()
+ [m]	FaultCode get_SubCode()
+ [m]	FaultCode CreateSenderFaultCode(FaultCode)

f [t] System.ServiceModel.FaultContractAttribute
+ [m]	Void .ctor(Type)
+ [m]	String get_Action()
+ [m]	Void set_Action(String)
+ [m]	Type get_DetailType()
+ [m]	String get_Name()
+ [m]	Void set_Name(String)
+ [m]	String get_Namespace()
+ [m]	Void set_Namespace(String)

f [t] System.ServiceModel.FaultException
+ [m]	Void .ctor()
+ [m]	Void .ctor(MessageFault,String)
+ [m]	Void .ctor(FaultReason,FaultCode,String)
+ [m]	String get_Action()
+ [m]	FaultCode get_Code()
+ [m]	String get_Message()
+ [m]	FaultReason get_Reason()
! [m]	FaultException CreateFault(MessageFault,String,Type[])
! [m]	FaultException CreateFault(MessageFault,Type[])
+ [m]	MessageFault CreateMessageFault()

f [t] System.ServiceModel.FaultException`1
+ [m]	Void .ctor(TDetail,FaultReason,FaultCode,String)
+ [m]	TDetail get_Detail()
+ [m]	MessageFault CreateMessageFault()
+ [m]	String ToString()

f [t] System.ServiceModel.FaultReason
+ [m]	Void .ctor(IEnumerable`1)
+ [m]	Void .ctor(FaultReasonText)
+ [m]	Void .ctor(String)
+ [m]	FaultReasonText GetMatchingTranslation()
+ [m]	FaultReasonText GetMatchingTranslation(CultureInfo)
+ [m]	String ToString()

f [t] System.ServiceModel.FaultReasonText
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,String)
+ [m]	String get_Text()
+ [m]	String get_XmlLang()
+ [m]	Boolean Matches(CultureInfo)

f [t] System.ServiceModel.IClientChannel
+ [m]	Boolean get_AllowInitializationUI()
+ [m]	Void set_AllowInitializationUI(Boolean)
+ [m]	Boolean get_DidInteractiveInitialization()
+ [m]	Uri get_Via()
+ [m]	Void add_UnknownMessageReceived(EventHandler`1)
+ [m]	Void remove_UnknownMessageReceived(EventHandler`1)
+ [m]	IAsyncResult BeginDisplayInitializationUI(AsyncCallback,Object)
+ [m]	Void DisplayInitializationUI()
+ [m]	Void EndDisplayInitializationUI(IAsyncResult)

f [t] System.ServiceModel.ICommunicationObject
+ [m]	CommunicationState get_State()
+ [m]	Void add_Closed(EventHandler)
+ [m]	Void remove_Closed(EventHandler)
+ [m]	Void add_Closing(EventHandler)
+ [m]	Void remove_Closing(EventHandler)
+ [m]	Void add_Faulted(EventHandler)
+ [m]	Void remove_Faulted(EventHandler)
+ [m]	Void add_Opened(EventHandler)
+ [m]	Void remove_Opened(EventHandler)
+ [m]	Void add_Opening(EventHandler)
+ [m]	Void remove_Opening(EventHandler)
+ [m]	Void Abort()
+ [m]	IAsyncResult BeginClose(AsyncCallback,Object)
+ [m]	IAsyncResult BeginClose(TimeSpan,AsyncCallback,Object)
+ [m]	IAsyncResult BeginOpen(AsyncCallback,Object)
+ [m]	IAsyncResult BeginOpen(TimeSpan,AsyncCallback,Object)
+ [m]	Void Close()
+ [m]	Void Close(TimeSpan)
+ [m]	Void EndClose(IAsyncResult)
+ [m]	Void EndOpen(IAsyncResult)
+ [m]	Void Open()
+ [m]	Void Open(TimeSpan)

f [t] System.ServiceModel.IContextChannel
+ [m]	Boolean get_AllowOutputBatching()
+ [m]	Void set_AllowOutputBatching(Boolean)
+ [m]	IInputSession get_InputSession()
+ [m]	EndpointAddress get_LocalAddress()
+ [m]	TimeSpan get_OperationTimeout()
+ [m]	Void set_OperationTimeout(TimeSpan)
+ [m]	IOutputSession get_OutputSession()
+ [m]	EndpointAddress get_RemoteAddress()
+ [m]	String get_SessionId()

f [t] System.ServiceModel.IDefaultCommunicationTimeouts
+ [m]	TimeSpan get_CloseTimeout()
+ [m]	TimeSpan get_OpenTimeout()
+ [m]	TimeSpan get_ReceiveTimeout()
+ [m]	TimeSpan get_SendTimeout()

f [t] System.ServiceModel.IExtensibleObject`1
+ [m]	IExtensionCollection`1 get_Extensions()

f [t] System.ServiceModel.IExtension`1
+ [m]	Void Attach(T)
+ [m]	Void Detach(T)

f [t] System.ServiceModel.IExtensionCollection`1
+ [m]	E Find()
+ [m]	Collection`1 FindAll()

f [t] System.ServiceModel.InvalidMessageContractException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.ServiceModel.MessageHeaderAttribute
+ [m]	Boolean get_MustUnderstand()
+ [m]	Void set_MustUnderstand(Boolean)
+ [m]	Void .ctor()

f [t] System.ServiceModel.MessageBodyMemberAttribute
+ [m]	Void .ctor()
+ [m]	Int32 get_Order()
+ [m]	Void set_Order(Int32)

f [t] System.ServiceModel.MessageContractAttribute
+ [m]	Void .ctor()
+ [m]	Boolean get_IsWrapped()
+ [m]	Void set_IsWrapped(Boolean)
+ [m]	String get_WrapperName()
+ [m]	Void set_WrapperName(String)
+ [m]	String get_WrapperNamespace()
+ [m]	Void set_WrapperNamespace(String)

f [t] System.ServiceModel.MessageContractMemberAttribute
+ [m]	Void .ctor()
+ [m]	String get_Name()
+ [m]	Void set_Name(String)
+ [m]	String get_Namespace()
+ [m]	Void set_Namespace(String)

f [t] System.ServiceModel.MessageCredentialType

f [t] System.ServiceModel.MessageHeader`1
+ [m]	Void .ctor()
+ [m]	Void .ctor(T)
+ [m]	Void .ctor(T,Boolean,String,Boolean)
+ [m]	String get_Actor()
+ [m]	Void set_Actor(String)
+ [m]	T get_Content()
+ [m]	Void set_Content(T)
+ [m]	Boolean get_MustUnderstand()
+ [m]	Void set_MustUnderstand(Boolean)
+ [m]	Boolean get_Relay()
+ [m]	Void set_Relay(Boolean)
+ [m]	MessageHeader GetUntypedHeader(String,String)

f [t] System.ServiceModel.MessageHeaderException
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Boolean)
+ [m]	Void .ctor(String,Exception)
+ [m]	Void .ctor(String,String,String)
+ [m]	Void .ctor(String,String,String,Boolean)
+ [m]	Void .ctor(String,String,String,Boolean,Exception)
+ [m]	Void .ctor(String,String,String,Exception)
+ [m]	String get_HeaderName()
+ [m]	String get_HeaderNamespace()
+ [m]	Boolean get_IsDuplicate()

f [t] System.ServiceModel.MessageParameterAttribute
+ [m]	Void .ctor()
+ [m]	String get_Name()
+ [m]	Void set_Name(String)

f [t] System.ServiceModel.OperationContext
+ [m]	Void .ctor(IContextChannel)
+ [m]	OperationContext get_Current()
+ [m]	Void set_Current(OperationContext)
+ [m]	IExtensionCollection`1 get_Extensions()
+ [m]	MessageHeaders get_IncomingMessageHeaders()
+ [m]	MessageProperties get_IncomingMessageProperties()
+ [m]	MessageVersion get_IncomingMessageVersion()
+ [m]	Boolean get_IsUserContext()
+ [m]	MessageHeaders get_OutgoingMessageHeaders()
+ [m]	MessageProperties get_OutgoingMessageProperties()
+ [m]	RequestContext get_RequestContext()
+ [m]	Void set_RequestContext(RequestContext)
+ [m]	Void add_OperationCompleted(EventHandler)
+ [m]	Void remove_OperationCompleted(EventHandler)

f [t] System.ServiceModel.OperationContextScope
+ [m]	Void .ctor(IContextChannel)
+ [m]	Void .ctor(OperationContext)
+ [m]	Void Dispose()

f [t] System.ServiceModel.OperationContractAttribute
+ [m]	Void .ctor()
+ [m]	String get_Action()
+ [m]	Void set_Action(String)
+ [m]	Boolean get_AsyncPattern()
+ [m]	Void set_AsyncPattern(Boolean)
+ [m]	Boolean get_IsOneWay()
+ [m]	Void set_IsOneWay(Boolean)
+ [m]	String get_Name()
+ [m]	Void set_Name(String)
+ [m]	String get_ReplyAction()
+ [m]	Void set_ReplyAction(String)

f [t] System.ServiceModel.OperationFormatStyle

f [t] System.ServiceModel.ProtocolException
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.ServiceModel.QuotaExceededException
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.ServiceModel.SecurityMode

f [t] System.ServiceModel.ServerTooBusyException
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.ServiceModel.ServiceActivationException
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.ServiceModel.ServiceContractAttribute
+ [m]	Void .ctor()
+ [m]	Type get_CallbackContract()
+ [m]	Void set_CallbackContract(Type)
+ [m]	String get_ConfigurationName()
+ [m]	Void set_ConfigurationName(String)
+ [m]	String get_Name()
+ [m]	Void set_Name(String)
+ [m]	String get_Namespace()
+ [m]	Void set_Namespace(String)

f [t] System.ServiceModel.ServiceKnownTypeAttribute
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Type)
+ [m]	Void .ctor(Type)
+ [m]	Type get_DeclaringType()
+ [m]	String get_MethodName()
+ [m]	Type get_Type()

f [t] System.ServiceModel.TransferMode

f [t] System.ServiceModel.UnknownMessageReceivedEventArgs
- [m]	Void .ctor()
+ [m]	Message get_Message()

f [t] System.ServiceModel.XmlSerializerFormatAttribute
+ [m]	Void .ctor()
+ [m]	OperationFormatStyle get_Style()
+ [m]	Void set_Style(OperationFormatStyle)
+ [m]	Boolean get_SupportFaults()
+ [m]	Void set_SupportFaults(Boolean)

f [t] System.ServiceModel.Security.HttpDigestClientCredential
+ [m]	Void .ctor()
+ [m]	NetworkCredential get_ClientCredential()
+ [m]	Void set_ClientCredential(NetworkCredential)

f [t] System.ServiceModel.Security.MessageSecurityException
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.ServiceModel.Security.SecurityAccessDeniedException
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.ServiceModel.Security.UserNamePasswordClientCredential
+ [m]	Void .ctor()
+ [m]	String get_Password()
+ [m]	Void set_Password(String)
+ [m]	String get_UserName()
+ [m]	Void set_UserName(String)

f [t] System.ServiceModel.Security.WindowsClientCredential
+ [m]	Void .ctor()
+ [m]	TokenImpersonationLevel get_AllowedImpersonationLevel()
+ [m]	Void set_AllowedImpersonationLevel(TokenImpersonationLevel)
+ [m]	NetworkCredential get_ClientCredential()
+ [m]	Void set_ClientCredential(NetworkCredential)

+ [t] System.ServiceModel.Security.X509ServiceCertificateAuthentication
+ [m]	Void .ctor()
! [m]	X509CertificateValidationMode get_CertificateValidationMode()
! [m]	Void set_CertificateValidationMode(X509CertificateValidationMode)
! [m]	X509CertificateValidator get_CustomCertificateValidator()
! [m]	Void set_CustomCertificateValidator(X509CertificateValidator)
! [m]	X509RevocationMode get_RevocationMode()
! [m]	Void set_RevocationMode(X509RevocationMode)
! [m]	StoreLocation get_TrustedStoreLocation()
! [m]	Void set_TrustedStoreLocation(StoreLocation)

+ [t] System.ServiceModel.Security.X509CertificateInitiatorClientCredential
+ [m]	Void .ctor()
! [m]	X509Certificate2 get_Certificate()
! [m]	Void set_Certificate(X509Certificate2)
! [m]	Void SetCertificate(StoreLocation,StoreName,X509FindType,Object)
! [m]	Void SetCertificate(String,StoreLocation,StoreName)

+ [t] System.ServiceModel.Security.X509CertificateRecipientClientCredential
+ [m]	Void .ctor()
! [m]	X509ServiceCertificateAuthentication get_Authentication()
! [m]	X509Certificate2 get_DefaultCertificate()
! [m]	Void set_DefaultCertificate(X509Certificate2)
! [m]	Dictionary`2 get_ScopedCertificates()
! [m]	X509ServiceCertificateAuthentication get_SslCertificateAuthentication()
! [m]	Void set_SslCertificateAuthentication(X509ServiceCertificateAuthentication)
! [m]	Void SetDefaultCertificate(StoreLocation,StoreName,X509FindType,Object)
! [m]	Void SetDefaultCertificate(String,StoreLocation,StoreName)
! [m]	Void SetScopedCertificate(StoreLocation,StoreName,X509FindType,Object,Uri)
! [m]	Void SetScopedCertificate(String,StoreLocation,StoreName,Uri)

+ [t] System.ServiceModel.Security.X509CertificateValidationMode

f [t] System.ServiceModel.Dispatcher.ClientOperation
+ [m]	Void .ctor(ClientRuntime,String,String)
+ [m]	Void .ctor(ClientRuntime,String,String,String)
+ [m]	String get_Action()
! [m]	ICollection`1 get_ClientParameterInspectors()
+ [m]	Boolean get_DeserializeReply()
+ [m]	Void set_DeserializeReply(Boolean)
+ [m]	IClientMessageFormatter get_Formatter()
+ [m]	Void set_Formatter(IClientMessageFormatter)
+ [m]	Boolean get_IsOneWay()
+ [m]	Void set_IsOneWay(Boolean)
+ [m]	String get_Name()
+ [m]	ClientRuntime get_Parent()
+ [m]	String get_ReplyAction()
+ [m]	Boolean get_SerializeRequest()
+ [m]	Void set_SerializeRequest(Boolean)
! [m]	MethodInfo get_TaskMethod()
! [m]	Void set_TaskMethod(MethodInfo)
! [m]	Type get_TaskTResult()
! [m]	Void set_TaskTResult(Type)

f [t] System.ServiceModel.Dispatcher.ClientRuntime
- [m]	Void .ctor()
! [m]	ICollection`1 get_ClientMessageInspectors()
! [m]	ICollection`1 get_ClientOperations()
+ [m]	Type get_ContractClientType()
+ [m]	Void set_ContractClientType(Type)
+ [m]	String get_ContractName()
+ [m]	String get_ContractNamespace()
+ [m]	Boolean get_ManualAddressing()
+ [m]	Void set_ManualAddressing(Boolean)
+ [m]	Int32 get_MaxFaultSize()
+ [m]	Void set_MaxFaultSize(Int32)
+ [m]	IClientOperationSelector get_OperationSelector()
+ [m]	Void set_OperationSelector(IClientOperationSelector)
! [m]	ClientOperation get_UnhandledClientOperation()
+ [m]	Uri get_Via()
+ [m]	Void set_Via(Uri)

f [t] System.ServiceModel.Dispatcher.DispatchOperation
+ [m]	Void .ctor(DispatchRuntime,String,String)
+ [m]	String get_Action()
+ [m]	Boolean get_AutoDisposeParameters()
+ [m]	Void set_AutoDisposeParameters(Boolean)
+ [m]	Boolean get_DeserializeRequest()
+ [m]	Void set_DeserializeRequest(Boolean)
+ [m]	Boolean get_IsOneWay()
+ [m]	String get_Name()
+ [m]	DispatchRuntime get_Parent()
+ [m]	Boolean get_SerializeReply()
+ [m]	Void set_SerializeReply(Boolean)

f [t] System.ServiceModel.Dispatcher.DispatchRuntime
- [m]	Void .ctor()

f [t] System.ServiceModel.Dispatcher.EndpointDispatcher
+ [m]	Void .ctor()

f [t] System.ServiceModel.Dispatcher.IClientMessageFormatter
+ [m]	Object DeserializeReply(Message,Object[])
+ [m]	Message SerializeRequest(MessageVersion,Object[])

f [t] System.ServiceModel.Dispatcher.IClientMessageInspector
+ [m]	Void AfterReceiveReply(Message&,Object)
+ [m]	Object BeforeSendRequest(Message&,IClientChannel)

f [t] System.ServiceModel.Dispatcher.IClientOperationSelector
+ [m]	Boolean get_AreParametersRequiredForSelection()
+ [m]	String SelectOperation(MethodBase,Object[])

f [t] System.ServiceModel.Dispatcher.IParameterInspector
+ [m]	Void AfterCall(String,Object[],Object,Object)
+ [m]	Object BeforeCall(String,Object[])

f [t] System.ServiceModel.Description.ClientCredentials
+ [m]	Void .ctor()
+ [m]	Void .ctor(ClientCredentials)
- [m]	X509CertificateInitiatorClientCredential get_ClientCertificate()
- [m]	HttpDigestClientCredential get_HttpDigest()
- [m]	X509CertificateRecipientClientCredential get_ServiceCertificate()
+ [m]	UserNamePasswordClientCredential get_UserName()
- [m]	WindowsClientCredential get_Windows()
+ [m]	Void ApplyClientBehavior(ServiceEndpoint,ClientRuntime)
+ [m]	ClientCredentials Clone()
+ [m]	ClientCredentials CloneCore()
+ [m]	Void System.ServiceModel.Description.IEndpointBehavior.AddBindingParameters(ServiceEndpoint,BindingParameterCollection)
+ [m]	Void System.ServiceModel.Description.IEndpointBehavior.ApplyDispatchBehavior(ServiceEndpoint,EndpointDispatcher)
+ [m]	Void System.ServiceModel.Description.IEndpointBehavior.Validate(ServiceEndpoint)

f [t] System.ServiceModel.Description.ContractDescription
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,String)
+ [m]	Type get_CallbackContractType()
+ [m]	Void set_CallbackContractType(Type)
+ [m]	String get_ConfigurationName()
+ [m]	Void set_ConfigurationName(String)
! [m]	KeyedCollection`2 get_ContractBehaviors()
+ [m]	Type get_ContractType()
+ [m]	Void set_ContractType(Type)
+ [m]	String get_Name()
+ [m]	Void set_Name(String)
+ [m]	String get_Namespace()
+ [m]	Void set_Namespace(String)
+ [m]	OperationDescriptionCollection get_Operations()

f [t] System.ServiceModel.Description.DataContractSerializerOperationBehavior
+ [m]	Void .ctor(OperationDescription)
+ [m]	Void .ctor(OperationDescription,DataContractFormatAttribute)
+ [m]	DataContractFormatAttribute get_DataContractFormatAttribute()
+ [m]	DataContractResolver get_DataContractResolver()
+ [m]	Void set_DataContractResolver(DataContractResolver)
+ [m]	Int32 get_MaxItemsInObjectGraph()
+ [m]	Void set_MaxItemsInObjectGraph(Int32)
+ [m]	XmlObjectSerializer CreateSerializer(Type,String,String,IList`1)
+ [m]	XmlObjectSerializer CreateSerializer(Type,XmlDictionaryString,XmlDictionaryString,IList`1)
+ [m]	Void System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)
+ [m]	Void System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)
+ [m]	Void System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)
+ [m]	Void System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)

f [t] System.ServiceModel.Description.FaultDescription
+ [m]	Void .ctor(String)
+ [m]	String get_Action()
+ [m]	Type get_DetailType()
+ [m]	Void set_DetailType(Type)
+ [m]	String get_Name()
+ [m]	Void set_Name(String)
+ [m]	String get_Namespace()
+ [m]	Void set_Namespace(String)

f [t] System.ServiceModel.Description.FaultDescriptionCollection
+ [m]	Void .ctor()

f [t] System.ServiceModel.Description.IContractBehavior
+ [m]	Void AddBindingParameters(ContractDescription,ServiceEndpoint,BindingParameterCollection)
+ [m]	Void ApplyClientBehavior(ContractDescription,ServiceEndpoint,ClientRuntime)
+ [m]	Void ApplyDispatchBehavior(ContractDescription,ServiceEndpoint,DispatchRuntime)
+ [m]	Void Validate(ContractDescription,ServiceEndpoint)

f [t] System.ServiceModel.Description.IEndpointBehavior
+ [m]	Void AddBindingParameters(ServiceEndpoint,BindingParameterCollection)
+ [m]	Void ApplyClientBehavior(ServiceEndpoint,ClientRuntime)
+ [m]	Void ApplyDispatchBehavior(ServiceEndpoint,EndpointDispatcher)
+ [m]	Void Validate(ServiceEndpoint)

f [t] System.ServiceModel.Description.IOperationBehavior
+ [m]	Void AddBindingParameters(OperationDescription,BindingParameterCollection)
+ [m]	Void ApplyClientBehavior(OperationDescription,ClientOperation)
+ [m]	Void ApplyDispatchBehavior(OperationDescription,DispatchOperation)
+ [m]	Void Validate(OperationDescription)

f [t] System.ServiceModel.Description.MessageBodyDescription
+ [m]	Void .ctor()
+ [m]	MessagePartDescriptionCollection get_Parts()
+ [m]	MessagePartDescription get_ReturnValue()
+ [m]	Void set_ReturnValue(MessagePartDescription)
+ [m]	String get_WrapperName()
+ [m]	Void set_WrapperName(String)
+ [m]	String get_WrapperNamespace()
+ [m]	Void set_WrapperNamespace(String)

f [t] System.ServiceModel.Description.MessageDescription
+ [m]	Void .ctor(String,MessageDirection)
+ [m]	String get_Action()
+ [m]	MessageBodyDescription get_Body()
+ [m]	MessageDirection get_Direction()
+ [m]	MessageHeaderDescriptionCollection get_Headers()
+ [m]	Type get_MessageType()
+ [m]	Void set_MessageType(Type)
+ [m]	MessagePropertyDescriptionCollection get_Properties()

f [t] System.ServiceModel.Description.MessageDescriptionCollection
+ [m]	Void .ctor()
+ [m]	MessageDescription Find(String)
+ [m]	Collection`1 FindAll(String)

f [t] System.ServiceModel.Description.MessageDirection

f [t] System.ServiceModel.Description.MessageHeaderDescription
+ [m]	Void .ctor(String,String)
+ [m]	String get_Actor()
+ [m]	Void set_Actor(String)
+ [m]	Boolean get_MustUnderstand()
+ [m]	Void set_MustUnderstand(Boolean)
+ [m]	Boolean get_Relay()
+ [m]	Void set_Relay(Boolean)
+ [m]	Boolean get_TypedHeader()
+ [m]	Void set_TypedHeader(Boolean)

f [t] System.ServiceModel.Description.MessageHeaderDescriptionCollection
+ [m]	Void .ctor()
+ [m]	XmlQualifiedName GetKeyForItem(MessageHeaderDescription)

f [t] System.ServiceModel.Description.MessagePartDescription
+ [m]	Void .ctor(String,String)
+ [m]	Int32 get_Index()
+ [m]	Void set_Index(Int32)
+ [m]	MemberInfo get_MemberInfo()
+ [m]	Void set_MemberInfo(MemberInfo)
+ [m]	Boolean get_Multiple()
+ [m]	Void set_Multiple(Boolean)
+ [m]	String get_Name()
+ [m]	String get_Namespace()
+ [m]	Type get_Type()
+ [m]	Void set_Type(Type)

f [t] System.ServiceModel.Description.MessagePartDescriptionCollection
+ [m]	Void .ctor()
+ [m]	XmlQualifiedName GetKeyForItem(MessagePartDescription)

f [t] System.ServiceModel.Description.MessagePropertyDescription
+ [m]	Void .ctor(String)

f [t] System.ServiceModel.Description.MessagePropertyDescriptionCollection
+ [m]	Void .ctor()
+ [m]	String GetKeyForItem(MessagePropertyDescription)

f [t] System.ServiceModel.Description.OperationDescription
+ [m]	Void .ctor(String,ContractDescription)
+ [m]	ContractDescription get_DeclaringContract()
+ [m]	Void set_DeclaringContract(ContractDescription)
+ [m]	FaultDescriptionCollection get_Faults()
+ [m]	Boolean get_IsOneWay()
+ [m]	Collection`1 get_KnownTypes()
+ [m]	MessageDescriptionCollection get_Messages()
+ [m]	String get_Name()
! [m]	KeyedCollection`2 get_OperationBehaviors()
! [m]	MethodInfo get_TaskMethod()
! [m]	Void set_TaskMethod(MethodInfo)

f [t] System.ServiceModel.Description.OperationDescriptionCollection
+ [m]	Void .ctor()
+ [m]	OperationDescription Find(String)
+ [m]	Collection`1 FindAll(String)
+ [m]	Void InsertItem(Int32,OperationDescription)
+ [m]	Void SetItem(Int32,OperationDescription)

f [t] System.ServiceModel.Description.ServiceEndpoint
+ [m]	Void .ctor(ContractDescription)
+ [m]	Void .ctor(ContractDescription,Binding,EndpointAddress)
+ [m]	EndpointAddress get_Address()
+ [m]	Void set_Address(EndpointAddress)
+ [m]	Binding get_Binding()
+ [m]	Void set_Binding(Binding)
+ [m]	ContractDescription get_Contract()
+ [m]	Void set_Contract(ContractDescription)
! [m]	KeyedCollection`2 get_EndpointBehaviors()
+ [m]	String get_Name()
+ [m]	Void set_Name(String)

f [t] System.ServiceModel.Channels.AddressHeader
+ [m]	Void .ctor()
+ [m]	String get_Name()
+ [m]	String get_Namespace()
+ [m]	AddressHeader CreateAddressHeader(String,String,Object)
+ [m]	AddressHeader CreateAddressHeader(String,String,Object,XmlObjectSerializer)
+ [m]	Boolean Equals(Object)
+ [m]	XmlDictionaryReader GetAddressHeaderReader()
+ [m]	Int32 GetHashCode()
+ [m]	T GetValue()
+ [m]	T GetValue(XmlObjectSerializer)
+ [m]	Void OnWriteAddressHeaderContents(XmlDictionaryWriter)
+ [m]	Void OnWriteStartAddressHeader(XmlDictionaryWriter)
! [m]	MessageHeader ToMessageHeader()
+ [m]	Void WriteAddressHeader(XmlDictionaryWriter)
+ [m]	Void WriteAddressHeader(XmlWriter)
+ [m]	Void WriteAddressHeaderContents(XmlDictionaryWriter)
+ [m]	Void WriteStartAddressHeader(XmlDictionaryWriter)

f [t] System.ServiceModel.Channels.AddressHeaderCollection
+ [m]	Void .ctor()
+ [m]	Void .ctor(IEnumerable`1)
+ [m]	Void AddHeadersTo(Message)
! [m]	AddressHeader[] FindAll(String,String)
+ [m]	AddressHeader FindHeader(String,String)

f [t] System.ServiceModel.Channels.AddressingVersion
- [m]	Void .ctor()
+ [m]	AddressingVersion get_None()
+ [m]	AddressingVersion get_WSAddressing10()
+ [m]	String ToString()

f [t] System.ServiceModel.Channels.BinaryMessageEncodingBindingElement
+ [m]	Void .ctor()
! [m]	CompressionFormat get_CompressionFormat()
! [m]	Void set_CompressionFormat(CompressionFormat)
+ [m]	Int32 get_MaxSessionSize()
+ [m]	Void set_MaxSessionSize(Int32)
+ [m]	MessageVersion get_MessageVersion()
+ [m]	Void set_MessageVersion(MessageVersion)
+ [m]	XmlDictionaryReaderQuotas get_ReaderQuotas()
+ [m]	Void set_ReaderQuotas(XmlDictionaryReaderQuotas)
+ [m]	IChannelFactory`1 BuildChannelFactory(BindingContext)
+ [m]	BindingElement Clone()
+ [m]	MessageEncoderFactory CreateMessageEncoderFactory()
+ [m]	T GetProperty(BindingContext)

f [t] System.ServiceModel.Channels.Binding
+ [m]	Void .ctor()
+ [m]	Void .ctor(String,String)
+ [m]	TimeSpan get_CloseTimeout()
+ [m]	Void set_CloseTimeout(TimeSpan)
+ [m]	MessageVersion get_MessageVersion()
+ [m]	String get_Name()
+ [m]	Void set_Name(String)
+ [m]	String get_Namespace()
+ [m]	Void set_Namespace(String)
+ [m]	TimeSpan get_OpenTimeout()
+ [m]	Void set_OpenTimeout(TimeSpan)
+ [m]	TimeSpan get_ReceiveTimeout()
+ [m]	Void set_ReceiveTimeout(TimeSpan)
+ [m]	String get_Scheme()
+ [m]	TimeSpan get_SendTimeout()
+ [m]	Void set_SendTimeout(TimeSpan)
+ [m]	IChannelFactory`1 BuildChannelFactory(Object[])
+ [m]	IChannelFactory`1 BuildChannelFactory(BindingParameterCollection)
+ [m]	Boolean CanBuildChannelFactory(Object[])
+ [m]	Boolean CanBuildChannelFactory(BindingParameterCollection)
+ [m]	BindingElementCollection CreateBindingElements()
+ [m]	T GetProperty(BindingParameterCollection)

f [t] System.ServiceModel.Channels.BindingContext
+ [m]	Void .ctor(CustomBinding,BindingParameterCollection)
+ [m]	CustomBinding get_Binding()
+ [m]	BindingParameterCollection get_BindingParameters()
+ [m]	BindingElementCollection get_RemainingBindingElements()
+ [m]	IChannelFactory`1 BuildInnerChannelFactory()
+ [m]	Boolean CanBuildInnerChannelFactory()
+ [m]	BindingContext Clone()
+ [m]	T GetInnerProperty()

f [t] System.ServiceModel.Channels.BindingElement
+ [m]	Void .ctor()
+ [m]	Void .ctor(BindingElement)
+ [m]	IChannelFactory`1 BuildChannelFactory(BindingContext)
+ [m]	Boolean CanBuildChannelFactory(BindingContext)
+ [m]	BindingElement Clone()
+ [m]	T GetProperty(BindingContext)

f [t] System.ServiceModel.Channels.BindingElementCollection
+ [m]	Void .ctor()
+ [m]	Void .ctor(IEnumerable`1)
+ [m]	Void .ctor(BindingElement[])
+ [m]	Void AddRange(BindingElement[])
+ [m]	BindingElementCollection Clone()
+ [m]	Boolean Contains(Type)
+ [m]	T Find()
+ [m]	Collection`1 FindAll()
+ [m]	Void InsertItem(Int32,BindingElement)
+ [m]	T Remove()
+ [m]	Collection`1 RemoveAll()
+ [m]	Void SetItem(Int32,BindingElement)

f [t] System.ServiceModel.Channels.BindingParameterCollection
+ [m]	Void .ctor()
+ [m]	Type GetKeyForItem(Object)
+ [m]	Void SetItem(Int32,Object)
+ [m]	Void InsertItem(Int32,Object)

f [t] System.ServiceModel.Channels.BodyWriter
+ [m]	Void .ctor(Boolean)
+ [m]	Boolean get_IsBuffered()
+ [m]	BodyWriter CreateBufferedCopy(Int32)
+ [m]	BodyWriter OnCreateBufferedCopy(Int32)
+ [m]	Void OnWriteBodyContents(XmlDictionaryWriter)
+ [m]	Void WriteBodyContents(XmlDictionaryWriter)

f [t] System.ServiceModel.Channels.BufferManager
+ [m]	Void .ctor()
+ [m]	Void Clear()
+ [m]	BufferManager CreateBufferManager(Int64,Int32)
+ [m]	Void ReturnBuffer(Byte[])
+ [m]	Byte[] TakeBuffer(Int32)

f [t] System.ServiceModel.Channels.ChannelBase
+ [m]	Void .ctor(ChannelManagerBase)
+ [m]	TimeSpan get_DefaultCloseTimeout()
+ [m]	TimeSpan get_DefaultOpenTimeout()
+ [m]	TimeSpan get_DefaultReceiveTimeout()
+ [m]	TimeSpan get_DefaultSendTimeout()
+ [m]	ChannelManagerBase get_Manager()
+ [m]	TimeSpan System.ServiceModel.IDefaultCommunicationTimeouts.get_CloseTimeout()
+ [m]	TimeSpan System.ServiceModel.IDefaultCommunicationTimeouts.get_OpenTimeout()
+ [m]	TimeSpan System.ServiceModel.IDefaultCommunicationTimeouts.get_ReceiveTimeout()
+ [m]	TimeSpan System.ServiceModel.IDefaultCommunicationTimeouts.get_SendTimeout()
+ [m]	T GetProperty()
+ [m]	Void OnClosed()

f [t] System.ServiceModel.Channels.ChannelFactoryBase
+ [m]	Void .ctor()
+ [m]	Void .ctor(IDefaultCommunicationTimeouts)
+ [m]	TimeSpan get_DefaultCloseTimeout()
+ [m]	TimeSpan get_DefaultOpenTimeout()
+ [m]	TimeSpan get_DefaultReceiveTimeout()
+ [m]	TimeSpan get_DefaultSendTimeout()
+ [m]	T GetProperty()
+ [m]	Void OnAbort()
+ [m]	IAsyncResult OnBeginClose(TimeSpan,AsyncCallback,Object)
+ [m]	Void OnClose(TimeSpan)
+ [m]	Void OnEndClose(IAsyncResult)

f [t] System.ServiceModel.Channels.ChannelFactoryBase`1
+ [m]	Void .ctor()
+ [m]	Void .ctor(IDefaultCommunicationTimeouts)
+ [m]	TChannel CreateChannel(EndpointAddress)
+ [m]	TChannel CreateChannel(EndpointAddress,Uri)
+ [m]	Void OnAbort()
+ [m]	IAsyncResult OnBeginClose(TimeSpan,AsyncCallback,Object)
+ [m]	Void OnClose(TimeSpan)
+ [m]	TChannel OnCreateChannel(EndpointAddress,Uri)
+ [m]	Void OnEndClose(IAsyncResult)
+ [m]	Void ValidateCreateChannel()

f [t] System.ServiceModel.Channels.ChannelManagerBase
+ [m]	Void .ctor()
+ [m]	TimeSpan get_DefaultReceiveTimeout()
+ [m]	TimeSpan get_DefaultSendTimeout()
+ [m]	TimeSpan System.ServiceModel.IDefaultCommunicationTimeouts.get_CloseTimeout()
+ [m]	TimeSpan System.ServiceModel.IDefaultCommunicationTimeouts.get_OpenTimeout()
+ [m]	TimeSpan System.ServiceModel.IDefaultCommunicationTimeouts.get_ReceiveTimeout()
+ [m]	TimeSpan System.ServiceModel.IDefaultCommunicationTimeouts.get_SendTimeout()

f [t] System.ServiceModel.Channels.ChannelParameterCollection
+ [m]	Void .ctor()
+ [m]	Void .ctor(IChannel)
+ [m]	IChannel get_Channel()
+ [m]	Void ClearItems()
+ [m]	Void InsertItem(Int32,Object)
+ [m]	Void PropagateChannelParameters(IChannel)
+ [m]	Void RemoveItem(Int32)
+ [m]	Void SetItem(Int32,Object)

f [t] System.ServiceModel.Channels.CommunicationObject
+ [m]	Void .ctor()
+ [m]	Void .ctor(Object)
+ [m]	TimeSpan get_DefaultCloseTimeout()
+ [m]	TimeSpan get_DefaultOpenTimeout()
+ [m]	Boolean get_IsDisposed()
+ [m]	CommunicationState get_State()
+ [m]	Object get_ThisLock()
+ [m]	Void add_Closed(EventHandler)
+ [m]	Void remove_Closed(EventHandler)
+ [m]	Void add_Closing(EventHandler)
+ [m]	Void remove_Closing(EventHandler)
+ [m]	Void add_Faulted(EventHandler)
+ [m]	Void remove_Faulted(EventHandler)
+ [m]	Void add_Opened(EventHandler)
+ [m]	Void remove_Opened(EventHandler)
+ [m]	Void add_Opening(EventHandler)
+ [m]	Void remove_Opening(EventHandler)
+ [m]	Void Abort()
+ [m]	IAsyncResult BeginClose(AsyncCallback,Object)
+ [m]	IAsyncResult BeginClose(TimeSpan,AsyncCallback,Object)
+ [m]	IAsyncResult BeginOpen(AsyncCallback,Object)
+ [m]	IAsyncResult BeginOpen(TimeSpan,AsyncCallback,Object)
+ [m]	Void Close()
+ [m]	Void Close(TimeSpan)
+ [m]	Void EndClose(IAsyncResult)
+ [m]	Void EndOpen(IAsyncResult)
+ [m]	Void Fault()
+ [m]	Type GetCommunicationObjectType()
+ [m]	Void OnAbort()
+ [m]	IAsyncResult OnBeginClose(TimeSpan,AsyncCallback,Object)
+ [m]	IAsyncResult OnBeginOpen(TimeSpan,AsyncCallback,Object)
+ [m]	Void OnClose(TimeSpan)
+ [m]	Void OnClosed()
+ [m]	Void OnClosing()
+ [m]	Void OnEndClose(IAsyncResult)
+ [m]	Void OnEndOpen(IAsyncResult)
+ [m]	Void OnFaulted()
+ [m]	Void OnOpen(TimeSpan)
+ [m]	Void OnOpened()
+ [m]	Void OnOpening()
+ [m]	Void Open()
+ [m]	Void Open(TimeSpan)

f [t] System.ServiceModel.Channels.CompressionFormat

f [t] System.ServiceModel.Channels.CustomBinding
+ [m]	Void .ctor()
+ [m]	Void .ctor(IEnumerable`1)
+ [m]	Void .ctor(Binding)
+ [m]	Void .ctor(BindingElement[])
+ [m]	Void .ctor(String,String,BindingElement[])
+ [m]	BindingElementCollection get_Elements()
+ [m]	String get_Scheme()
+ [m]	BindingElementCollection CreateBindingElements()

f [t] System.ServiceModel.Channels.FaultConverter
+ [m]	Void .ctor()
+ [m]	FaultConverter GetDefaultFaultConverter(MessageVersion)
+ [m]	Boolean OnTryCreateException(Message,MessageFault,Exception&)
+ [m]	Boolean OnTryCreateFaultMessage(Exception,Message&)
+ [m]	Boolean TryCreateException(Message,MessageFault,Exception&)

f [t] System.ServiceModel.Channels.IChannel
+ [m]	T GetProperty()

f [t] System.ServiceModel.Channels.IChannelFactory
+ [m]	T GetProperty()

f [t] System.ServiceModel.Channels.IChannelFactory`1
+ [m]	TChannel CreateChannel(EndpointAddress)
+ [m]	TChannel CreateChannel(EndpointAddress,Uri)

f [t] System.ServiceModel.Channels.IDuplexChannel

f [t] System.ServiceModel.Channels.IDuplexSession
+ [m]	IAsyncResult BeginCloseOutputSession(AsyncCallback,Object)
+ [m]	IAsyncResult BeginCloseOutputSession(TimeSpan,AsyncCallback,Object)
+ [m]	Void CloseOutputSession()
+ [m]	Void CloseOutputSession(TimeSpan)
+ [m]	Void EndCloseOutputSession(IAsyncResult)

f [t] System.ServiceModel.Channels.IDuplexSessionChannel

f [t] System.ServiceModel.Channels.IInputChannel
+ [m]	EndpointAddress get_LocalAddress()
+ [m]	IAsyncResult BeginReceive(AsyncCallback,Object)
+ [m]	IAsyncResult BeginReceive(TimeSpan,AsyncCallback,Object)
+ [m]	IAsyncResult BeginTryReceive(TimeSpan,AsyncCallback,Object)
+ [m]	IAsyncResult BeginWaitForMessage(TimeSpan,AsyncCallback,Object)
+ [m]	Message EndReceive(IAsyncResult)
+ [m]	Boolean EndTryReceive(IAsyncResult,Message&)
+ [m]	Boolean EndWaitForMessage(IAsyncResult)
+ [m]	Message Receive()
+ [m]	Message Receive(TimeSpan)
+ [m]	Boolean TryReceive(TimeSpan,Message&)
+ [m]	Boolean WaitForMessage(TimeSpan)

f [t] System.ServiceModel.Channels.IInputSession

f [t] System.ServiceModel.Channels.IInputSessionChannel

f [t] System.ServiceModel.Channels.IMessageProperty
+ [m]	IMessageProperty CreateCopy()

f [t] System.ServiceModel.Channels.IOutputChannel
+ [m]	EndpointAddress get_RemoteAddress()
+ [m]	Uri get_Via()
+ [m]	IAsyncResult BeginSend(Message,AsyncCallback,Object)
+ [m]	IAsyncResult BeginSend(Message,TimeSpan,AsyncCallback,Object)
+ [m]	Void EndSend(IAsyncResult)
+ [m]	Void Send(Message)
+ [m]	Void Send(Message,TimeSpan)

f [t] System.ServiceModel.Channels.IOutputSession

f [t] System.ServiceModel.Channels.IOutputSessionChannel

f [t] System.ServiceModel.Channels.IRequestChannel
+ [m]	EndpointAddress get_RemoteAddress()
+ [m]	Uri get_Via()
+ [m]	IAsyncResult BeginRequest(Message,AsyncCallback,Object)
+ [m]	IAsyncResult BeginRequest(Message,TimeSpan,AsyncCallback,Object)
+ [m]	Message EndRequest(IAsyncResult)
+ [m]	Message Request(Message)
+ [m]	Message Request(Message,TimeSpan)

f [t] System.ServiceModel.Channels.IRequestSessionChannel

f [t] System.ServiceModel.Channels.ISession
+ [m]	String get_Id()

f [t] System.ServiceModel.Channels.ISessionChannel`1
+ [m]	TSession get_Session()

f [t] System.ServiceModel.Channels.Message
+ [m]	Void .ctor()
+ [m]	MessageHeaders get_Headers()
+ [m]	Boolean get_IsDisposed()
+ [m]	Boolean get_IsEmpty()
+ [m]	Boolean get_IsFault()
+ [m]	MessageProperties get_Properties()
+ [m]	MessageState get_State()
+ [m]	MessageVersion get_Version()
+ [m]	Void Close()
+ [m]	MessageBuffer CreateBufferedCopy(Int32)
+ [m]	Message CreateMessage(MessageVersion,String)
+ [m]	Message CreateMessage(MessageVersion,String,Object)
+ [m]	Message CreateMessage(MessageVersion,String,Object,XmlObjectSerializer)
+ [m]	Message CreateMessage(MessageVersion,String,BodyWriter)
+ [m]	Message CreateMessage(MessageVersion,String,XmlDictionaryReader)
+ [m]	Message CreateMessage(MessageVersion,String,XmlReader)
+ [m]	Message CreateMessage(XmlDictionaryReader,Int32,MessageVersion)
+ [m]	Message CreateMessage(XmlReader,Int32,MessageVersion)
+ [m]	T GetBody()
+ [m]	T GetBody(XmlObjectSerializer)
+ [m]	String GetBodyAttribute(String,String)
+ [m]	XmlDictionaryReader GetReaderAtBodyContents()
+ [m]	Void OnBodyToString(XmlDictionaryWriter)
+ [m]	Void OnClose()
+ [m]	MessageBuffer OnCreateBufferedCopy(Int32)
+ [m]	T OnGetBody(XmlDictionaryReader)
+ [m]	String OnGetBodyAttribute(String,String)
+ [m]	XmlDictionaryReader OnGetReaderAtBodyContents()
+ [m]	Void OnWriteBodyContents(XmlDictionaryWriter)
+ [m]	Void OnWriteMessage(XmlDictionaryWriter)
+ [m]	Void OnWriteStartBody(XmlDictionaryWriter)
+ [m]	Void OnWriteStartEnvelope(XmlDictionaryWriter)
+ [m]	Void OnWriteStartHeaders(XmlDictionaryWriter)
+ [m]	Void System.IDisposable.Dispose()
+ [m]	String ToString()
+ [m]	Void WriteBody(XmlDictionaryWriter)
+ [m]	Void WriteBody(XmlWriter)
+ [m]	Void WriteBodyContents(XmlDictionaryWriter)
+ [m]	Void WriteMessage(XmlDictionaryWriter)
+ [m]	Void WriteMessage(XmlWriter)
+ [m]	Void WriteStartBody(XmlDictionaryWriter)
+ [m]	Void WriteStartBody(XmlWriter)
+ [m]	Void WriteStartEnvelope(XmlDictionaryWriter)

f [t] System.ServiceModel.Channels.MessageBuffer
+ [m]	Void .ctor()
+ [m]	Int32 get_BufferSize()
+ [m]	String get_MessageContentType()
+ [m]	Void Close()
+ [m]	Message CreateMessage()
+ [m]	Void System.IDisposable.Dispose()
+ [m]	Void WriteMessage(Stream)

f [t] System.ServiceModel.Channels.MessageEncoder
+ [m]	Void .ctor()
+ [m]	String get_ContentType()
+ [m]	String get_MediaType()
+ [m]	MessageVersion get_MessageVersion()
! [m]	T GetProperty()
+ [m]	Boolean IsContentTypeSupported(String)
+ [m]	Message ReadMessage(ArraySegment`1,BufferManager)
+ [m]	Message ReadMessage(ArraySegment`1,BufferManager,String)
+ [m]	Message ReadMessage(Stream,Int32)
+ [m]	Message ReadMessage(Stream,Int32,String)
+ [m]	String ToString()
+ [m]	ArraySegment`1 WriteMessage(Message,Int32,BufferManager)
+ [m]	ArraySegment`1 WriteMessage(Message,Int32,BufferManager,Int32)
+ [m]	Void WriteMessage(Message,Stream)

f [t] System.ServiceModel.Channels.MessageEncoderFactory
+ [m]	Void .ctor()
+ [m]	MessageEncoder get_Encoder()
+ [m]	MessageVersion get_MessageVersion()
+ [m]	MessageEncoder CreateSessionEncoder()

f [t] System.ServiceModel.Channels.MessageEncodingBindingElement
+ [m]	Void .ctor()
+ [m]	Void .ctor(MessageEncodingBindingElement)
+ [m]	MessageVersion get_MessageVersion()
+ [m]	Void set_MessageVersion(MessageVersion)
+ [m]	MessageEncoderFactory CreateMessageEncoderFactory()
+ [m]	T GetProperty(BindingContext)

f [t] System.ServiceModel.Channels.MessageFault
+ [m]	Void .ctor()
+ [m]	String get_Actor()
+ [m]	FaultCode get_Code()
+ [m]	Boolean get_HasDetail()
+ [m]	String get_Node()
+ [m]	FaultReason get_Reason()
+ [m]	MessageFault CreateFault(Message,Int32)
+ [m]	T GetDetail()
+ [m]	T GetDetail(XmlObjectSerializer)
+ [m]	XmlDictionaryReader GetReaderAtDetailContents()
+ [m]	XmlDictionaryReader OnGetReaderAtDetailContents()
+ [m]	Void OnWriteDetail(XmlDictionaryWriter,EnvelopeVersion)
+ [m]	Void OnWriteDetailContents(XmlDictionaryWriter)
+ [m]	Void OnWriteStartDetail(XmlDictionaryWriter,EnvelopeVersion)

f [t] System.ServiceModel.Channels.MessageHeader
+ [m]	Void .ctor()
+ [m]	String get_Actor()
+ [m]	Boolean get_IsReferenceParameter()
+ [m]	Boolean get_MustUnderstand()
+ [m]	Boolean get_Relay()
+ [m]	MessageHeader CreateHeader(String,String,Object)
+ [m]	MessageHeader CreateHeader(String,String,Object,Boolean)
+ [m]	MessageHeader CreateHeader(String,String,Object,Boolean,String)
+ [m]	MessageHeader CreateHeader(String,String,Object,Boolean,String,Boolean)
+ [m]	MessageHeader CreateHeader(String,String,Object,XmlObjectSerializer)
+ [m]	MessageHeader CreateHeader(String,String,Object,XmlObjectSerializer,Boolean)
+ [m]	MessageHeader CreateHeader(String,String,Object,XmlObjectSerializer,Boolean,String)
+ [m]	MessageHeader CreateHeader(String,String,Object,XmlObjectSerializer,Boolean,String,Boolean)
+ [m]	Boolean IsMessageVersionSupported(MessageVersion)
+ [m]	Void OnWriteHeaderContents(XmlDictionaryWriter,MessageVersion)
+ [m]	Void OnWriteStartHeader(XmlDictionaryWriter,MessageVersion)
+ [m]	String ToString()
+ [m]	Void WriteHeader(XmlDictionaryWriter,MessageVersion)
+ [m]	Void WriteHeader(XmlWriter,MessageVersion)
+ [m]	Void WriteHeaderAttributes(XmlDictionaryWriter,MessageVersion)
+ [m]	Void WriteHeaderContents(XmlDictionaryWriter,MessageVersion)
+ [m]	Void WriteStartHeader(XmlDictionaryWriter,MessageVersion)

f [t] System.ServiceModel.Channels.MessageHeaderInfo
+ [m]	Void .ctor()
+ [m]	String get_Actor()
+ [m]	Boolean get_IsReferenceParameter()
+ [m]	Boolean get_MustUnderstand()
+ [m]	String get_Name()
+ [m]	String get_Namespace()
+ [m]	Boolean get_Relay()

f [t] System.ServiceModel.Channels.MessageHeaders
+ [m]	Void .ctor(MessageHeaders)
+ [m]	Void .ctor(MessageVersion)
+ [m]	Void .ctor(MessageVersion,Int32)
+ [m]	String get_Action()
+ [m]	Void set_Action(String)
+ [m]	Int32 get_Count()
+ [m]	EndpointAddress get_FaultTo()
+ [m]	Void set_FaultTo(EndpointAddress)
+ [m]	EndpointAddress get_From()
+ [m]	Void set_From(EndpointAddress)
+ [m]	MessageHeaderInfo get_Item(Int32)
+ [m]	UniqueId get_MessageId()
+ [m]	Void set_MessageId(UniqueId)
+ [m]	MessageVersion get_MessageVersion()
+ [m]	UniqueId get_RelatesTo()
+ [m]	Void set_RelatesTo(UniqueId)
+ [m]	EndpointAddress get_ReplyTo()
+ [m]	Void set_ReplyTo(EndpointAddress)
+ [m]	Uri get_To()
+ [m]	Void set_To(Uri)
+ [m]	Void Add(MessageHeader)
+ [m]	Void Clear()
+ [m]	Void CopyHeaderFrom(Message,Int32)
+ [m]	Void CopyHeaderFrom(MessageHeaders,Int32)
+ [m]	Void CopyHeadersFrom(Message)
+ [m]	Void CopyHeadersFrom(MessageHeaders)
+ [m]	Void CopyTo(MessageHeaderInfo[],Int32)
+ [m]	Int32 FindHeader(String,String)
+ [m]	Int32 FindHeader(String,String,String[])
+ [m]	IEnumerator`1 GetEnumerator()
+ [m]	T GetHeader(Int32)
+ [m]	T GetHeader(Int32,XmlObjectSerializer)
+ [m]	T GetHeader(String,String)
+ [m]	T GetHeader(String,String,XmlObjectSerializer)
+ [m]	T GetHeader(String,String,String[])
+ [m]	XmlDictionaryReader GetReaderAtHeader(Int32)
! [m]	Boolean HaveMandatoryHeadersBeenUnderstood()
! [m]	Boolean HaveMandatoryHeadersBeenUnderstood(String[])
+ [m]	Void Insert(Int32,MessageHeader)
+ [m]	Void RemoveAll(String,String)
+ [m]	Void RemoveAt(Int32)
+ [m]	Void SetAction(XmlDictionaryString)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	Void WriteHeader(Int32,XmlDictionaryWriter)
+ [m]	Void WriteHeader(Int32,XmlWriter)
+ [m]	Void WriteHeaderContents(Int32,XmlDictionaryWriter)
+ [m]	Void WriteHeaderContents(Int32,XmlWriter)
+ [m]	Void WriteStartHeader(Int32,XmlDictionaryWriter)
+ [m]	Void WriteStartHeader(Int32,XmlWriter)

f [t] System.ServiceModel.Channels.MessageProperties
+ [m]	Void .ctor()
+ [m]	Void .ctor(MessageProperties)
+ [m]	Boolean get_AllowOutputBatching()
+ [m]	Void set_AllowOutputBatching(Boolean)
+ [m]	Int32 get_Count()
+ [m]	MessageEncoder get_Encoder()
+ [m]	Void set_Encoder(MessageEncoder)
+ [m]	Boolean get_IsFixedSize()
+ [m]	Object get_Item(String)
+ [m]	Void set_Item(String,Object)
+ [m]	ICollection`1 get_Keys()
- [m]	Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.get_IsReadOnly()
+ [m]	ICollection`1 get_Values()
+ [m]	Uri get_Via()
+ [m]	Void set_Via(Uri)
+ [m]	Void Add(String,Object)
+ [m]	Void Clear()
+ [m]	Boolean ContainsKey(String)
+ [m]	Void CopyProperties(MessageProperties)
+ [m]	Void Dispose()
+ [m]	Boolean Remove(String)
- [m]	Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Add(KeyValuePair`2)
- [m]	Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Contains(KeyValuePair`2)
- [m]	Void System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.CopyTo(KeyValuePair`2[],Int32)
- [m]	Boolean System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.Remove(KeyValuePair`2)
- [m]	IEnumerator`1 System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Object>>.GetEnumerator()
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	Boolean TryGetValue(String,Object&)

f [t] System.ServiceModel.Channels.MessageState

f [t] System.ServiceModel.Channels.MessageVersion
- [m]	Void .ctor()
+ [m]	AddressingVersion get_Addressing()
+ [m]	MessageVersion get_Default()
+ [m]	EnvelopeVersion get_Envelope()
+ [m]	MessageVersion get_None()
+ [m]	MessageVersion get_Soap11()
+ [m]	MessageVersion get_Soap12WSAddressing10()
+ [m]	MessageVersion CreateVersion(EnvelopeVersion)
+ [m]	MessageVersion CreateVersion(EnvelopeVersion,AddressingVersion)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	String ToString()

f [t] System.ServiceModel.Channels.RequestContext
+ [m]	Void .ctor()
+ [m]	Message get_RequestMessage()
+ [m]	Void Abort()
+ [m]	IAsyncResult BeginReply(Message,AsyncCallback,Object)
+ [m]	IAsyncResult BeginReply(Message,TimeSpan,AsyncCallback,Object)
+ [m]	Void Close()
+ [m]	Void Close(TimeSpan)
+ [m]	Void Dispose(Boolean)
+ [m]	Void EndReply(IAsyncResult)
+ [m]	Void Reply(Message)
+ [m]	Void Reply(Message,TimeSpan)
+ [m]	Void System.IDisposable.Dispose()

f [t] System.ServiceModel.Channels.TextMessageEncodingBindingElement
+ [m]	Void .ctor()
+ [m]	Void .ctor(MessageVersion,Encoding)
+ [m]	MessageVersion get_MessageVersion()
+ [m]	Void set_MessageVersion(MessageVersion)
+ [m]	XmlDictionaryReaderQuotas get_ReaderQuotas()
+ [m]	Void set_ReaderQuotas(XmlDictionaryReaderQuotas)
+ [m]	Encoding get_WriteEncoding()
+ [m]	Void set_WriteEncoding(Encoding)
+ [m]	IChannelFactory`1 BuildChannelFactory(BindingContext)
+ [m]	BindingElement Clone()
+ [m]	MessageEncoderFactory CreateMessageEncoderFactory()
+ [m]	T GetProperty(BindingContext)

f [t] System.ServiceModel.Channels.TransportBindingElement
+ [m]	Void .ctor()
+ [m]	Void .ctor(TransportBindingElement)
+ [m]	Boolean get_ManualAddressing()
+ [m]	Void set_ManualAddressing(Boolean)
+ [m]	Int64 get_MaxReceivedMessageSize()
+ [m]	Void set_MaxReceivedMessageSize(Int64)
+ [m]	String get_Scheme()
+ [m]	T GetProperty(BindingContext)

+ [t] System.IdentityModel.Selectors.X509CertificateValidator
+ [m]	Void .ctor()
+ [m]	Void Validate(X509Certificate2)

---------------------------------------
+ [a] System.ServiceModel.Security.dll
ref: ./netstandard/packages/System.ServiceModel.Security/ref/netstandard1.1/System.ServiceModel.Security.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.ServiceModel.Security.dll

f [t] System.ServiceModel.DnsEndpointIdentity
+ [m]	Void .ctor(String)

f [t] System.ServiceModel.MessageSecurityVersion
+ [m]	Void .ctor()
+ [m]	BasicSecurityProfileVersion get_BasicSecurityProfileVersion()
+ [m]	SecureConversationVersion get_SecureConversationVersion()
+ [m]	SecurityPolicyVersion get_SecurityPolicyVersion()
+ [m]	SecurityVersion get_SecurityVersion()
+ [m]	TrustVersion get_TrustVersion()
+ [m]	MessageSecurityVersion get_WSSecurity10WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10()
+ [m]	MessageSecurityVersion get_WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11()
+ [m]	MessageSecurityVersion get_WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11BasicSecurityProfile10()

f [t] System.ServiceModel.SpnEndpointIdentity
+ [m]	Void .ctor(String)
! [m]	TimeSpan get_SpnLookupTime()
! [m]	Void set_SpnLookupTime(TimeSpan)

f [t] System.ServiceModel.UpnEndpointIdentity
+ [m]	Void .ctor(String)

f [t] System.ServiceModel.Security.BasicSecurityProfileVersion
+ [m]	Void .ctor()
+ [m]	BasicSecurityProfileVersion get_BasicSecurityProfile10()

f [t] System.ServiceModel.Security.SecureConversationVersion
+ [m]	Void .ctor()
+ [m]	SecureConversationVersion get_Default()
+ [m]	XmlDictionaryString get_Namespace()
+ [m]	XmlDictionaryString get_Prefix()
+ [m]	SecureConversationVersion get_WSSecureConversationFeb2005()

f [t] System.ServiceModel.Security.SecurityPolicyVersion
+ [m]	Void .ctor()
+ [m]	String get_Namespace()
+ [m]	String get_Prefix()
+ [m]	SecurityPolicyVersion get_WSSecurityPolicy11()

f [t] System.ServiceModel.Security.SecurityVersion
+ [m]	Void .ctor()
+ [m]	SecurityVersion get_WSSecurity10()
+ [m]	SecurityVersion get_WSSecurity11()

f [t] System.ServiceModel.Security.TrustVersion
+ [m]	Void .ctor()
+ [m]	TrustVersion get_Default()
+ [m]	XmlDictionaryString get_Namespace()
+ [m]	XmlDictionaryString get_Prefix()
+ [m]	TrustVersion get_WSTrustFeb2005()

f [t] System.ServiceModel.Security.Tokens.SecureConversationSecurityTokenParameters
+ [m]	Void .ctor()
+ [m]	Void .ctor(SecurityBindingElement)
+ [m]	SecurityBindingElement get_BootstrapSecurityBindingElement()
+ [m]	Void set_BootstrapSecurityBindingElement(SecurityBindingElement)

f [t] System.ServiceModel.Security.Tokens.SecurityTokenParameters
+ [m]	Void .ctor()
+ [m]	SecurityTokenParameters Clone()

f [t] System.ServiceModel.Security.Tokens.SupportingTokenParameters
+ [m]	Void .ctor()
+ [m]	Collection`1 get_Endorsing()
+ [m]	Collection`1 get_SignedEncrypted()
+ [m]	SupportingTokenParameters Clone()

f [t] System.ServiceModel.Security.Tokens.UserNameSecurityTokenParameters
+ [m]	Void .ctor()

f [t] System.ServiceModel.Channels.LocalClientSecuritySettings
+ [m]	Void .ctor()
+ [m]	TimeSpan get_MaxClockSkew()
+ [m]	Void set_MaxClockSkew(TimeSpan)
+ [m]	TimeSpan get_ReplayWindow()
+ [m]	Void set_ReplayWindow(TimeSpan)
+ [m]	TimeSpan get_TimestampValidityDuration()
+ [m]	Void set_TimestampValidityDuration(TimeSpan)
+ [m]	LocalClientSecuritySettings Clone()

f [t] System.ServiceModel.Channels.SecurityBindingElement
+ [m]	Void .ctor()
- [m]	SupportingTokenParameters get_EndpointSupportingTokenParameters()
+ [m]	Boolean get_IncludeTimestamp()
+ [m]	Void set_IncludeTimestamp(Boolean)
+ [m]	LocalClientSecuritySettings get_LocalClientSettings()
- [m]	MessageSecurityVersion get_MessageSecurityVersion()
- [m]	Void set_MessageSecurityVersion(MessageSecurityVersion)
- [m]	SecurityHeaderLayout get_SecurityHeaderLayout()
- [m]	Void set_SecurityHeaderLayout(SecurityHeaderLayout)
+ [m]	IChannelFactory`1 BuildChannelFactory(BindingContext)
+ [m]	IChannelFactory`1 BuildChannelFactoryCore(BindingContext)
+ [m]	Boolean CanBuildChannelFactory(BindingContext)
- [m]	SecurityBindingElement CreateSecureConversationBindingElement(SecurityBindingElement)
+ [m]	TransportSecurityBindingElement CreateUserNameOverTransportBindingElement()
+ [m]	T GetProperty(BindingContext)
- [m]	String ToString()

f [t] System.ServiceModel.Channels.SecurityHeaderLayout

f [t] System.ServiceModel.Channels.TransportSecurityBindingElement
+ [m]	Void .ctor()
! [m]	IChannelFactory`1 BuildChannelFactoryCore(BindingContext)
+ [m]	BindingElement Clone()
- [m]	T GetProperty(BindingContext)

---------------------------------------
+ [a] System.ServiceProcess.ServiceController.dll
ref: ./netstandard/packages/System.ServiceProcess.ServiceController/ref/netstandard1.4/System.ServiceProcess.ServiceController.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.ServiceProcess.ServiceController.dll

+ [t] System.ServiceProcess.ServiceController
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,String)
! [m]	Boolean get_CanPauseAndContinue()
! [m]	Boolean get_CanShutdown()
! [m]	Boolean get_CanStop()
! [m]	ServiceController[] get_DependentServices()
! [m]	String get_DisplayName()
! [m]	String get_MachineName()
! [m]	SafeHandle get_ServiceHandle()
! [m]	String get_ServiceName()
! [m]	ServiceController[] get_ServicesDependedOn()
! [m]	ServiceType get_ServiceType()
! [m]	ServiceStartMode get_StartType()
! [m]	ServiceControllerStatus get_Status()
! [m]	Void Continue()
! [m]	Void Dispose()
! [m]	Void Dispose(Boolean)
! [m]	ServiceController[] GetDevices()
! [m]	ServiceController[] GetDevices(String)
! [m]	ServiceController[] GetServices()
! [m]	ServiceController[] GetServices(String)
! [m]	Void Pause()
! [m]	Void Refresh()
! [m]	Void Start()
! [m]	Void Start(String[])
! [m]	Void Stop()
! [m]	Void WaitForStatus(ServiceControllerStatus)
! [m]	Void WaitForStatus(ServiceControllerStatus,TimeSpan)

+ [t] System.ServiceProcess.ServiceControllerStatus

+ [t] System.ServiceProcess.ServiceStartMode

+ [t] System.ServiceProcess.ServiceType

+ [t] System.ServiceProcess.TimeoutException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

---------------------------------------
+ [a] System.Text.Encoding.dll
ref: ./netstandard/packages/System.Text.Encoding/ref/netstandard1.3/System.Text.Encoding.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Text.Encoding.dll

f [t] System.Text.Decoder
+ [m]	Void .ctor()
+ [m]	DecoderFallback get_Fallback()
+ [m]	Void set_Fallback(DecoderFallback)
+ [m]	DecoderFallbackBuffer get_FallbackBuffer()
+ [m]	Void Convert(Byte[],Int32,Int32,Char[],Int32,Int32,Boolean,Int32&,Int32&,Boolean&)
+ [m]	Int32 GetCharCount(Byte[],Int32,Int32)
+ [m]	Int32 GetCharCount(Byte[],Int32,Int32,Boolean)
+ [m]	Int32 GetChars(Byte[],Int32,Int32,Char[],Int32)
+ [m]	Int32 GetChars(Byte[],Int32,Int32,Char[],Int32,Boolean)
+ [m]	Void Reset()

f [t] System.Text.DecoderExceptionFallback
+ [m]	Void .ctor()
+ [m]	Int32 get_MaxCharCount()
+ [m]	DecoderFallbackBuffer CreateFallbackBuffer()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()

f [t] System.Text.DecoderFallback
+ [m]	Void .ctor()
+ [m]	DecoderFallback get_ExceptionFallback()
+ [m]	Int32 get_MaxCharCount()
+ [m]	DecoderFallback get_ReplacementFallback()
+ [m]	DecoderFallbackBuffer CreateFallbackBuffer()

f [t] System.Text.DecoderFallbackBuffer
+ [m]	Void .ctor()
+ [m]	Int32 get_Remaining()
+ [m]	Boolean Fallback(Byte[],Int32)
+ [m]	Char GetNextChar()
+ [m]	Boolean MovePrevious()
+ [m]	Void Reset()

f [t] System.Text.DecoderFallbackException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Byte[],Int32)
+ [m]	Void .ctor(String,Exception)
+ [m]	Byte[] get_BytesUnknown()
+ [m]	Int32 get_Index()

f [t] System.Text.DecoderReplacementFallback
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	String get_DefaultString()
+ [m]	Int32 get_MaxCharCount()
+ [m]	DecoderFallbackBuffer CreateFallbackBuffer()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()

f [t] System.Text.Encoder
+ [m]	Void .ctor()
+ [m]	EncoderFallback get_Fallback()
+ [m]	Void set_Fallback(EncoderFallback)
+ [m]	EncoderFallbackBuffer get_FallbackBuffer()
+ [m]	Void Convert(Char[],Int32,Int32,Byte[],Int32,Int32,Boolean,Int32&,Int32&,Boolean&)
+ [m]	Int32 GetByteCount(Char[],Int32,Int32,Boolean)
+ [m]	Int32 GetBytes(Char[],Int32,Int32,Byte[],Int32,Boolean)
+ [m]	Void Reset()

f [t] System.Text.EncoderExceptionFallback
+ [m]	Void .ctor()
+ [m]	Int32 get_MaxCharCount()
+ [m]	EncoderFallbackBuffer CreateFallbackBuffer()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()

f [t] System.Text.EncoderFallback
+ [m]	Void .ctor()
+ [m]	EncoderFallback get_ExceptionFallback()
+ [m]	Int32 get_MaxCharCount()
+ [m]	EncoderFallback get_ReplacementFallback()
+ [m]	EncoderFallbackBuffer CreateFallbackBuffer()

f [t] System.Text.EncoderFallbackBuffer
+ [m]	Void .ctor()
+ [m]	Int32 get_Remaining()
+ [m]	Boolean Fallback(Char,Char,Int32)
+ [m]	Boolean Fallback(Char,Int32)
+ [m]	Char GetNextChar()
+ [m]	Boolean MovePrevious()
+ [m]	Void Reset()

f [t] System.Text.EncoderFallbackException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	Char get_CharUnknown()
+ [m]	Char get_CharUnknownHigh()
+ [m]	Char get_CharUnknownLow()
+ [m]	Int32 get_Index()
+ [m]	Boolean IsUnknownSurrogate()

f [t] System.Text.EncoderReplacementFallback
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	String get_DefaultString()
+ [m]	Int32 get_MaxCharCount()
+ [m]	EncoderFallbackBuffer CreateFallbackBuffer()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()

f [t] System.Text.Encoding
+ [m]	Void .ctor()
+ [m]	Void .ctor(Int32)
+ [m]	Void .ctor(Int32,EncoderFallback,DecoderFallback)
+ [m]	Encoding get_ASCII()
+ [m]	Encoding get_BigEndianUnicode()
+ [m]	Int32 get_CodePage()
+ [m]	DecoderFallback get_DecoderFallback()
+ [m]	EncoderFallback get_EncoderFallback()
+ [m]	String get_EncodingName()
+ [m]	Boolean get_IsSingleByte()
+ [m]	Encoding get_Unicode()
+ [m]	Encoding get_UTF32()
+ [m]	Encoding get_UTF7()
+ [m]	Encoding get_UTF8()
+ [m]	String get_WebName()
+ [m]	Object Clone()
+ [m]	Byte[] Convert(Encoding,Encoding,Byte[])
+ [m]	Byte[] Convert(Encoding,Encoding,Byte[],Int32,Int32)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetByteCount(Char*,Int32)
+ [m]	Int32 GetByteCount(Char[])
+ [m]	Int32 GetByteCount(Char[],Int32,Int32)
+ [m]	Int32 GetByteCount(String)
+ [m]	Int32 GetBytes(Char*,Int32,Byte*,Int32)
+ [m]	Byte[] GetBytes(Char[])
+ [m]	Byte[] GetBytes(Char[],Int32,Int32)
+ [m]	Int32 GetBytes(Char[],Int32,Int32,Byte[],Int32)
+ [m]	Byte[] GetBytes(String)
+ [m]	Int32 GetBytes(String,Int32,Int32,Byte[],Int32)
+ [m]	Int32 GetCharCount(Byte*,Int32)
+ [m]	Int32 GetCharCount(Byte[])
+ [m]	Int32 GetCharCount(Byte[],Int32,Int32)
+ [m]	Int32 GetChars(Byte*,Int32,Char*,Int32)
+ [m]	Char[] GetChars(Byte[])
+ [m]	Char[] GetChars(Byte[],Int32,Int32)
+ [m]	Int32 GetChars(Byte[],Int32,Int32,Char[],Int32)
+ [m]	Decoder GetDecoder()
+ [m]	Encoder GetEncoder()
+ [m]	Encoding GetEncoding(Int32)
+ [m]	Encoding GetEncoding(Int32,EncoderFallback,DecoderFallback)
+ [m]	Encoding GetEncoding(String)
+ [m]	Encoding GetEncoding(String,EncoderFallback,DecoderFallback)
+ [m]	Int32 GetHashCode()
+ [m]	Int32 GetMaxByteCount(Int32)
+ [m]	Int32 GetMaxCharCount(Int32)
+ [m]	Byte[] GetPreamble()
+ [m]	String GetString(Byte*,Int32)
+ [m]	String GetString(Byte[])
+ [m]	String GetString(Byte[],Int32,Int32)
+ [m]	Void RegisterProvider(EncodingProvider)

f [t] System.Text.EncodingProvider
+ [m]	Void .ctor()
+ [m]	Encoding GetEncoding(Int32)
+ [m]	Encoding GetEncoding(Int32,EncoderFallback,DecoderFallback)
+ [m]	Encoding GetEncoding(String)
+ [m]	Encoding GetEncoding(String,EncoderFallback,DecoderFallback)

---------------------------------------
+ [a] System.Text.Encoding.CodePages.dll
ref: ./netstandard/packages/System.Text.Encoding.CodePages/ref/netstandard1.3/System.Text.Encoding.CodePages.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Text.Encoding.CodePages.dll

+ [t] System.Text.CodePagesEncodingProvider
+ [m]	Void .ctor()
! [m]	EncodingProvider get_Instance()

---------------------------------------
+ [a] System.Text.Encoding.Extensions.dll
ref: ./netstandard/packages/System.Text.Encoding.Extensions/ref/netstandard1.3/System.Text.Encoding.Extensions.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Text.Encoding.Extensions.dll

f [t] System.Text.ASCIIEncoding
+ [m]	Void .ctor()
+ [m]	Boolean get_IsSingleByte()
+ [m]	Int32 GetByteCount(Char*,Int32)
+ [m]	Int32 GetByteCount(Char[],Int32,Int32)
+ [m]	Int32 GetByteCount(String)
+ [m]	Int32 GetBytes(Char*,Int32,Byte*,Int32)
+ [m]	Int32 GetBytes(Char[],Int32,Int32,Byte[],Int32)
+ [m]	Int32 GetBytes(String,Int32,Int32,Byte[],Int32)
+ [m]	Int32 GetCharCount(Byte*,Int32)
+ [m]	Int32 GetCharCount(Byte[],Int32,Int32)
+ [m]	Int32 GetChars(Byte*,Int32,Char*,Int32)
+ [m]	Int32 GetChars(Byte[],Int32,Int32,Char[],Int32)
+ [m]	Decoder GetDecoder()
+ [m]	Encoder GetEncoder()
+ [m]	Int32 GetMaxByteCount(Int32)
+ [m]	Int32 GetMaxCharCount(Int32)
+ [m]	String GetString(Byte[],Int32,Int32)

f [t] System.Text.UnicodeEncoding
+ [m]	Void .ctor()
+ [m]	Void .ctor(Boolean,Boolean)
+ [m]	Void .ctor(Boolean,Boolean,Boolean)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetByteCount(Char[],Int32,Int32)
+ [m]	Int32 GetByteCount(String)
+ [m]	Int32 GetBytes(Char[],Int32,Int32,Byte[],Int32)
+ [m]	Int32 GetBytes(String,Int32,Int32,Byte[],Int32)
+ [m]	Int32 GetCharCount(Byte[],Int32,Int32)
+ [m]	Int32 GetChars(Byte[],Int32,Int32,Char[],Int32)
+ [m]	Decoder GetDecoder()
+ [m]	Encoder GetEncoder()
+ [m]	Int32 GetHashCode()
+ [m]	Int32 GetMaxByteCount(Int32)
+ [m]	Int32 GetMaxCharCount(Int32)
+ [m]	Byte[] GetPreamble()
+ [m]	String GetString(Byte[],Int32,Int32)

f [t] System.Text.UTF32Encoding
+ [m]	Void .ctor()
+ [m]	Void .ctor(Boolean,Boolean)
+ [m]	Void .ctor(Boolean,Boolean,Boolean)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetByteCount(Char*,Int32)
+ [m]	Int32 GetByteCount(Char[],Int32,Int32)
+ [m]	Int32 GetByteCount(String)
+ [m]	Int32 GetBytes(Char*,Int32,Byte*,Int32)
+ [m]	Int32 GetBytes(Char[],Int32,Int32,Byte[],Int32)
+ [m]	Int32 GetBytes(String,Int32,Int32,Byte[],Int32)
+ [m]	Int32 GetCharCount(Byte*,Int32)
+ [m]	Int32 GetCharCount(Byte[],Int32,Int32)
+ [m]	Int32 GetChars(Byte*,Int32,Char*,Int32)
+ [m]	Int32 GetChars(Byte[],Int32,Int32,Char[],Int32)
+ [m]	Decoder GetDecoder()
+ [m]	Encoder GetEncoder()
+ [m]	Int32 GetHashCode()
+ [m]	Int32 GetMaxByteCount(Int32)
+ [m]	Int32 GetMaxCharCount(Int32)
+ [m]	Byte[] GetPreamble()
+ [m]	String GetString(Byte[],Int32,Int32)

f [t] System.Text.UTF7Encoding
+ [m]	Void .ctor()
+ [m]	Void .ctor(Boolean)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetByteCount(Char*,Int32)
+ [m]	Int32 GetByteCount(Char[],Int32,Int32)
+ [m]	Int32 GetByteCount(String)
+ [m]	Int32 GetBytes(Char*,Int32,Byte*,Int32)
+ [m]	Int32 GetBytes(Char[],Int32,Int32,Byte[],Int32)
+ [m]	Int32 GetBytes(String,Int32,Int32,Byte[],Int32)
+ [m]	Int32 GetCharCount(Byte*,Int32)
+ [m]	Int32 GetCharCount(Byte[],Int32,Int32)
+ [m]	Int32 GetChars(Byte*,Int32,Char*,Int32)
+ [m]	Int32 GetChars(Byte[],Int32,Int32,Char[],Int32)
+ [m]	Decoder GetDecoder()
+ [m]	Encoder GetEncoder()
+ [m]	Int32 GetHashCode()
+ [m]	Int32 GetMaxByteCount(Int32)
+ [m]	Int32 GetMaxCharCount(Int32)
+ [m]	String GetString(Byte[],Int32,Int32)

f [t] System.Text.UTF8Encoding
+ [m]	Void .ctor()
+ [m]	Void .ctor(Boolean)
+ [m]	Void .ctor(Boolean,Boolean)
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetByteCount(Char*,Int32)
+ [m]	Int32 GetByteCount(Char[],Int32,Int32)
+ [m]	Int32 GetByteCount(String)
+ [m]	Int32 GetBytes(Char*,Int32,Byte*,Int32)
+ [m]	Int32 GetBytes(Char[],Int32,Int32,Byte[],Int32)
+ [m]	Int32 GetBytes(String,Int32,Int32,Byte[],Int32)
+ [m]	Int32 GetCharCount(Byte*,Int32)
+ [m]	Int32 GetCharCount(Byte[],Int32,Int32)
+ [m]	Int32 GetChars(Byte*,Int32,Char*,Int32)
+ [m]	Int32 GetChars(Byte[],Int32,Int32,Char[],Int32)
+ [m]	Decoder GetDecoder()
+ [m]	Encoder GetEncoder()
+ [m]	Int32 GetHashCode()
+ [m]	Int32 GetMaxByteCount(Int32)
+ [m]	Int32 GetMaxCharCount(Int32)
+ [m]	Byte[] GetPreamble()
+ [m]	String GetString(Byte[],Int32,Int32)

---------------------------------------
+ [a] System.Text.RegularExpressions.dll
ref: ./netstandard/packages/System.Text.RegularExpressions/ref/netstandard1.6/System.Text.RegularExpressions.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Text.RegularExpressions.dll

f [t] System.Text.RegularExpressions.Capture
- [m]	Void .ctor()
+ [m]	Int32 get_Index()
+ [m]	Int32 get_Length()
+ [m]	String get_Value()
+ [m]	String ToString()

f [t] System.Text.RegularExpressions.CaptureCollection
- [m]	Void .ctor()
+ [m]	Int32 get_Count()
+ [m]	Capture get_Item(Int32)
- [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
- [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	IEnumerator GetEnumerator()
- [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)

f [t] System.Text.RegularExpressions.Group
- [m]	Void .ctor()
+ [m]	CaptureCollection get_Captures()
+ [m]	Boolean get_Success()

f [t] System.Text.RegularExpressions.GroupCollection
- [m]	Void .ctor()
+ [m]	Int32 get_Count()
+ [m]	Group get_Item(Int32)
+ [m]	Group get_Item(String)
- [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
- [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	IEnumerator GetEnumerator()
- [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)

f [t] System.Text.RegularExpressions.Match
- [m]	Void .ctor()
+ [m]	Match get_Empty()
+ [m]	GroupCollection get_Groups()
+ [m]	Match NextMatch()
+ [m]	String Result(String)

f [t] System.Text.RegularExpressions.MatchCollection
- [m]	Void .ctor()
+ [m]	Int32 get_Count()
+ [m]	Match get_Item(Int32)
- [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
- [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	IEnumerator GetEnumerator()
- [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)

f [t] System.Text.RegularExpressions.MatchEvaluator
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	String Invoke(Match)
+ [m]	IAsyncResult BeginInvoke(Match,AsyncCallback,Object)
+ [m]	String EndInvoke(IAsyncResult)

f [t] System.Text.RegularExpressions.RegexRunnerFactory
+ [m]	Void .ctor()
+ [m]	RegexRunner CreateInstance()

f [t] System.Text.RegularExpressions.Regex
- [m]	IDictionary get_Caps()
- [m]	Void set_Caps(IDictionary)
- [m]	IDictionary get_CapNames()
- [m]	Void set_CapNames(IDictionary)
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,RegexOptions)
+ [m]	Void .ctor(String,RegexOptions,TimeSpan)
+ [m]	Int32 get_CacheSize()
+ [m]	Void set_CacheSize(Int32)
+ [m]	TimeSpan get_MatchTimeout()
+ [m]	RegexOptions get_Options()
+ [m]	Boolean get_RightToLeft()
+ [m]	Void InitializeReferences()
+ [m]	Void ValidateMatchTimeout(TimeSpan)
+ [m]	String Escape(String)
+ [m]	String[] GetGroupNames()
+ [m]	Int32[] GetGroupNumbers()
+ [m]	String GroupNameFromNumber(Int32)
+ [m]	Int32 GroupNumberFromName(String)
+ [m]	Boolean IsMatch(String)
+ [m]	Boolean IsMatch(String,Int32)
+ [m]	Boolean IsMatch(String,String)
+ [m]	Boolean IsMatch(String,String,RegexOptions)
+ [m]	Boolean IsMatch(String,String,RegexOptions,TimeSpan)
+ [m]	Match Match(String)
+ [m]	Match Match(String,Int32)
+ [m]	Match Match(String,Int32,Int32)
+ [m]	Match Match(String,String)
+ [m]	Match Match(String,String,RegexOptions)
+ [m]	Match Match(String,String,RegexOptions,TimeSpan)
+ [m]	MatchCollection Matches(String)
+ [m]	MatchCollection Matches(String,Int32)
+ [m]	MatchCollection Matches(String,String)
+ [m]	MatchCollection Matches(String,String,RegexOptions)
+ [m]	MatchCollection Matches(String,String,RegexOptions,TimeSpan)
+ [m]	String Replace(String,String)
+ [m]	String Replace(String,String,Int32)
+ [m]	String Replace(String,String,Int32,Int32)
+ [m]	String Replace(String,String,String)
+ [m]	String Replace(String,String,String,RegexOptions)
+ [m]	String Replace(String,String,String,RegexOptions,TimeSpan)
+ [m]	String Replace(String,String,MatchEvaluator)
+ [m]	String Replace(String,String,MatchEvaluator,RegexOptions)
+ [m]	String Replace(String,String,MatchEvaluator,RegexOptions,TimeSpan)
+ [m]	String Replace(String,MatchEvaluator)
+ [m]	String Replace(String,MatchEvaluator,Int32)
+ [m]	String Replace(String,MatchEvaluator,Int32,Int32)
+ [m]	String[] Split(String)
+ [m]	String[] Split(String,Int32)
+ [m]	String[] Split(String,Int32,Int32)
+ [m]	String[] Split(String,String)
+ [m]	String[] Split(String,String,RegexOptions)
+ [m]	String[] Split(String,String,RegexOptions,TimeSpan)
+ [m]	String ToString()
+ [m]	String Unescape(String)

f [t] System.Text.RegularExpressions.RegexMatchTimeoutException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	Void .ctor(String,String,TimeSpan)
+ [m]	String get_Input()
+ [m]	TimeSpan get_MatchTimeout()
+ [m]	String get_Pattern()

f [t] System.Text.RegularExpressions.RegexOptions

f [t] System.Text.RegularExpressions.RegexRunner
+ [m]	Void .ctor()
+ [m]	Void Capture(Int32,Int32,Int32)
+ [m]	Boolean CharInClass(Char,String)
+ [m]	Boolean CharInSet(Char,String,String)
+ [m]	Void CheckTimeout()
+ [m]	Void Crawl(Int32)
+ [m]	Int32 Crawlpos()
+ [m]	Void DoubleCrawl()
+ [m]	Void DoubleStack()
+ [m]	Void DoubleTrack()
+ [m]	Void EnsureStorage()
+ [m]	Boolean FindFirstChar()
+ [m]	Void Go()
+ [m]	Void InitTrackCount()
+ [m]	Boolean IsBoundary(Int32,Int32,Int32)
+ [m]	Boolean IsECMABoundary(Int32,Int32,Int32)
+ [m]	Boolean IsMatched(Int32)
+ [m]	Int32 MatchIndex(Int32)
+ [m]	Int32 MatchLength(Int32)
+ [m]	Int32 Popcrawl()
+ [m]	Match Scan(Regex,String,Int32,Int32,Int32,Int32,Boolean)
+ [m]	Match Scan(Regex,String,Int32,Int32,Int32,Int32,Boolean,TimeSpan)
+ [m]	Void TransferCapture(Int32,Int32,Int32,Int32)
+ [m]	Void Uncapture()

---------------------------------------
+ [a] System.Threading.dll
ref: ./netstandard/packages/System.Threading/ref/netstandard1.3/System.Threading.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Threading.dll

f [t] System.Threading.AbandonedMutexException
+ [m]	Void .ctor()
+ [m]	Void .ctor(Int32,WaitHandle)
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	Void .ctor(String,Exception,Int32,WaitHandle)
+ [m]	Void .ctor(String,Int32,WaitHandle)
+ [m]	Mutex get_Mutex()
+ [m]	Int32 get_MutexIndex()

f [t] System.Threading.AsyncLocal`1
+ [m]	Void .ctor()
+ [m]	Void .ctor(Action`1)
! [m]	T get_Value()
! [m]	Void set_Value(T)

f [t] System.Threading.AsyncLocalValueChangedArgs`1
+ [m]	T get_CurrentValue()
+ [m]	T get_PreviousValue()
+ [m]	Boolean get_ThreadContextChanged()

f [t] System.Threading.AutoResetEvent
+ [m]	Void .ctor(Boolean)

f [t] System.Threading.Barrier
+ [m]	Void .ctor(Int32)
+ [m]	Void .ctor(Int32,Action`1)
+ [m]	Int64 get_CurrentPhaseNumber()
+ [m]	Int32 get_ParticipantCount()
+ [m]	Int32 get_ParticipantsRemaining()
+ [m]	Int64 AddParticipant()
+ [m]	Int64 AddParticipants(Int32)
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Void RemoveParticipant()
+ [m]	Void RemoveParticipants(Int32)
+ [m]	Void SignalAndWait()
+ [m]	Boolean SignalAndWait(Int32)
+ [m]	Boolean SignalAndWait(Int32,CancellationToken)
+ [m]	Void SignalAndWait(CancellationToken)
+ [m]	Boolean SignalAndWait(TimeSpan)
+ [m]	Boolean SignalAndWait(TimeSpan,CancellationToken)

f [t] System.Threading.BarrierPostPhaseException
+ [m]	Void .ctor()
+ [m]	Void .ctor(Exception)
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Threading.ContextCallback
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object)
+ [m]	IAsyncResult BeginInvoke(Object,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Threading.CountdownEvent
+ [m]	Void .ctor(Int32)
+ [m]	Int32 get_CurrentCount()
+ [m]	Int32 get_InitialCount()
+ [m]	Boolean get_IsSet()
+ [m]	WaitHandle get_WaitHandle()
+ [m]	Void AddCount()
+ [m]	Void AddCount(Int32)
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Void Reset()
+ [m]	Void Reset(Int32)
+ [m]	Boolean Signal()
+ [m]	Boolean Signal(Int32)
+ [m]	Boolean TryAddCount()
+ [m]	Boolean TryAddCount(Int32)
+ [m]	Void Wait()
+ [m]	Boolean Wait(Int32)
+ [m]	Boolean Wait(Int32,CancellationToken)
+ [m]	Void Wait(CancellationToken)
+ [m]	Boolean Wait(TimeSpan)
+ [m]	Boolean Wait(TimeSpan,CancellationToken)

f [t] System.Threading.EventResetMode

f [t] System.Threading.EventWaitHandle
+ [m]	Void .ctor(Boolean,EventResetMode)
+ [m]	Void .ctor(Boolean,EventResetMode,String)
+ [m]	Void .ctor(Boolean,EventResetMode,String,Boolean&)
+ [m]	EventWaitHandle OpenExisting(String)
+ [m]	Boolean Reset()
+ [m]	Boolean Set()
+ [m]	Boolean TryOpenExisting(String,EventWaitHandle&)

f [t] System.Threading.ExecutionContext
+ [m]	Void .ctor()
+ [m]	ExecutionContext Capture()
+ [m]	Void Run(ExecutionContext,ContextCallback,Object)

f [t] System.Threading.Interlocked
+ [m]	Int32 Add(Int32&,Int32)
+ [m]	Int64 Add(Int64&,Int64)
+ [m]	Double CompareExchange(Double&,Double,Double)
+ [m]	Int32 CompareExchange(Int32&,Int32,Int32)
+ [m]	Int64 CompareExchange(Int64&,Int64,Int64)
+ [m]	IntPtr CompareExchange(IntPtr&,IntPtr,IntPtr)
+ [m]	Object CompareExchange(Object&,Object,Object)
+ [m]	Single CompareExchange(Single&,Single,Single)
+ [m]	T CompareExchange(T&,T,T)
+ [m]	Int32 Decrement(Int32&)
+ [m]	Int64 Decrement(Int64&)
+ [m]	Double Exchange(Double&,Double)
+ [m]	Int32 Exchange(Int32&,Int32)
+ [m]	Int64 Exchange(Int64&,Int64)
+ [m]	IntPtr Exchange(IntPtr&,IntPtr)
+ [m]	Object Exchange(Object&,Object)
+ [m]	Single Exchange(Single&,Single)
+ [m]	T Exchange(T&,T)
+ [m]	Int32 Increment(Int32&)
+ [m]	Int64 Increment(Int64&)
+ [m]	Void MemoryBarrier()
+ [m]	Int64 Read(Int64&)

f [t] System.Threading.LazyInitializer
+ [m]	T EnsureInitialized(T&)
+ [m]	T EnsureInitialized(T&,Boolean&,Object&)
+ [m]	T EnsureInitialized(T&,Boolean&,Object&,Func`1)
+ [m]	T EnsureInitialized(T&,Func`1)

f [t] System.Threading.LockRecursionException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Threading.LockRecursionPolicy

f [t] System.Threading.ManualResetEvent
+ [m]	Void .ctor(Boolean)

f [t] System.Threading.ManualResetEventSlim
+ [m]	Void .ctor()
+ [m]	Void .ctor(Boolean)
+ [m]	Void .ctor(Boolean,Int32)
+ [m]	Boolean get_IsSet()
+ [m]	Int32 get_SpinCount()
+ [m]	WaitHandle get_WaitHandle()
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Void Reset()
+ [m]	Void Set()
+ [m]	Void Wait()
+ [m]	Boolean Wait(Int32)
+ [m]	Boolean Wait(Int32,CancellationToken)
+ [m]	Void Wait(CancellationToken)
+ [m]	Boolean Wait(TimeSpan)
+ [m]	Boolean Wait(TimeSpan,CancellationToken)

f [t] System.Threading.Monitor
+ [m]	Void Enter(Object)
+ [m]	Void Enter(Object,Boolean&)
+ [m]	Void Exit(Object)
+ [m]	Boolean IsEntered(Object)
+ [m]	Void Pulse(Object)
+ [m]	Void PulseAll(Object)
+ [m]	Boolean TryEnter(Object)
+ [m]	Void TryEnter(Object,Boolean&)
+ [m]	Boolean TryEnter(Object,Int32)
+ [m]	Void TryEnter(Object,Int32,Boolean&)
+ [m]	Boolean TryEnter(Object,TimeSpan)
+ [m]	Void TryEnter(Object,TimeSpan,Boolean&)
+ [m]	Boolean Wait(Object)
+ [m]	Boolean Wait(Object,Int32)
+ [m]	Boolean Wait(Object,TimeSpan)

f [t] System.Threading.Mutex
+ [m]	Void .ctor()
+ [m]	Void .ctor(Boolean)
+ [m]	Void .ctor(Boolean,String)
+ [m]	Void .ctor(Boolean,String,Boolean&)
+ [m]	Mutex OpenExisting(String)
+ [m]	Void ReleaseMutex()
+ [m]	Boolean TryOpenExisting(String,Mutex&)

f [t] System.Threading.ReaderWriterLockSlim
+ [m]	Void .ctor()
+ [m]	Void .ctor(LockRecursionPolicy)
+ [m]	Int32 get_CurrentReadCount()
+ [m]	Boolean get_IsReadLockHeld()
+ [m]	Boolean get_IsUpgradeableReadLockHeld()
+ [m]	Boolean get_IsWriteLockHeld()
+ [m]	LockRecursionPolicy get_RecursionPolicy()
+ [m]	Int32 get_RecursiveReadCount()
+ [m]	Int32 get_RecursiveUpgradeCount()
+ [m]	Int32 get_RecursiveWriteCount()
+ [m]	Int32 get_WaitingReadCount()
+ [m]	Int32 get_WaitingUpgradeCount()
+ [m]	Int32 get_WaitingWriteCount()
+ [m]	Void Dispose()
+ [m]	Void EnterReadLock()
+ [m]	Void EnterUpgradeableReadLock()
+ [m]	Void EnterWriteLock()
+ [m]	Void ExitReadLock()
+ [m]	Void ExitUpgradeableReadLock()
+ [m]	Void ExitWriteLock()
+ [m]	Boolean TryEnterReadLock(Int32)
+ [m]	Boolean TryEnterReadLock(TimeSpan)
+ [m]	Boolean TryEnterUpgradeableReadLock(Int32)
+ [m]	Boolean TryEnterUpgradeableReadLock(TimeSpan)
+ [m]	Boolean TryEnterWriteLock(Int32)
+ [m]	Boolean TryEnterWriteLock(TimeSpan)

f [t] System.Threading.Semaphore
+ [m]	Void .ctor(Int32,Int32)
+ [m]	Void .ctor(Int32,Int32,String)
+ [m]	Void .ctor(Int32,Int32,String,Boolean&)
+ [m]	Semaphore OpenExisting(String)
+ [m]	Int32 Release()
+ [m]	Int32 Release(Int32)
+ [m]	Boolean TryOpenExisting(String,Semaphore&)

f [t] System.Threading.SemaphoreFullException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Threading.SemaphoreSlim
+ [m]	Void .ctor(Int32)
+ [m]	Void .ctor(Int32,Int32)
+ [m]	WaitHandle get_AvailableWaitHandle()
+ [m]	Int32 get_CurrentCount()
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Int32 Release()
+ [m]	Int32 Release(Int32)
+ [m]	Void Wait()
+ [m]	Boolean Wait(Int32)
+ [m]	Boolean Wait(Int32,CancellationToken)
+ [m]	Void Wait(CancellationToken)
+ [m]	Boolean Wait(TimeSpan)
+ [m]	Boolean Wait(TimeSpan,CancellationToken)
+ [m]	Task WaitAsync()
+ [m]	Task`1 WaitAsync(Int32)
+ [m]	Task`1 WaitAsync(Int32,CancellationToken)
+ [m]	Task WaitAsync(CancellationToken)
+ [m]	Task`1 WaitAsync(TimeSpan)
+ [m]	Task`1 WaitAsync(TimeSpan,CancellationToken)

f [t] System.Threading.SendOrPostCallback
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object)
+ [m]	IAsyncResult BeginInvoke(Object,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Threading.SpinLock
+ [m]	Void .ctor(Boolean)
+ [m]	Boolean get_IsHeld()
+ [m]	Boolean get_IsHeldByCurrentThread()
+ [m]	Boolean get_IsThreadOwnerTrackingEnabled()
+ [m]	Void Enter(Boolean&)
+ [m]	Void Exit()
+ [m]	Void Exit(Boolean)
+ [m]	Void TryEnter(Boolean&)
+ [m]	Void TryEnter(Int32,Boolean&)
+ [m]	Void TryEnter(TimeSpan,Boolean&)

f [t] System.Threading.SpinWait
+ [m]	Int32 get_Count()
+ [m]	Boolean get_NextSpinWillYield()
+ [m]	Void Reset()
+ [m]	Void SpinOnce()
+ [m]	Void SpinUntil(Func`1)
+ [m]	Boolean SpinUntil(Func`1,Int32)
+ [m]	Boolean SpinUntil(Func`1,TimeSpan)

f [t] System.Threading.SynchronizationContext
+ [m]	Void .ctor()
+ [m]	SynchronizationContext get_Current()
+ [m]	SynchronizationContext CreateCopy()
+ [m]	Void OperationCompleted()
+ [m]	Void OperationStarted()
+ [m]	Void Post(SendOrPostCallback,Object)
+ [m]	Void Send(SendOrPostCallback,Object)
+ [m]	Void SetSynchronizationContext(SynchronizationContext)

f [t] System.Threading.SynchronizationLockException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Threading.ThreadLocal`1
+ [m]	Void .ctor()
+ [m]	Void .ctor(Boolean)
+ [m]	Void .ctor(Func`1)
+ [m]	Void .ctor(Func`1,Boolean)
+ [m]	Boolean get_IsValueCreated()
+ [m]	T get_Value()
+ [m]	Void set_Value(T)
+ [m]	IList`1 get_Values()
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Void Finalize()
+ [m]	String ToString()

f [t] System.Threading.Volatile
+ [m]	Boolean Read(Boolean&)
+ [m]	Byte Read(Byte&)
+ [m]	Double Read(Double&)
+ [m]	Int16 Read(Int16&)
+ [m]	Int32 Read(Int32&)
+ [m]	Int64 Read(Int64&)
+ [m]	IntPtr Read(IntPtr&)
+ [m]	SByte Read(SByte&)
+ [m]	Single Read(Single&)
+ [m]	UInt16 Read(UInt16&)
+ [m]	UInt32 Read(UInt32&)
+ [m]	UInt64 Read(UInt64&)
+ [m]	UIntPtr Read(UIntPtr&)
+ [m]	T Read(T&)
+ [m]	Void Write(Boolean&,Boolean)
+ [m]	Void Write(Byte&,Byte)
+ [m]	Void Write(Double&,Double)
+ [m]	Void Write(Int16&,Int16)
+ [m]	Void Write(Int32&,Int32)
+ [m]	Void Write(Int64&,Int64)
+ [m]	Void Write(IntPtr&,IntPtr)
+ [m]	Void Write(SByte&,SByte)
+ [m]	Void Write(Single&,Single)
+ [m]	Void Write(UInt16&,UInt16)
+ [m]	Void Write(UInt32&,UInt32)
+ [m]	Void Write(UInt64&,UInt64)
+ [m]	Void Write(UIntPtr&,UIntPtr)
+ [m]	Void Write(T&,T)

f [t] System.Threading.WaitHandleCannotBeOpenedException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

---------------------------------------
+ [a] System.Threading.AccessControl.dll
ref: ./netstandard/packages/System.Threading.AccessControl/ref/netstandard1.3/System.Threading.AccessControl.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Threading.AccessControl.dll

+ [t] System.Threading.ThreadingAclExtensions
! [m]	EventWaitHandleSecurity GetAccessControl(EventWaitHandle)
! [m]	MutexSecurity GetAccessControl(Mutex)
! [m]	SemaphoreSecurity GetAccessControl(Semaphore)
! [m]	Void SetAccessControl(EventWaitHandle,EventWaitHandleSecurity)
! [m]	Void SetAccessControl(Mutex,MutexSecurity)
! [m]	Void SetAccessControl(Semaphore,SemaphoreSecurity)

f [t] System.Security.AccessControl.EventWaitHandleAccessRule
+ [m]	Void .ctor(IdentityReference,EventWaitHandleRights,AccessControlType)
+ [m]	Void .ctor(String,EventWaitHandleRights,AccessControlType)
+ [m]	EventWaitHandleRights get_EventWaitHandleRights()

f [t] System.Security.AccessControl.EventWaitHandleAuditRule
+ [m]	Void .ctor(IdentityReference,EventWaitHandleRights,AuditFlags)
+ [m]	EventWaitHandleRights get_EventWaitHandleRights()

f [t] System.Security.AccessControl.MutexAccessRule
+ [m]	Void .ctor(IdentityReference,MutexRights,AccessControlType)
+ [m]	Void .ctor(String,MutexRights,AccessControlType)
+ [m]	MutexRights get_MutexRights()

f [t] System.Security.AccessControl.MutexAuditRule
+ [m]	Void .ctor(IdentityReference,MutexRights,AuditFlags)
+ [m]	MutexRights get_MutexRights()

f [t] System.Security.AccessControl.MutexRights

f [t] System.Security.AccessControl.MutexSecurity
+ [m]	Void .ctor()
+ [m]	Void .ctor(String,AccessControlSections)
+ [m]	Type get_AccessRightType()
+ [m]	Type get_AccessRuleType()
+ [m]	Type get_AuditRuleType()
+ [m]	AccessRule AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
+ [m]	Void AddAccessRule(MutexAccessRule)
+ [m]	Void AddAuditRule(MutexAuditRule)
+ [m]	AuditRule AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
+ [m]	Boolean RemoveAccessRule(MutexAccessRule)
+ [m]	Void RemoveAccessRuleAll(MutexAccessRule)
+ [m]	Void RemoveAccessRuleSpecific(MutexAccessRule)
+ [m]	Boolean RemoveAuditRule(MutexAuditRule)
+ [m]	Void RemoveAuditRuleAll(MutexAuditRule)
+ [m]	Void RemoveAuditRuleSpecific(MutexAuditRule)
+ [m]	Void ResetAccessRule(MutexAccessRule)
+ [m]	Void SetAccessRule(MutexAccessRule)
+ [m]	Void SetAuditRule(MutexAuditRule)

f [t] System.Security.AccessControl.SemaphoreAccessRule
+ [m]	Void .ctor(IdentityReference,SemaphoreRights,AccessControlType)
+ [m]	Void .ctor(String,SemaphoreRights,AccessControlType)
+ [m]	SemaphoreRights get_SemaphoreRights()

f [t] System.Security.AccessControl.SemaphoreAuditRule
+ [m]	Void .ctor(IdentityReference,SemaphoreRights,AuditFlags)
+ [m]	SemaphoreRights get_SemaphoreRights()

f [t] System.Security.AccessControl.SemaphoreRights

f [t] System.Security.AccessControl.SemaphoreSecurity
+ [m]	Void .ctor()
+ [m]	Void .ctor(String,AccessControlSections)
+ [m]	Type get_AccessRightType()
+ [m]	Type get_AccessRuleType()
+ [m]	Type get_AuditRuleType()
+ [m]	AccessRule AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
+ [m]	Void AddAccessRule(SemaphoreAccessRule)
+ [m]	Void AddAuditRule(SemaphoreAuditRule)
+ [m]	AuditRule AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
+ [m]	Boolean RemoveAccessRule(SemaphoreAccessRule)
+ [m]	Void RemoveAccessRuleAll(SemaphoreAccessRule)
+ [m]	Void RemoveAccessRuleSpecific(SemaphoreAccessRule)
+ [m]	Boolean RemoveAuditRule(SemaphoreAuditRule)
+ [m]	Void RemoveAuditRuleAll(SemaphoreAuditRule)
+ [m]	Void RemoveAuditRuleSpecific(SemaphoreAuditRule)
+ [m]	Void ResetAccessRule(SemaphoreAccessRule)
+ [m]	Void SetAccessRule(SemaphoreAccessRule)
+ [m]	Void SetAuditRule(SemaphoreAuditRule)

f [t] System.Security.AccessControl.EventWaitHandleRights

f [t] System.Security.AccessControl.EventWaitHandleSecurity
+ [m]	Void .ctor()
+ [m]	Type get_AccessRightType()
+ [m]	Type get_AccessRuleType()
+ [m]	Type get_AuditRuleType()
+ [m]	AccessRule AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
+ [m]	Void AddAccessRule(EventWaitHandleAccessRule)
+ [m]	Void AddAuditRule(EventWaitHandleAuditRule)
+ [m]	AuditRule AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
+ [m]	Boolean RemoveAccessRule(EventWaitHandleAccessRule)
+ [m]	Void RemoveAccessRuleAll(EventWaitHandleAccessRule)
+ [m]	Void RemoveAccessRuleSpecific(EventWaitHandleAccessRule)
+ [m]	Boolean RemoveAuditRule(EventWaitHandleAuditRule)
+ [m]	Void RemoveAuditRuleAll(EventWaitHandleAuditRule)
+ [m]	Void RemoveAuditRuleSpecific(EventWaitHandleAuditRule)
+ [m]	Void ResetAccessRule(EventWaitHandleAccessRule)
+ [m]	Void SetAccessRule(EventWaitHandleAccessRule)
+ [m]	Void SetAuditRule(EventWaitHandleAuditRule)

---------------------------------------
+ [a] System.Threading.Overlapped.dll
ref: ./netstandard/packages/System.Threading.Overlapped/ref/netstandard1.3/System.Threading.Overlapped.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Threading.Overlapped.dll

f [t] System.Threading.IOCompletionCallback
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(UInt32,UInt32,NativeOverlapped*)
+ [m]	IAsyncResult BeginInvoke(UInt32,UInt32,NativeOverlapped*,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Threading.NativeOverlapped

+ [t] System.Threading.PreAllocatedOverlapped
+ [m]	Void .ctor(IOCompletionCallback,Object,Object)
+ [m]	Void Dispose()

+ [t] System.Threading.ThreadPoolBoundHandle
- [m]	Void .ctor()
+ [m]	SafeHandle get_Handle()
+ [m]	NativeOverlapped* AllocateNativeOverlapped(IOCompletionCallback,Object,Object)
+ [m]	NativeOverlapped* AllocateNativeOverlapped(PreAllocatedOverlapped)
+ [m]	ThreadPoolBoundHandle BindHandle(SafeHandle)
+ [m]	Void Dispose()
+ [m]	Void FreeNativeOverlapped(NativeOverlapped*)
+ [m]	Object GetNativeOverlappedState(NativeOverlapped*)

---------------------------------------
+ [a] System.Threading.Tasks.dll
ref: ./netstandard/packages/System.Threading.Tasks/ref/netstandard1.3/System.Threading.Tasks.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Threading.Tasks.dll

f [t] System.AggregateException
+ [m]	Void .ctor()
+ [m]	Void .ctor(IEnumerable`1)
+ [m]	Void .ctor(Exception[])
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,IEnumerable`1)
+ [m]	Void .ctor(String,Exception)
+ [m]	Void .ctor(String,Exception[])
+ [m]	ReadOnlyCollection`1 get_InnerExceptions()
+ [m]	AggregateException Flatten()
+ [m]	Exception GetBaseException()
+ [m]	Void Handle(Func`2)
+ [m]	String ToString()

f [t] System.OperationCanceledException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	Void .ctor(String,Exception,CancellationToken)
+ [m]	Void .ctor(String,CancellationToken)
+ [m]	Void .ctor(CancellationToken)
+ [m]	CancellationToken get_CancellationToken()

f [t] System.Threading.CancellationToken
+ [m]	Void .ctor(Boolean)
+ [m]	Boolean get_CanBeCanceled()
+ [m]	Boolean get_IsCancellationRequested()
+ [m]	CancellationToken get_None()
+ [m]	WaitHandle get_WaitHandle()
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(CancellationToken)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(CancellationToken,CancellationToken)
+ [m]	Boolean op_Inequality(CancellationToken,CancellationToken)
+ [m]	CancellationTokenRegistration Register(Action)
+ [m]	CancellationTokenRegistration Register(Action,Boolean)
+ [m]	CancellationTokenRegistration Register(Action`1,Object)
+ [m]	CancellationTokenRegistration Register(Action`1,Object,Boolean)
+ [m]	Void ThrowIfCancellationRequested()

f [t] System.Threading.CancellationTokenRegistration
+ [m]	Void Dispose()
+ [m]	Boolean Equals(Object)
+ [m]	Boolean Equals(CancellationTokenRegistration)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(CancellationTokenRegistration,CancellationTokenRegistration)
+ [m]	Boolean op_Inequality(CancellationTokenRegistration,CancellationTokenRegistration)

f [t] System.Threading.CancellationTokenSource
+ [m]	Void .ctor()
+ [m]	Void .ctor(Int32)
+ [m]	Void .ctor(TimeSpan)
+ [m]	Boolean get_IsCancellationRequested()
+ [m]	CancellationToken get_Token()
+ [m]	Void Cancel()
+ [m]	Void Cancel(Boolean)
+ [m]	Void CancelAfter(Int32)
+ [m]	Void CancelAfter(TimeSpan)
+ [m]	CancellationTokenSource CreateLinkedTokenSource(CancellationToken,CancellationToken)
+ [m]	CancellationTokenSource CreateLinkedTokenSource(CancellationToken[])
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)

f [t] System.Threading.Tasks.ConcurrentExclusiveSchedulerPair
+ [m]	Void .ctor()
+ [m]	Void .ctor(TaskScheduler)
+ [m]	Void .ctor(TaskScheduler,Int32)
+ [m]	Void .ctor(TaskScheduler,Int32,Int32)
+ [m]	Task get_Completion()
+ [m]	TaskScheduler get_ConcurrentScheduler()
+ [m]	TaskScheduler get_ExclusiveScheduler()
+ [m]	Void Complete()

f [t] System.Threading.Tasks.Task
+ [m]	Void .ctor(Action)
+ [m]	Void .ctor(Action,CancellationToken)
+ [m]	Void .ctor(Action,CancellationToken,TaskCreationOptions)
+ [m]	Void .ctor(Action,TaskCreationOptions)
+ [m]	Void .ctor(Action`1,Object)
+ [m]	Void .ctor(Action`1,Object,CancellationToken)
+ [m]	Void .ctor(Action`1,Object,CancellationToken,TaskCreationOptions)
+ [m]	Void .ctor(Action`1,Object,TaskCreationOptions)
+ [m]	Object get_AsyncState()
+ [m]	Task get_CompletedTask()
+ [m]	TaskCreationOptions get_CreationOptions()
+ [m]	Nullable`1 get_CurrentId()
+ [m]	AggregateException get_Exception()
+ [m]	TaskFactory get_Factory()
+ [m]	Int32 get_Id()
+ [m]	Boolean get_IsCanceled()
+ [m]	Boolean get_IsCompleted()
+ [m]	Boolean get_IsFaulted()
+ [m]	TaskStatus get_Status()
+ [m]	WaitHandle System.IAsyncResult.get_AsyncWaitHandle()
+ [m]	Boolean System.IAsyncResult.get_CompletedSynchronously()
+ [m]	ConfiguredTaskAwaitable ConfigureAwait(Boolean)
+ [m]	Task ContinueWith(Action`2,Object)
+ [m]	Task ContinueWith(Action`2,Object,CancellationToken)
+ [m]	Task ContinueWith(Action`2,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)
+ [m]	Task ContinueWith(Action`2,Object,TaskContinuationOptions)
+ [m]	Task ContinueWith(Action`2,Object,TaskScheduler)
+ [m]	Task ContinueWith(Action`1)
+ [m]	Task ContinueWith(Action`1,CancellationToken)
+ [m]	Task ContinueWith(Action`1,CancellationToken,TaskContinuationOptions,TaskScheduler)
+ [m]	Task ContinueWith(Action`1,TaskContinuationOptions)
+ [m]	Task ContinueWith(Action`1,TaskScheduler)
+ [m]	Task`1 ContinueWith(Func`2)
+ [m]	Task`1 ContinueWith(Func`2,CancellationToken)
+ [m]	Task`1 ContinueWith(Func`2,CancellationToken,TaskContinuationOptions,TaskScheduler)
+ [m]	Task`1 ContinueWith(Func`2,TaskContinuationOptions)
+ [m]	Task`1 ContinueWith(Func`2,TaskScheduler)
+ [m]	Task`1 ContinueWith(Func`3,Object)
+ [m]	Task`1 ContinueWith(Func`3,Object,CancellationToken)
+ [m]	Task`1 ContinueWith(Func`3,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)
+ [m]	Task`1 ContinueWith(Func`3,Object,TaskContinuationOptions)
+ [m]	Task`1 ContinueWith(Func`3,Object,TaskScheduler)
+ [m]	Task Delay(Int32)
+ [m]	Task Delay(Int32,CancellationToken)
+ [m]	Task Delay(TimeSpan)
+ [m]	Task Delay(TimeSpan,CancellationToken)
+ [m]	Task FromCanceled(CancellationToken)
+ [m]	Task`1 FromCanceled(CancellationToken)
+ [m]	Task FromException(Exception)
+ [m]	Task`1 FromException(Exception)
+ [m]	Task`1 FromResult(TResult)
+ [m]	TaskAwaiter GetAwaiter()
+ [m]	Task Run(Action)
+ [m]	Task Run(Action,CancellationToken)
+ [m]	Task Run(Func`1)
+ [m]	Task Run(Func`1,CancellationToken)
+ [m]	Task`1 Run(Func`1)
+ [m]	Task`1 Run(Func`1,CancellationToken)
+ [m]	Task`1 Run(Func`1)
+ [m]	Task`1 Run(Func`1,CancellationToken)
+ [m]	Void RunSynchronously()
+ [m]	Void RunSynchronously(TaskScheduler)
+ [m]	Void Start()
+ [m]	Void Start(TaskScheduler)
+ [m]	Void Wait()
+ [m]	Boolean Wait(Int32)
+ [m]	Boolean Wait(Int32,CancellationToken)
+ [m]	Void Wait(CancellationToken)
+ [m]	Boolean Wait(TimeSpan)
+ [m]	Void WaitAll(Task[])
+ [m]	Boolean WaitAll(Task[],Int32)
+ [m]	Boolean WaitAll(Task[],Int32,CancellationToken)
+ [m]	Void WaitAll(Task[],CancellationToken)
+ [m]	Boolean WaitAll(Task[],TimeSpan)
+ [m]	Int32 WaitAny(Task[])
+ [m]	Int32 WaitAny(Task[],Int32)
+ [m]	Int32 WaitAny(Task[],Int32,CancellationToken)
+ [m]	Int32 WaitAny(Task[],CancellationToken)
+ [m]	Int32 WaitAny(Task[],TimeSpan)
+ [m]	Task WhenAll(IEnumerable`1)
+ [m]	Task WhenAll(Task[])
+ [m]	Task`1 WhenAll(IEnumerable`1)
+ [m]	Task`1 WhenAll(Task`1[])
+ [m]	Task`1 WhenAny(IEnumerable`1)
+ [m]	Task`1 WhenAny(Task[])
+ [m]	Task`1 WhenAny(IEnumerable`1)
+ [m]	Task`1 WhenAny(Task`1[])
+ [m]	YieldAwaitable Yield()

f [t] System.Threading.Tasks.Task`1
+ [m]	Void .ctor(Func`1)
+ [m]	Void .ctor(Func`1,CancellationToken)
+ [m]	Void .ctor(Func`1,CancellationToken,TaskCreationOptions)
+ [m]	Void .ctor(Func`1,TaskCreationOptions)
+ [m]	Void .ctor(Func`2,Object)
+ [m]	Void .ctor(Func`2,Object,CancellationToken)
+ [m]	Void .ctor(Func`2,Object,CancellationToken,TaskCreationOptions)
+ [m]	Void .ctor(Func`2,Object,TaskCreationOptions)
+ [m]	TaskFactory`1 get_Factory()
+ [m]	TResult get_Result()
+ [m]	ConfiguredTaskAwaitable`1 ConfigureAwait(Boolean)
+ [m]	Task ContinueWith(Action`2,Object)
+ [m]	Task ContinueWith(Action`2,Object,CancellationToken)
+ [m]	Task ContinueWith(Action`2,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)
+ [m]	Task ContinueWith(Action`2,Object,TaskContinuationOptions)
+ [m]	Task ContinueWith(Action`2,Object,TaskScheduler)
+ [m]	Task ContinueWith(Action`1)
+ [m]	Task ContinueWith(Action`1,CancellationToken)
+ [m]	Task ContinueWith(Action`1,CancellationToken,TaskContinuationOptions,TaskScheduler)
+ [m]	Task ContinueWith(Action`1,TaskContinuationOptions)
+ [m]	Task ContinueWith(Action`1,TaskScheduler)
+ [m]	Task`1 ContinueWith(Func`2)
+ [m]	Task`1 ContinueWith(Func`2,CancellationToken)
+ [m]	Task`1 ContinueWith(Func`2,CancellationToken,TaskContinuationOptions,TaskScheduler)
+ [m]	Task`1 ContinueWith(Func`2,TaskContinuationOptions)
+ [m]	Task`1 ContinueWith(Func`2,TaskScheduler)
+ [m]	Task`1 ContinueWith(Func`3,Object)
+ [m]	Task`1 ContinueWith(Func`3,Object,CancellationToken)
+ [m]	Task`1 ContinueWith(Func`3,Object,CancellationToken,TaskContinuationOptions,TaskScheduler)
+ [m]	Task`1 ContinueWith(Func`3,Object,TaskContinuationOptions)
+ [m]	Task`1 ContinueWith(Func`3,Object,TaskScheduler)
+ [m]	TaskAwaiter`1 GetAwaiter()

f [t] System.Threading.Tasks.TaskCanceledException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	Void .ctor(Task)
+ [m]	Task get_Task()

f [t] System.Threading.Tasks.TaskCompletionSource`1
+ [m]	Void .ctor()
+ [m]	Void .ctor(Object)
+ [m]	Void .ctor(Object,TaskCreationOptions)
+ [m]	Void .ctor(TaskCreationOptions)
+ [m]	Task`1 get_Task()
+ [m]	Void SetCanceled()
+ [m]	Void SetException(IEnumerable`1)
+ [m]	Void SetException(Exception)
+ [m]	Void SetResult(TResult)
+ [m]	Boolean TrySetCanceled()
+ [m]	Boolean TrySetCanceled(CancellationToken)
+ [m]	Boolean TrySetException(IEnumerable`1)
+ [m]	Boolean TrySetException(Exception)
+ [m]	Boolean TrySetResult(TResult)

f [t] System.Threading.Tasks.TaskContinuationOptions

f [t] System.Threading.Tasks.TaskCreationOptions

f [t] System.Threading.Tasks.TaskExtensions
+ [m]	Task Unwrap(Task`1)
+ [m]	Task`1 Unwrap(Task`1)

f [t] System.Threading.Tasks.TaskFactory
+ [m]	Void .ctor()
+ [m]	Void .ctor(CancellationToken)
+ [m]	Void .ctor(CancellationToken,TaskCreationOptions,TaskContinuationOptions,TaskScheduler)
+ [m]	Void .ctor(TaskCreationOptions,TaskContinuationOptions)
+ [m]	Void .ctor(TaskScheduler)
+ [m]	CancellationToken get_CancellationToken()
+ [m]	TaskContinuationOptions get_ContinuationOptions()
+ [m]	TaskCreationOptions get_CreationOptions()
+ [m]	TaskScheduler get_Scheduler()
+ [m]	Task ContinueWhenAll(Task[],Action`1)
+ [m]	Task ContinueWhenAll(Task[],Action`1,CancellationToken)
+ [m]	Task ContinueWhenAll(Task[],Action`1,CancellationToken,TaskContinuationOptions,TaskScheduler)
+ [m]	Task ContinueWhenAll(Task[],Action`1,TaskContinuationOptions)
+ [m]	Task`1 ContinueWhenAll(Task[],Func`2)
+ [m]	Task`1 ContinueWhenAll(Task[],Func`2,CancellationToken)
+ [m]	Task`1 ContinueWhenAll(Task[],Func`2,CancellationToken,TaskContinuationOptions,TaskScheduler)
+ [m]	Task`1 ContinueWhenAll(Task[],Func`2,TaskContinuationOptions)
+ [m]	Task ContinueWhenAll(Task`1[],Action`1)
+ [m]	Task ContinueWhenAll(Task`1[],Action`1,CancellationToken)
+ [m]	Task ContinueWhenAll(Task`1[],Action`1,CancellationToken,TaskContinuationOptions,TaskScheduler)
+ [m]	Task ContinueWhenAll(Task`1[],Action`1,TaskContinuationOptions)
+ [m]	Task`1 ContinueWhenAll(Task`1[],Func`2)
+ [m]	Task`1 ContinueWhenAll(Task`1[],Func`2,CancellationToken)
+ [m]	Task`1 ContinueWhenAll(Task`1[],Func`2,CancellationToken,TaskContinuationOptions,TaskScheduler)
+ [m]	Task`1 ContinueWhenAll(Task`1[],Func`2,TaskContinuationOptions)
+ [m]	Task ContinueWhenAny(Task[],Action`1)
+ [m]	Task ContinueWhenAny(Task[],Action`1,CancellationToken)
+ [m]	Task ContinueWhenAny(Task[],Action`1,CancellationToken,TaskContinuationOptions,TaskScheduler)
+ [m]	Task ContinueWhenAny(Task[],Action`1,TaskContinuationOptions)
+ [m]	Task`1 ContinueWhenAny(Task[],Func`2)
+ [m]	Task`1 ContinueWhenAny(Task[],Func`2,CancellationToken)
+ [m]	Task`1 ContinueWhenAny(Task[],Func`2,CancellationToken,TaskContinuationOptions,TaskScheduler)
+ [m]	Task`1 ContinueWhenAny(Task[],Func`2,TaskContinuationOptions)
+ [m]	Task ContinueWhenAny(Task`1[],Action`1)
+ [m]	Task ContinueWhenAny(Task`1[],Action`1,CancellationToken)
+ [m]	Task ContinueWhenAny(Task`1[],Action`1,CancellationToken,TaskContinuationOptions,TaskScheduler)
+ [m]	Task ContinueWhenAny(Task`1[],Action`1,TaskContinuationOptions)
+ [m]	Task`1 ContinueWhenAny(Task`1[],Func`2)
+ [m]	Task`1 ContinueWhenAny(Task`1[],Func`2,CancellationToken)
+ [m]	Task`1 ContinueWhenAny(Task`1[],Func`2,CancellationToken,TaskContinuationOptions,TaskScheduler)
+ [m]	Task`1 ContinueWhenAny(Task`1[],Func`2,TaskContinuationOptions)
+ [m]	Task FromAsync(Func`3,Action`1,Object)
+ [m]	Task FromAsync(Func`3,Action`1,Object,TaskCreationOptions)
+ [m]	Task FromAsync(IAsyncResult,Action`1)
+ [m]	Task FromAsync(IAsyncResult,Action`1,TaskCreationOptions)
+ [m]	Task FromAsync(IAsyncResult,Action`1,TaskCreationOptions,TaskScheduler)
+ [m]	Task FromAsync(Func`4,Action`1,TArg1,Object)
+ [m]	Task FromAsync(Func`4,Action`1,TArg1,Object,TaskCreationOptions)
+ [m]	Task`1 FromAsync(Func`3,Func`2,Object)
+ [m]	Task`1 FromAsync(Func`3,Func`2,Object,TaskCreationOptions)
+ [m]	Task`1 FromAsync(IAsyncResult,Func`2)
+ [m]	Task`1 FromAsync(IAsyncResult,Func`2,TaskCreationOptions)
+ [m]	Task`1 FromAsync(IAsyncResult,Func`2,TaskCreationOptions,TaskScheduler)
+ [m]	Task FromAsync(Func`5,Action`1,TArg1,TArg2,Object)
+ [m]	Task FromAsync(Func`5,Action`1,TArg1,TArg2,Object,TaskCreationOptions)
+ [m]	Task`1 FromAsync(Func`4,Func`2,TArg1,Object)
+ [m]	Task`1 FromAsync(Func`4,Func`2,TArg1,Object,TaskCreationOptions)
+ [m]	Task FromAsync(Func`6,Action`1,TArg1,TArg2,TArg3,Object)
+ [m]	Task FromAsync(Func`6,Action`1,TArg1,TArg2,TArg3,Object,TaskCreationOptions)
+ [m]	Task`1 FromAsync(Func`5,Func`2,TArg1,TArg2,Object)
+ [m]	Task`1 FromAsync(Func`5,Func`2,TArg1,TArg2,Object,TaskCreationOptions)
+ [m]	Task`1 FromAsync(Func`6,Func`2,TArg1,TArg2,TArg3,Object)
+ [m]	Task`1 FromAsync(Func`6,Func`2,TArg1,TArg2,TArg3,Object,TaskCreationOptions)
+ [m]	Task StartNew(Action)
+ [m]	Task StartNew(Action,CancellationToken)
+ [m]	Task StartNew(Action,CancellationToken,TaskCreationOptions,TaskScheduler)
+ [m]	Task StartNew(Action,TaskCreationOptions)
+ [m]	Task StartNew(Action`1,Object)
+ [m]	Task StartNew(Action`1,Object,CancellationToken)
+ [m]	Task StartNew(Action`1,Object,CancellationToken,TaskCreationOptions,TaskScheduler)
+ [m]	Task StartNew(Action`1,Object,TaskCreationOptions)
+ [m]	Task`1 StartNew(Func`1)
+ [m]	Task`1 StartNew(Func`1,CancellationToken)
+ [m]	Task`1 StartNew(Func`1,CancellationToken,TaskCreationOptions,TaskScheduler)
+ [m]	Task`1 StartNew(Func`1,TaskCreationOptions)
+ [m]	Task`1 StartNew(Func`2,Object)
+ [m]	Task`1 StartNew(Func`2,Object,CancellationToken)
+ [m]	Task`1 StartNew(Func`2,Object,CancellationToken,TaskCreationOptions,TaskScheduler)
+ [m]	Task`1 StartNew(Func`2,Object,TaskCreationOptions)

f [t] System.Threading.Tasks.TaskFactory`1
+ [m]	Void .ctor()
+ [m]	Void .ctor(CancellationToken)
+ [m]	Void .ctor(CancellationToken,TaskCreationOptions,TaskContinuationOptions,TaskScheduler)
+ [m]	Void .ctor(TaskCreationOptions,TaskContinuationOptions)
+ [m]	Void .ctor(TaskScheduler)
+ [m]	CancellationToken get_CancellationToken()
+ [m]	TaskContinuationOptions get_ContinuationOptions()
+ [m]	TaskCreationOptions get_CreationOptions()
+ [m]	TaskScheduler get_Scheduler()
+ [m]	Task`1 ContinueWhenAll(Task[],Func`2)
+ [m]	Task`1 ContinueWhenAll(Task[],Func`2,CancellationToken)
+ [m]	Task`1 ContinueWhenAll(Task[],Func`2,CancellationToken,TaskContinuationOptions,TaskScheduler)
+ [m]	Task`1 ContinueWhenAll(Task[],Func`2,TaskContinuationOptions)
+ [m]	Task`1 ContinueWhenAll(Task`1[],Func`2)
+ [m]	Task`1 ContinueWhenAll(Task`1[],Func`2,CancellationToken)
+ [m]	Task`1 ContinueWhenAll(Task`1[],Func`2,CancellationToken,TaskContinuationOptions,TaskScheduler)
+ [m]	Task`1 ContinueWhenAll(Task`1[],Func`2,TaskContinuationOptions)
+ [m]	Task`1 ContinueWhenAny(Task[],Func`2)
+ [m]	Task`1 ContinueWhenAny(Task[],Func`2,CancellationToken)
+ [m]	Task`1 ContinueWhenAny(Task[],Func`2,CancellationToken,TaskContinuationOptions,TaskScheduler)
+ [m]	Task`1 ContinueWhenAny(Task[],Func`2,TaskContinuationOptions)
+ [m]	Task`1 ContinueWhenAny(Task`1[],Func`2)
+ [m]	Task`1 ContinueWhenAny(Task`1[],Func`2,CancellationToken)
+ [m]	Task`1 ContinueWhenAny(Task`1[],Func`2,CancellationToken,TaskContinuationOptions,TaskScheduler)
+ [m]	Task`1 ContinueWhenAny(Task`1[],Func`2,TaskContinuationOptions)
+ [m]	Task`1 FromAsync(Func`3,Func`2,Object)
+ [m]	Task`1 FromAsync(Func`3,Func`2,Object,TaskCreationOptions)
+ [m]	Task`1 FromAsync(IAsyncResult,Func`2)
+ [m]	Task`1 FromAsync(IAsyncResult,Func`2,TaskCreationOptions)
+ [m]	Task`1 FromAsync(IAsyncResult,Func`2,TaskCreationOptions,TaskScheduler)
+ [m]	Task`1 FromAsync(Func`4,Func`2,TArg1,Object)
+ [m]	Task`1 FromAsync(Func`4,Func`2,TArg1,Object,TaskCreationOptions)
+ [m]	Task`1 FromAsync(Func`5,Func`2,TArg1,TArg2,Object)
+ [m]	Task`1 FromAsync(Func`5,Func`2,TArg1,TArg2,Object,TaskCreationOptions)
+ [m]	Task`1 FromAsync(Func`6,Func`2,TArg1,TArg2,TArg3,Object)
+ [m]	Task`1 FromAsync(Func`6,Func`2,TArg1,TArg2,TArg3,Object,TaskCreationOptions)
+ [m]	Task`1 StartNew(Func`1)
+ [m]	Task`1 StartNew(Func`1,CancellationToken)
+ [m]	Task`1 StartNew(Func`1,CancellationToken,TaskCreationOptions,TaskScheduler)
+ [m]	Task`1 StartNew(Func`1,TaskCreationOptions)
+ [m]	Task`1 StartNew(Func`2,Object)
+ [m]	Task`1 StartNew(Func`2,Object,CancellationToken)
+ [m]	Task`1 StartNew(Func`2,Object,CancellationToken,TaskCreationOptions,TaskScheduler)
+ [m]	Task`1 StartNew(Func`2,Object,TaskCreationOptions)

f [t] System.Threading.Tasks.TaskScheduler
+ [m]	Void .ctor()
+ [m]	TaskScheduler get_Current()
+ [m]	TaskScheduler get_Default()
+ [m]	Int32 get_Id()
+ [m]	Int32 get_MaximumConcurrencyLevel()
+ [m]	Void add_UnobservedTaskException(EventHandler`1)
+ [m]	Void remove_UnobservedTaskException(EventHandler`1)
+ [m]	TaskScheduler FromCurrentSynchronizationContext()
+ [m]	IEnumerable`1 GetScheduledTasks()
+ [m]	Void QueueTask(Task)
+ [m]	Boolean TryDequeue(Task)
+ [m]	Boolean TryExecuteTask(Task)
+ [m]	Boolean TryExecuteTaskInline(Task,Boolean)

f [t] System.Threading.Tasks.TaskSchedulerException
+ [m]	Void .ctor()
+ [m]	Void .ctor(Exception)
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Threading.Tasks.TaskStatus

f [t] System.Threading.Tasks.UnobservedTaskExceptionEventArgs
+ [m]	Void .ctor(AggregateException)
+ [m]	AggregateException get_Exception()
+ [m]	Boolean get_Observed()
+ [m]	Void SetObserved()

f [t] System.Runtime.CompilerServices.AsyncTaskMethodBuilder
+ [m]	Task get_Task()
+ [m]	Void AwaitOnCompleted(TAwaiter&,TStateMachine&)
+ [m]	Void AwaitUnsafeOnCompleted(TAwaiter&,TStateMachine&)
+ [m]	AsyncTaskMethodBuilder Create()
+ [m]	Void SetException(Exception)
+ [m]	Void SetResult()
+ [m]	Void SetStateMachine(IAsyncStateMachine)
+ [m]	Void Start(TStateMachine&)

f [t] System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1
+ [m]	Task`1 get_Task()
+ [m]	Void AwaitOnCompleted(TAwaiter&,TStateMachine&)
+ [m]	Void AwaitUnsafeOnCompleted(TAwaiter&,TStateMachine&)
+ [m]	AsyncTaskMethodBuilder`1 Create()
+ [m]	Void SetException(Exception)
+ [m]	Void SetResult(TResult)
+ [m]	Void SetStateMachine(IAsyncStateMachine)
+ [m]	Void Start(TStateMachine&)

f [t] System.Runtime.CompilerServices.AsyncVoidMethodBuilder
+ [m]	Void AwaitOnCompleted(TAwaiter&,TStateMachine&)
+ [m]	Void AwaitUnsafeOnCompleted(TAwaiter&,TStateMachine&)
+ [m]	AsyncVoidMethodBuilder Create()
+ [m]	Void SetException(Exception)
+ [m]	Void SetResult()
+ [m]	Void SetStateMachine(IAsyncStateMachine)
+ [m]	Void Start(TStateMachine&)

f [t] System.Runtime.CompilerServices.ConfiguredTaskAwaitable
+ [m]	ConfiguredTaskAwaiter GetAwaiter()

f [t] System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1
+ [m]	ConfiguredTaskAwaiter GetAwaiter()

f [t] System.Runtime.CompilerServices.IAsyncStateMachine
+ [m]	Void MoveNext()
+ [m]	Void SetStateMachine(IAsyncStateMachine)

f [t] System.Runtime.CompilerServices.ICriticalNotifyCompletion
+ [m]	Void UnsafeOnCompleted(Action)

f [t] System.Runtime.CompilerServices.INotifyCompletion
+ [m]	Void OnCompleted(Action)

f [t] System.Runtime.CompilerServices.TaskAwaiter
+ [m]	Boolean get_IsCompleted()
+ [m]	Void GetResult()
+ [m]	Void OnCompleted(Action)
+ [m]	Void UnsafeOnCompleted(Action)

f [t] System.Runtime.CompilerServices.TaskAwaiter`1
+ [m]	Boolean get_IsCompleted()
+ [m]	TResult GetResult()
+ [m]	Void OnCompleted(Action)
+ [m]	Void UnsafeOnCompleted(Action)

f [t] System.Runtime.CompilerServices.YieldAwaitable
+ [m]	YieldAwaiter GetAwaiter()

---------------------------------------
+ [a] System.Threading.Tasks.Parallel.dll
ref: ./netstandard/packages/System.Threading.Tasks.Parallel/ref/netstandard1.1/System.Threading.Tasks.Parallel.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Threading.Tasks.Parallel.dll

f [t] System.Threading.Tasks.Parallel
+ [m]	ParallelLoopResult For(Int32,Int32,Action`2)
+ [m]	ParallelLoopResult For(Int32,Int32,Action`1)
+ [m]	ParallelLoopResult For(Int32,Int32,ParallelOptions,Action`2)
+ [m]	ParallelLoopResult For(Int32,Int32,ParallelOptions,Action`1)
+ [m]	ParallelLoopResult For(Int64,Int64,Action`2)
+ [m]	ParallelLoopResult For(Int64,Int64,Action`1)
+ [m]	ParallelLoopResult For(Int64,Int64,ParallelOptions,Action`2)
+ [m]	ParallelLoopResult For(Int64,Int64,ParallelOptions,Action`1)
+ [m]	ParallelLoopResult For(Int32,Int32,Func`1,Func`4,Action`1)
+ [m]	ParallelLoopResult For(Int32,Int32,ParallelOptions,Func`1,Func`4,Action`1)
+ [m]	ParallelLoopResult For(Int64,Int64,Func`1,Func`4,Action`1)
+ [m]	ParallelLoopResult For(Int64,Int64,ParallelOptions,Func`1,Func`4,Action`1)
+ [m]	ParallelLoopResult ForEach(OrderablePartitioner`1,Action`3)
+ [m]	ParallelLoopResult ForEach(OrderablePartitioner`1,ParallelOptions,Action`3)
+ [m]	ParallelLoopResult ForEach(Partitioner`1,Action`2)
+ [m]	ParallelLoopResult ForEach(Partitioner`1,Action`1)
+ [m]	ParallelLoopResult ForEach(Partitioner`1,ParallelOptions,Action`2)
+ [m]	ParallelLoopResult ForEach(Partitioner`1,ParallelOptions,Action`1)
+ [m]	ParallelLoopResult ForEach(IEnumerable`1,Action`3)
+ [m]	ParallelLoopResult ForEach(IEnumerable`1,Action`2)
+ [m]	ParallelLoopResult ForEach(IEnumerable`1,Action`1)
+ [m]	ParallelLoopResult ForEach(IEnumerable`1,ParallelOptions,Action`3)
+ [m]	ParallelLoopResult ForEach(IEnumerable`1,ParallelOptions,Action`2)
+ [m]	ParallelLoopResult ForEach(IEnumerable`1,ParallelOptions,Action`1)
+ [m]	ParallelLoopResult ForEach(OrderablePartitioner`1,Func`1,Func`5,Action`1)
+ [m]	ParallelLoopResult ForEach(OrderablePartitioner`1,ParallelOptions,Func`1,Func`5,Action`1)
+ [m]	ParallelLoopResult ForEach(Partitioner`1,Func`1,Func`4,Action`1)
+ [m]	ParallelLoopResult ForEach(Partitioner`1,ParallelOptions,Func`1,Func`4,Action`1)
+ [m]	ParallelLoopResult ForEach(IEnumerable`1,Func`1,Func`4,Action`1)
+ [m]	ParallelLoopResult ForEach(IEnumerable`1,Func`1,Func`5,Action`1)
+ [m]	ParallelLoopResult ForEach(IEnumerable`1,ParallelOptions,Func`1,Func`4,Action`1)
+ [m]	ParallelLoopResult ForEach(IEnumerable`1,ParallelOptions,Func`1,Func`5,Action`1)
+ [m]	Void Invoke(Action[])
+ [m]	Void Invoke(ParallelOptions,Action[])

f [t] System.Threading.Tasks.ParallelLoopResult
+ [m]	Boolean get_IsCompleted()
+ [m]	Nullable`1 get_LowestBreakIteration()

f [t] System.Threading.Tasks.ParallelLoopState
- [m]	Void .ctor()
+ [m]	Boolean get_IsExceptional()
+ [m]	Boolean get_IsStopped()
+ [m]	Nullable`1 get_LowestBreakIteration()
+ [m]	Boolean get_ShouldExitCurrentIteration()
+ [m]	Void Break()
+ [m]	Void Stop()

f [t] System.Threading.Tasks.ParallelOptions
+ [m]	Void .ctor()
+ [m]	CancellationToken get_CancellationToken()
+ [m]	Void set_CancellationToken(CancellationToken)
+ [m]	Int32 get_MaxDegreeOfParallelism()
+ [m]	Void set_MaxDegreeOfParallelism(Int32)
+ [m]	TaskScheduler get_TaskScheduler()
+ [m]	Void set_TaskScheduler(TaskScheduler)

---------------------------------------
+ [a] System.Threading.Thread.dll
ref: ./netstandard/packages/System.Threading.Thread/ref/netstandard1.3/System.Threading.Thread.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Threading.Thread.dll

f [t] System.Threading.ParameterizedThreadStart
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object)
+ [m]	IAsyncResult BeginInvoke(Object,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Threading.Thread
+ [m]	Void .ctor(ParameterizedThreadStart)
+ [m]	Void .ctor(ThreadStart)
+ [m]	Thread get_CurrentThread()
+ [m]	Boolean get_IsAlive()
+ [m]	Boolean get_IsBackground()
+ [m]	Void set_IsBackground(Boolean)
+ [m]	Int32 get_ManagedThreadId()
+ [m]	String get_Name()
+ [m]	Void set_Name(String)
+ [m]	ThreadState get_ThreadState()
+ [m]	Void Join()
+ [m]	Boolean Join(Int32)
+ [m]	Void Sleep(Int32)
+ [m]	Void Sleep(TimeSpan)
+ [m]	Void Start()
+ [m]	Void Start(Object)

f [t] System.Threading.ThreadStart
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke()
+ [m]	IAsyncResult BeginInvoke(AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Threading.ThreadStartException
+ [m]	Void .ctor()

f [t] System.Threading.ThreadState

f [t] System.Threading.ThreadStateException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

---------------------------------------
+ [a] System.Threading.ThreadPool.dll
ref: ./netstandard/packages/System.Threading.ThreadPool/ref/netstandard1.3/System.Threading.ThreadPool.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Threading.ThreadPool.dll

f [t] System.Threading.RegisteredWaitHandle
- [m]	Void .ctor()
+ [m]	Boolean Unregister(WaitHandle)

f [t] System.Threading.ThreadPool
+ [m]	Boolean BindHandle(SafeHandle)
+ [m]	Boolean QueueUserWorkItem(WaitCallback)
+ [m]	Boolean QueueUserWorkItem(WaitCallback,Object)
+ [m]	RegisteredWaitHandle RegisterWaitForSingleObject(WaitHandle,WaitOrTimerCallback,Object,Int32,Boolean)
+ [m]	RegisteredWaitHandle RegisterWaitForSingleObject(WaitHandle,WaitOrTimerCallback,Object,Int64,Boolean)
+ [m]	RegisteredWaitHandle RegisterWaitForSingleObject(WaitHandle,WaitOrTimerCallback,Object,TimeSpan,Boolean)
+ [m]	RegisteredWaitHandle RegisterWaitForSingleObject(WaitHandle,WaitOrTimerCallback,Object,UInt32,Boolean)

f [t] System.Threading.WaitCallback
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object)
+ [m]	IAsyncResult BeginInvoke(Object,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Threading.WaitOrTimerCallback
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object,Boolean)
+ [m]	IAsyncResult BeginInvoke(Object,Boolean,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

---------------------------------------
+ [a] System.Threading.Timer.dll
ref: ./netstandard/packages/System.Threading.Timer/ref/netstandard1.2/System.Threading.Timer.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Threading.Timer.dll

f [t] System.Threading.Timer
+ [m]	Void .ctor(TimerCallback,Object,Int32,Int32)
+ [m]	Void .ctor(TimerCallback,Object,TimeSpan,TimeSpan)
+ [m]	Boolean Change(Int32,Int32)
+ [m]	Boolean Change(TimeSpan,TimeSpan)
+ [m]	Void Dispose()

f [t] System.Threading.TimerCallback
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object)
+ [m]	IAsyncResult BeginInvoke(Object,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

---------------------------------------
+ [a] System.Xml.ReaderWriter.dll
ref: ./netstandard/packages/System.Xml.ReaderWriter/ref/netstandard1.3/System.Xml.ReaderWriter.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Xml.ReaderWriter.dll

f [t] System.Xml.ConformanceLevel

f [t] System.Xml.DtdProcessing

f [t] System.Xml.IXmlLineInfo
+ [m]	Int32 get_LineNumber()
+ [m]	Int32 get_LinePosition()
+ [m]	Boolean HasLineInfo()

f [t] System.Xml.IXmlNamespaceResolver
+ [m]	IDictionary`2 GetNamespacesInScope(XmlNamespaceScope)
+ [m]	String LookupNamespace(String)
+ [m]	String LookupPrefix(String)

f [t] System.Xml.NamespaceHandling

f [t] System.Xml.NameTable
+ [m]	Void .ctor()
+ [m]	String Add(Char[],Int32,Int32)
+ [m]	String Add(String)
+ [m]	String Get(Char[],Int32,Int32)
+ [m]	String Get(String)

f [t] System.Xml.NewLineHandling

f [t] System.Xml.ReadState

f [t] System.Xml.WriteState

f [t] System.Xml.XmlConvert
+ [m]	String DecodeName(String)
+ [m]	String EncodeLocalName(String)
+ [m]	String EncodeName(String)
+ [m]	String EncodeNmToken(String)
+ [m]	Boolean ToBoolean(String)
+ [m]	Byte ToByte(String)
+ [m]	Char ToChar(String)
+ [m]	DateTime ToDateTime(String,XmlDateTimeSerializationMode)
+ [m]	DateTimeOffset ToDateTimeOffset(String)
+ [m]	DateTimeOffset ToDateTimeOffset(String,String)
+ [m]	DateTimeOffset ToDateTimeOffset(String,String[])
+ [m]	Decimal ToDecimal(String)
+ [m]	Double ToDouble(String)
+ [m]	Guid ToGuid(String)
+ [m]	Int16 ToInt16(String)
+ [m]	Int32 ToInt32(String)
+ [m]	Int64 ToInt64(String)
+ [m]	SByte ToSByte(String)
+ [m]	Single ToSingle(String)
+ [m]	String ToString(Boolean)
+ [m]	String ToString(Byte)
+ [m]	String ToString(Char)
+ [m]	String ToString(DateTime,XmlDateTimeSerializationMode)
+ [m]	String ToString(DateTimeOffset)
+ [m]	String ToString(DateTimeOffset,String)
+ [m]	String ToString(Decimal)
+ [m]	String ToString(Double)
+ [m]	String ToString(Guid)
+ [m]	String ToString(Int16)
+ [m]	String ToString(Int32)
+ [m]	String ToString(Int64)
+ [m]	String ToString(SByte)
+ [m]	String ToString(Single)
+ [m]	String ToString(TimeSpan)
+ [m]	String ToString(UInt16)
+ [m]	String ToString(UInt32)
+ [m]	String ToString(UInt64)
+ [m]	TimeSpan ToTimeSpan(String)
+ [m]	UInt16 ToUInt16(String)
+ [m]	UInt32 ToUInt32(String)
+ [m]	UInt64 ToUInt64(String)
+ [m]	String VerifyName(String)
+ [m]	String VerifyNCName(String)
+ [m]	String VerifyNMTOKEN(String)
+ [m]	String VerifyPublicId(String)
+ [m]	String VerifyWhitespace(String)
+ [m]	String VerifyXmlChars(String)

f [t] System.Xml.XmlDateTimeSerializationMode

f [t] System.Xml.XmlException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)
+ [m]	Void .ctor(String,Exception,Int32,Int32)
+ [m]	Int32 get_LineNumber()
+ [m]	Int32 get_LinePosition()
+ [m]	String get_Message()

f [t] System.Xml.XmlNamespaceManager
+ [m]	Void .ctor(XmlNameTable)
+ [m]	String get_DefaultNamespace()
+ [m]	XmlNameTable get_NameTable()
+ [m]	Void AddNamespace(String,String)
+ [m]	IEnumerator GetEnumerator()
+ [m]	IDictionary`2 GetNamespacesInScope(XmlNamespaceScope)
+ [m]	Boolean HasNamespace(String)
+ [m]	String LookupNamespace(String)
+ [m]	String LookupPrefix(String)
+ [m]	Boolean PopScope()
+ [m]	Void PushScope()
+ [m]	Void RemoveNamespace(String,String)

f [t] System.Xml.XmlNamespaceScope

f [t] System.Xml.XmlNameTable
+ [m]	Void .ctor()
+ [m]	String Add(Char[],Int32,Int32)
+ [m]	String Add(String)
+ [m]	String Get(Char[],Int32,Int32)
+ [m]	String Get(String)

f [t] System.Xml.XmlNodeType

f [t] System.Xml.XmlParserContext
+ [m]	Void .ctor(XmlNameTable,XmlNamespaceManager,String,String,String,String,String,String,XmlSpace)
+ [m]	Void .ctor(XmlNameTable,XmlNamespaceManager,String,String,String,String,String,String,XmlSpace,Encoding)
+ [m]	Void .ctor(XmlNameTable,XmlNamespaceManager,String,XmlSpace)
+ [m]	Void .ctor(XmlNameTable,XmlNamespaceManager,String,XmlSpace,Encoding)
+ [m]	String get_BaseURI()
+ [m]	Void set_BaseURI(String)
+ [m]	String get_DocTypeName()
+ [m]	Void set_DocTypeName(String)
+ [m]	Encoding get_Encoding()
+ [m]	Void set_Encoding(Encoding)
+ [m]	String get_InternalSubset()
+ [m]	Void set_InternalSubset(String)
+ [m]	XmlNamespaceManager get_NamespaceManager()
+ [m]	Void set_NamespaceManager(XmlNamespaceManager)
+ [m]	XmlNameTable get_NameTable()
+ [m]	Void set_NameTable(XmlNameTable)
+ [m]	String get_PublicId()
+ [m]	Void set_PublicId(String)
+ [m]	String get_SystemId()
+ [m]	Void set_SystemId(String)
+ [m]	String get_XmlLang()
+ [m]	Void set_XmlLang(String)
+ [m]	XmlSpace get_XmlSpace()
+ [m]	Void set_XmlSpace(XmlSpace)

f [t] System.Xml.XmlQualifiedName
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,String)
+ [m]	Boolean get_IsEmpty()
+ [m]	String get_Name()
+ [m]	String get_Namespace()
+ [m]	Boolean Equals(Object)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(XmlQualifiedName,XmlQualifiedName)
+ [m]	Boolean op_Inequality(XmlQualifiedName,XmlQualifiedName)
+ [m]	String ToString()
+ [m]	String ToString(String,String)

f [t] System.Xml.XmlReader
+ [m]	Void .ctor()
+ [m]	Int32 get_AttributeCount()
+ [m]	String get_BaseURI()
+ [m]	Boolean get_CanReadBinaryContent()
+ [m]	Boolean get_CanReadValueChunk()
+ [m]	Boolean get_CanResolveEntity()
+ [m]	Int32 get_Depth()
+ [m]	Boolean get_EOF()
+ [m]	Boolean get_HasAttributes()
+ [m]	Boolean get_HasValue()
+ [m]	Boolean get_IsDefault()
+ [m]	Boolean get_IsEmptyElement()
+ [m]	String get_Item(Int32)
+ [m]	String get_Item(String)
+ [m]	String get_Item(String,String)
+ [m]	String get_LocalName()
+ [m]	String get_Name()
+ [m]	String get_NamespaceURI()
+ [m]	XmlNameTable get_NameTable()
+ [m]	XmlNodeType get_NodeType()
+ [m]	String get_Prefix()
+ [m]	ReadState get_ReadState()
+ [m]	XmlReaderSettings get_Settings()
+ [m]	String get_Value()
+ [m]	Type get_ValueType()
+ [m]	String get_XmlLang()
+ [m]	XmlSpace get_XmlSpace()
+ [m]	XmlReader Create(Stream)
+ [m]	XmlReader Create(Stream,XmlReaderSettings)
+ [m]	XmlReader Create(Stream,XmlReaderSettings,XmlParserContext)
+ [m]	XmlReader Create(TextReader)
+ [m]	XmlReader Create(TextReader,XmlReaderSettings)
+ [m]	XmlReader Create(TextReader,XmlReaderSettings,XmlParserContext)
+ [m]	XmlReader Create(String)
+ [m]	XmlReader Create(String,XmlReaderSettings)
+ [m]	XmlReader Create(XmlReader,XmlReaderSettings)
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	String GetAttribute(Int32)
+ [m]	String GetAttribute(String)
+ [m]	String GetAttribute(String,String)
! [m]	Task`1 GetValueAsync()
+ [m]	Boolean IsName(String)
+ [m]	Boolean IsNameToken(String)
+ [m]	Boolean IsStartElement()
+ [m]	Boolean IsStartElement(String)
+ [m]	Boolean IsStartElement(String,String)
+ [m]	String LookupNamespace(String)
+ [m]	Void MoveToAttribute(Int32)
+ [m]	Boolean MoveToAttribute(String)
+ [m]	Boolean MoveToAttribute(String,String)
+ [m]	XmlNodeType MoveToContent()
+ [m]	Task`1 MoveToContentAsync()
+ [m]	Boolean MoveToElement()
+ [m]	Boolean MoveToFirstAttribute()
+ [m]	Boolean MoveToNextAttribute()
+ [m]	Boolean Read()
! [m]	Task`1 ReadAsync()
+ [m]	Boolean ReadAttributeValue()
+ [m]	Object ReadContentAs(Type,IXmlNamespaceResolver)
+ [m]	Task`1 ReadContentAsAsync(Type,IXmlNamespaceResolver)
+ [m]	Int32 ReadContentAsBase64(Byte[],Int32,Int32)
+ [m]	Task`1 ReadContentAsBase64Async(Byte[],Int32,Int32)
+ [m]	Int32 ReadContentAsBinHex(Byte[],Int32,Int32)
+ [m]	Task`1 ReadContentAsBinHexAsync(Byte[],Int32,Int32)
+ [m]	Boolean ReadContentAsBoolean()
+ [m]	DateTimeOffset ReadContentAsDateTimeOffset()
+ [m]	Decimal ReadContentAsDecimal()
+ [m]	Double ReadContentAsDouble()
+ [m]	Single ReadContentAsFloat()
+ [m]	Int32 ReadContentAsInt()
+ [m]	Int64 ReadContentAsLong()
+ [m]	Object ReadContentAsObject()
+ [m]	Task`1 ReadContentAsObjectAsync()
+ [m]	String ReadContentAsString()
+ [m]	Task`1 ReadContentAsStringAsync()
+ [m]	Object ReadElementContentAs(Type,IXmlNamespaceResolver)
+ [m]	Object ReadElementContentAs(Type,IXmlNamespaceResolver,String,String)
+ [m]	Task`1 ReadElementContentAsAsync(Type,IXmlNamespaceResolver)
+ [m]	Int32 ReadElementContentAsBase64(Byte[],Int32,Int32)
+ [m]	Task`1 ReadElementContentAsBase64Async(Byte[],Int32,Int32)
+ [m]	Int32 ReadElementContentAsBinHex(Byte[],Int32,Int32)
+ [m]	Task`1 ReadElementContentAsBinHexAsync(Byte[],Int32,Int32)
+ [m]	Boolean ReadElementContentAsBoolean()
+ [m]	Boolean ReadElementContentAsBoolean(String,String)
+ [m]	Decimal ReadElementContentAsDecimal()
+ [m]	Decimal ReadElementContentAsDecimal(String,String)
+ [m]	Double ReadElementContentAsDouble()
+ [m]	Double ReadElementContentAsDouble(String,String)
+ [m]	Single ReadElementContentAsFloat()
+ [m]	Single ReadElementContentAsFloat(String,String)
+ [m]	Int32 ReadElementContentAsInt()
+ [m]	Int32 ReadElementContentAsInt(String,String)
+ [m]	Int64 ReadElementContentAsLong()
+ [m]	Int64 ReadElementContentAsLong(String,String)
+ [m]	Object ReadElementContentAsObject()
+ [m]	Object ReadElementContentAsObject(String,String)
+ [m]	Task`1 ReadElementContentAsObjectAsync()
+ [m]	String ReadElementContentAsString()
+ [m]	String ReadElementContentAsString(String,String)
+ [m]	Task`1 ReadElementContentAsStringAsync()
+ [m]	Void ReadEndElement()
+ [m]	String ReadInnerXml()
+ [m]	Task`1 ReadInnerXmlAsync()
+ [m]	String ReadOuterXml()
+ [m]	Task`1 ReadOuterXmlAsync()
+ [m]	Void ReadStartElement()
+ [m]	Void ReadStartElement(String)
+ [m]	Void ReadStartElement(String,String)
+ [m]	XmlReader ReadSubtree()
+ [m]	Boolean ReadToDescendant(String)
+ [m]	Boolean ReadToDescendant(String,String)
+ [m]	Boolean ReadToFollowing(String)
+ [m]	Boolean ReadToFollowing(String,String)
+ [m]	Boolean ReadToNextSibling(String)
+ [m]	Boolean ReadToNextSibling(String,String)
+ [m]	Int32 ReadValueChunk(Char[],Int32,Int32)
+ [m]	Task`1 ReadValueChunkAsync(Char[],Int32,Int32)
+ [m]	Void ResolveEntity()
+ [m]	Void Skip()
+ [m]	Task SkipAsync()

f [t] System.Xml.XmlReaderSettings
+ [m]	Void .ctor()
+ [m]	Boolean get_Async()
+ [m]	Void set_Async(Boolean)
+ [m]	Boolean get_CheckCharacters()
+ [m]	Void set_CheckCharacters(Boolean)
+ [m]	Boolean get_CloseInput()
+ [m]	Void set_CloseInput(Boolean)
+ [m]	ConformanceLevel get_ConformanceLevel()
+ [m]	Void set_ConformanceLevel(ConformanceLevel)
+ [m]	DtdProcessing get_DtdProcessing()
+ [m]	Void set_DtdProcessing(DtdProcessing)
+ [m]	Boolean get_IgnoreComments()
+ [m]	Void set_IgnoreComments(Boolean)
+ [m]	Boolean get_IgnoreProcessingInstructions()
+ [m]	Void set_IgnoreProcessingInstructions(Boolean)
+ [m]	Boolean get_IgnoreWhitespace()
+ [m]	Void set_IgnoreWhitespace(Boolean)
+ [m]	Int32 get_LineNumberOffset()
+ [m]	Void set_LineNumberOffset(Int32)
+ [m]	Int32 get_LinePositionOffset()
+ [m]	Void set_LinePositionOffset(Int32)
+ [m]	Int64 get_MaxCharactersFromEntities()
+ [m]	Void set_MaxCharactersFromEntities(Int64)
+ [m]	Int64 get_MaxCharactersInDocument()
+ [m]	Void set_MaxCharactersInDocument(Int64)
+ [m]	XmlNameTable get_NameTable()
+ [m]	Void set_NameTable(XmlNameTable)
+ [m]	XmlReaderSettings Clone()
+ [m]	Void Reset()

f [t] System.Xml.XmlSpace

f [t] System.Xml.XmlWriter
+ [m]	Void .ctor()
+ [m]	XmlWriterSettings get_Settings()
+ [m]	WriteState get_WriteState()
+ [m]	String get_XmlLang()
+ [m]	XmlSpace get_XmlSpace()
+ [m]	XmlWriter Create(Stream)
+ [m]	XmlWriter Create(Stream,XmlWriterSettings)
+ [m]	XmlWriter Create(TextWriter)
+ [m]	XmlWriter Create(TextWriter,XmlWriterSettings)
+ [m]	XmlWriter Create(StringBuilder)
+ [m]	XmlWriter Create(StringBuilder,XmlWriterSettings)
+ [m]	XmlWriter Create(XmlWriter)
+ [m]	XmlWriter Create(XmlWriter,XmlWriterSettings)
+ [m]	Void Dispose()
+ [m]	Void Dispose(Boolean)
+ [m]	Void Flush()
! [m]	Task FlushAsync()
+ [m]	String LookupPrefix(String)
+ [m]	Void WriteAttributes(XmlReader,Boolean)
+ [m]	Task WriteAttributesAsync(XmlReader,Boolean)
+ [m]	Void WriteAttributeString(String,String)
+ [m]	Void WriteAttributeString(String,String,String)
+ [m]	Void WriteAttributeString(String,String,String,String)
+ [m]	Task WriteAttributeStringAsync(String,String,String,String)
+ [m]	Void WriteBase64(Byte[],Int32,Int32)
! [m]	Task WriteBase64Async(Byte[],Int32,Int32)
+ [m]	Void WriteBinHex(Byte[],Int32,Int32)
+ [m]	Task WriteBinHexAsync(Byte[],Int32,Int32)
+ [m]	Void WriteCData(String)
! [m]	Task WriteCDataAsync(String)
+ [m]	Void WriteCharEntity(Char)
! [m]	Task WriteCharEntityAsync(Char)
+ [m]	Void WriteChars(Char[],Int32,Int32)
! [m]	Task WriteCharsAsync(Char[],Int32,Int32)
+ [m]	Void WriteComment(String)
! [m]	Task WriteCommentAsync(String)
+ [m]	Void WriteDocType(String,String,String,String)
! [m]	Task WriteDocTypeAsync(String,String,String,String)
+ [m]	Void WriteElementString(String,String)
+ [m]	Void WriteElementString(String,String,String)
+ [m]	Void WriteElementString(String,String,String,String)
+ [m]	Task WriteElementStringAsync(String,String,String,String)
+ [m]	Void WriteEndAttribute()
! [m]	Task WriteEndAttributeAsync()
+ [m]	Void WriteEndDocument()
! [m]	Task WriteEndDocumentAsync()
+ [m]	Void WriteEndElement()
! [m]	Task WriteEndElementAsync()
+ [m]	Void WriteEntityRef(String)
! [m]	Task WriteEntityRefAsync(String)
+ [m]	Void WriteFullEndElement()
! [m]	Task WriteFullEndElementAsync()
+ [m]	Void WriteName(String)
+ [m]	Task WriteNameAsync(String)
+ [m]	Void WriteNmToken(String)
+ [m]	Task WriteNmTokenAsync(String)
+ [m]	Void WriteNode(XmlReader,Boolean)
+ [m]	Task WriteNodeAsync(XmlReader,Boolean)
+ [m]	Void WriteProcessingInstruction(String,String)
! [m]	Task WriteProcessingInstructionAsync(String,String)
+ [m]	Void WriteQualifiedName(String,String)
+ [m]	Task WriteQualifiedNameAsync(String,String)
+ [m]	Void WriteRaw(Char[],Int32,Int32)
+ [m]	Void WriteRaw(String)
! [m]	Task WriteRawAsync(Char[],Int32,Int32)
! [m]	Task WriteRawAsync(String)
+ [m]	Void WriteStartAttribute(String)
+ [m]	Void WriteStartAttribute(String,String)
+ [m]	Void WriteStartAttribute(String,String,String)
! [m]	Task WriteStartAttributeAsync(String,String,String)
+ [m]	Void WriteStartDocument()
+ [m]	Void WriteStartDocument(Boolean)
! [m]	Task WriteStartDocumentAsync()
! [m]	Task WriteStartDocumentAsync(Boolean)
+ [m]	Void WriteStartElement(String)
+ [m]	Void WriteStartElement(String,String)
+ [m]	Void WriteStartElement(String,String,String)
! [m]	Task WriteStartElementAsync(String,String,String)
+ [m]	Void WriteString(String)
! [m]	Task WriteStringAsync(String)
+ [m]	Void WriteSurrogateCharEntity(Char,Char)
! [m]	Task WriteSurrogateCharEntityAsync(Char,Char)
+ [m]	Void WriteValue(Boolean)
+ [m]	Void WriteValue(DateTimeOffset)
+ [m]	Void WriteValue(Decimal)
+ [m]	Void WriteValue(Double)
+ [m]	Void WriteValue(Int32)
+ [m]	Void WriteValue(Int64)
+ [m]	Void WriteValue(Object)
+ [m]	Void WriteValue(Single)
+ [m]	Void WriteValue(String)
+ [m]	Void WriteWhitespace(String)
! [m]	Task WriteWhitespaceAsync(String)

f [t] System.Xml.XmlWriterSettings
+ [m]	Void .ctor()
+ [m]	Boolean get_Async()
+ [m]	Void set_Async(Boolean)
+ [m]	Boolean get_CheckCharacters()
+ [m]	Void set_CheckCharacters(Boolean)
+ [m]	Boolean get_CloseOutput()
+ [m]	Void set_CloseOutput(Boolean)
+ [m]	ConformanceLevel get_ConformanceLevel()
+ [m]	Void set_ConformanceLevel(ConformanceLevel)
+ [m]	Encoding get_Encoding()
+ [m]	Void set_Encoding(Encoding)
+ [m]	Boolean get_Indent()
+ [m]	Void set_Indent(Boolean)
+ [m]	String get_IndentChars()
+ [m]	Void set_IndentChars(String)
+ [m]	NamespaceHandling get_NamespaceHandling()
+ [m]	Void set_NamespaceHandling(NamespaceHandling)
+ [m]	String get_NewLineChars()
+ [m]	Void set_NewLineChars(String)
+ [m]	NewLineHandling get_NewLineHandling()
+ [m]	Void set_NewLineHandling(NewLineHandling)
+ [m]	Boolean get_NewLineOnAttributes()
+ [m]	Void set_NewLineOnAttributes(Boolean)
+ [m]	Boolean get_OmitXmlDeclaration()
+ [m]	Void set_OmitXmlDeclaration(Boolean)
+ [m]	Boolean get_WriteEndDocumentOnClose()
+ [m]	Void set_WriteEndDocumentOnClose(Boolean)
+ [m]	XmlWriterSettings Clone()
+ [m]	Void Reset()

f [t] System.Xml.Serialization.IXmlSerializable
+ [m]	XmlSchema GetSchema()
+ [m]	Void ReadXml(XmlReader)
+ [m]	Void WriteXml(XmlWriter)

f [t] System.Xml.Serialization.XmlSchemaProviderAttribute
+ [m]	Void .ctor(String)
+ [m]	Boolean get_IsAny()
+ [m]	Void set_IsAny(Boolean)
+ [m]	String get_MethodName()

f [t] System.Xml.Schema.XmlSchema
+ [m]	Void .ctor()

f [t] System.Xml.Schema.XmlSchemaForm

---------------------------------------
+ [a] System.Xml.XDocument.dll
ref: ./netstandard/packages/System.Xml.XDocument/ref/netstandard1.3/System.Xml.XDocument.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Xml.XDocument.dll

f [t] System.Xml.Linq.Extensions
+ [m]	IEnumerable`1 Ancestors(IEnumerable`1)
+ [m]	IEnumerable`1 Ancestors(IEnumerable`1,XName)
+ [m]	IEnumerable`1 AncestorsAndSelf(IEnumerable`1)
+ [m]	IEnumerable`1 AncestorsAndSelf(IEnumerable`1,XName)
+ [m]	IEnumerable`1 Attributes(IEnumerable`1)
+ [m]	IEnumerable`1 Attributes(IEnumerable`1,XName)
+ [m]	IEnumerable`1 DescendantNodes(IEnumerable`1)
+ [m]	IEnumerable`1 DescendantNodesAndSelf(IEnumerable`1)
+ [m]	IEnumerable`1 Descendants(IEnumerable`1)
+ [m]	IEnumerable`1 Descendants(IEnumerable`1,XName)
+ [m]	IEnumerable`1 DescendantsAndSelf(IEnumerable`1)
+ [m]	IEnumerable`1 DescendantsAndSelf(IEnumerable`1,XName)
+ [m]	IEnumerable`1 Elements(IEnumerable`1)
+ [m]	IEnumerable`1 Elements(IEnumerable`1,XName)
+ [m]	IEnumerable`1 InDocumentOrder(IEnumerable`1)
+ [m]	IEnumerable`1 Nodes(IEnumerable`1)
+ [m]	Void Remove(IEnumerable`1)
+ [m]	Void Remove(IEnumerable`1)

f [t] System.Xml.Linq.LoadOptions

f [t] System.Xml.Linq.ReaderOptions

f [t] System.Xml.Linq.SaveOptions

f [t] System.Xml.Linq.XAttribute
+ [m]	Void .ctor(XAttribute)
+ [m]	Void .ctor(XName,Object)
+ [m]	IEnumerable`1 get_EmptySequence()
+ [m]	Boolean get_IsNamespaceDeclaration()
+ [m]	XName get_Name()
+ [m]	XAttribute get_NextAttribute()
+ [m]	XmlNodeType get_NodeType()
+ [m]	XAttribute get_PreviousAttribute()
+ [m]	String get_Value()
+ [m]	Void set_Value(String)
+ [m]	Boolean op_Explicit(XAttribute)
+ [m]	DateTime op_Explicit(XAttribute)
+ [m]	DateTimeOffset op_Explicit(XAttribute)
+ [m]	Decimal op_Explicit(XAttribute)
+ [m]	Double op_Explicit(XAttribute)
+ [m]	Guid op_Explicit(XAttribute)
+ [m]	Int32 op_Explicit(XAttribute)
+ [m]	Int64 op_Explicit(XAttribute)
+ [m]	Nullable`1 op_Explicit(XAttribute)
+ [m]	Nullable`1 op_Explicit(XAttribute)
+ [m]	Nullable`1 op_Explicit(XAttribute)
+ [m]	Nullable`1 op_Explicit(XAttribute)
+ [m]	Nullable`1 op_Explicit(XAttribute)
+ [m]	Nullable`1 op_Explicit(XAttribute)
+ [m]	Nullable`1 op_Explicit(XAttribute)
+ [m]	Nullable`1 op_Explicit(XAttribute)
+ [m]	Nullable`1 op_Explicit(XAttribute)
+ [m]	Nullable`1 op_Explicit(XAttribute)
+ [m]	Nullable`1 op_Explicit(XAttribute)
+ [m]	Nullable`1 op_Explicit(XAttribute)
+ [m]	Single op_Explicit(XAttribute)
+ [m]	String op_Explicit(XAttribute)
+ [m]	TimeSpan op_Explicit(XAttribute)
+ [m]	UInt32 op_Explicit(XAttribute)
+ [m]	UInt64 op_Explicit(XAttribute)
+ [m]	Void Remove()
+ [m]	Void SetValue(Object)
+ [m]	String ToString()

f [t] System.Xml.Linq.XCData
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(XCData)
+ [m]	XmlNodeType get_NodeType()
+ [m]	Void WriteTo(XmlWriter)

f [t] System.Xml.Linq.XComment
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(XComment)
+ [m]	XmlNodeType get_NodeType()
+ [m]	String get_Value()
+ [m]	Void set_Value(String)
+ [m]	Void WriteTo(XmlWriter)

f [t] System.Xml.Linq.XContainer
+ [m]	Void .ctor()
+ [m]	XNode get_FirstNode()
+ [m]	XNode get_LastNode()
+ [m]	Void Add(Object)
+ [m]	Void Add(Object[])
+ [m]	Void AddFirst(Object)
+ [m]	Void AddFirst(Object[])
+ [m]	XmlWriter CreateWriter()
+ [m]	IEnumerable`1 DescendantNodes()
+ [m]	IEnumerable`1 Descendants()
+ [m]	IEnumerable`1 Descendants(XName)
+ [m]	XElement Element(XName)
+ [m]	IEnumerable`1 Elements()
+ [m]	IEnumerable`1 Elements(XName)
+ [m]	IEnumerable`1 Nodes()
+ [m]	Void RemoveNodes()
+ [m]	Void ReplaceNodes(Object)
+ [m]	Void ReplaceNodes(Object[])

f [t] System.Xml.Linq.XDeclaration
+ [m]	Void .ctor(String,String,String)
+ [m]	Void .ctor(XDeclaration)
+ [m]	String get_Encoding()
+ [m]	Void set_Encoding(String)
+ [m]	String get_Standalone()
+ [m]	Void set_Standalone(String)
+ [m]	String get_Version()
+ [m]	Void set_Version(String)
+ [m]	String ToString()

f [t] System.Xml.Linq.XDocument
+ [m]	Void .ctor()
+ [m]	Void .ctor(Object[])
+ [m]	Void .ctor(XDeclaration,Object[])
+ [m]	Void .ctor(XDocument)
+ [m]	XDeclaration get_Declaration()
+ [m]	Void set_Declaration(XDeclaration)
+ [m]	XDocumentType get_DocumentType()
+ [m]	XmlNodeType get_NodeType()
+ [m]	XElement get_Root()
+ [m]	XDocument Load(Stream)
+ [m]	XDocument Load(Stream,LoadOptions)
+ [m]	XDocument Load(TextReader)
+ [m]	XDocument Load(TextReader,LoadOptions)
+ [m]	XDocument Load(String)
+ [m]	XDocument Load(String,LoadOptions)
+ [m]	XDocument Load(XmlReader)
+ [m]	XDocument Load(XmlReader,LoadOptions)
+ [m]	XDocument Parse(String)
+ [m]	XDocument Parse(String,LoadOptions)
+ [m]	Void Save(Stream)
+ [m]	Void Save(Stream,SaveOptions)
+ [m]	Void Save(TextWriter)
+ [m]	Void Save(TextWriter,SaveOptions)
+ [m]	Void Save(XmlWriter)
+ [m]	Void WriteTo(XmlWriter)

f [t] System.Xml.Linq.XDocumentType
+ [m]	Void .ctor(String,String,String,String)
+ [m]	Void .ctor(XDocumentType)
+ [m]	String get_InternalSubset()
+ [m]	Void set_InternalSubset(String)
+ [m]	String get_Name()
+ [m]	Void set_Name(String)
+ [m]	XmlNodeType get_NodeType()
+ [m]	String get_PublicId()
+ [m]	Void set_PublicId(String)
+ [m]	String get_SystemId()
+ [m]	Void set_SystemId(String)
+ [m]	Void WriteTo(XmlWriter)

f [t] System.Xml.Linq.XElement
+ [m]	Void .ctor(XElement)
+ [m]	Void .ctor(XName)
+ [m]	Void .ctor(XName,Object)
+ [m]	Void .ctor(XName,Object[])
+ [m]	Void .ctor(XStreamingElement)
+ [m]	IEnumerable`1 get_EmptySequence()
+ [m]	XAttribute get_FirstAttribute()
+ [m]	Boolean get_HasAttributes()
+ [m]	Boolean get_HasElements()
+ [m]	Boolean get_IsEmpty()
+ [m]	XAttribute get_LastAttribute()
+ [m]	XName get_Name()
+ [m]	Void set_Name(XName)
+ [m]	XmlNodeType get_NodeType()
+ [m]	String get_Value()
+ [m]	Void set_Value(String)
+ [m]	IEnumerable`1 AncestorsAndSelf()
+ [m]	IEnumerable`1 AncestorsAndSelf(XName)
+ [m]	XAttribute Attribute(XName)
+ [m]	IEnumerable`1 Attributes()
+ [m]	IEnumerable`1 Attributes(XName)
+ [m]	IEnumerable`1 DescendantNodesAndSelf()
+ [m]	IEnumerable`1 DescendantsAndSelf()
+ [m]	IEnumerable`1 DescendantsAndSelf(XName)
+ [m]	XNamespace GetDefaultNamespace()
+ [m]	XNamespace GetNamespaceOfPrefix(String)
+ [m]	String GetPrefixOfNamespace(XNamespace)
+ [m]	XElement Load(Stream)
+ [m]	XElement Load(Stream,LoadOptions)
+ [m]	XElement Load(TextReader)
+ [m]	XElement Load(TextReader,LoadOptions)
+ [m]	XElement Load(String)
+ [m]	XElement Load(String,LoadOptions)
+ [m]	XElement Load(XmlReader)
+ [m]	XElement Load(XmlReader,LoadOptions)
+ [m]	Boolean op_Explicit(XElement)
+ [m]	DateTime op_Explicit(XElement)
+ [m]	DateTimeOffset op_Explicit(XElement)
+ [m]	Decimal op_Explicit(XElement)
+ [m]	Double op_Explicit(XElement)
+ [m]	Guid op_Explicit(XElement)
+ [m]	Int32 op_Explicit(XElement)
+ [m]	Int64 op_Explicit(XElement)
+ [m]	Nullable`1 op_Explicit(XElement)
+ [m]	Nullable`1 op_Explicit(XElement)
+ [m]	Nullable`1 op_Explicit(XElement)
+ [m]	Nullable`1 op_Explicit(XElement)
+ [m]	Nullable`1 op_Explicit(XElement)
+ [m]	Nullable`1 op_Explicit(XElement)
+ [m]	Nullable`1 op_Explicit(XElement)
+ [m]	Nullable`1 op_Explicit(XElement)
+ [m]	Nullable`1 op_Explicit(XElement)
+ [m]	Nullable`1 op_Explicit(XElement)
+ [m]	Nullable`1 op_Explicit(XElement)
+ [m]	Nullable`1 op_Explicit(XElement)
+ [m]	Single op_Explicit(XElement)
+ [m]	String op_Explicit(XElement)
+ [m]	TimeSpan op_Explicit(XElement)
+ [m]	UInt32 op_Explicit(XElement)
+ [m]	UInt64 op_Explicit(XElement)
+ [m]	XElement Parse(String)
+ [m]	XElement Parse(String,LoadOptions)
+ [m]	Void RemoveAll()
+ [m]	Void RemoveAttributes()
+ [m]	Void ReplaceAll(Object)
+ [m]	Void ReplaceAll(Object[])
+ [m]	Void ReplaceAttributes(Object)
+ [m]	Void ReplaceAttributes(Object[])
+ [m]	Void Save(Stream)
+ [m]	Void Save(Stream,SaveOptions)
+ [m]	Void Save(TextWriter)
+ [m]	Void Save(TextWriter,SaveOptions)
+ [m]	Void Save(XmlWriter)
+ [m]	Void SetAttributeValue(XName,Object)
+ [m]	Void SetElementValue(XName,Object)
+ [m]	Void SetValue(Object)
+ [m]	XmlSchema System.Xml.Serialization.IXmlSerializable.GetSchema()
+ [m]	Void System.Xml.Serialization.IXmlSerializable.ReadXml(XmlReader)
+ [m]	Void System.Xml.Serialization.IXmlSerializable.WriteXml(XmlWriter)
+ [m]	Void WriteTo(XmlWriter)
+ [m]	Void .ctor()

f [t] System.Xml.Linq.XName
- [m]	Void .ctor()
+ [m]	String get_LocalName()
+ [m]	XNamespace get_Namespace()
+ [m]	String get_NamespaceName()
+ [m]	Boolean Equals(Object)
+ [m]	XName Get(String)
+ [m]	XName Get(String,String)
+ [m]	Int32 GetHashCode()
+ [m]	Boolean op_Equality(XName,XName)
+ [m]	XName op_Implicit(String)
+ [m]	Boolean op_Inequality(XName,XName)
+ [m]	Boolean System.IEquatable<System.Xml.Linq.XName>.Equals(XName)
+ [m]	String ToString()

f [t] System.Xml.Linq.XNamespace
- [m]	Void .ctor()
+ [m]	String get_NamespaceName()
+ [m]	XNamespace get_None()
+ [m]	XNamespace get_Xml()
+ [m]	XNamespace get_Xmlns()
+ [m]	Boolean Equals(Object)
+ [m]	XNamespace Get(String)
+ [m]	Int32 GetHashCode()
+ [m]	XName GetName(String)
+ [m]	XName op_Addition(XNamespace,String)
+ [m]	Boolean op_Equality(XNamespace,XNamespace)
+ [m]	XNamespace op_Implicit(String)
+ [m]	Boolean op_Inequality(XNamespace,XNamespace)
+ [m]	String ToString()

f [t] System.Xml.Linq.XNode
+ [m]	Void .ctor()
+ [m]	XNodeDocumentOrderComparer get_DocumentOrderComparer()
+ [m]	XNodeEqualityComparer get_EqualityComparer()
+ [m]	XNode get_NextNode()
+ [m]	XNode get_PreviousNode()
+ [m]	Void AddAfterSelf(Object)
+ [m]	Void AddAfterSelf(Object[])
+ [m]	Void AddBeforeSelf(Object)
+ [m]	Void AddBeforeSelf(Object[])
+ [m]	IEnumerable`1 Ancestors()
+ [m]	IEnumerable`1 Ancestors(XName)
+ [m]	Int32 CompareDocumentOrder(XNode,XNode)
+ [m]	XmlReader CreateReader()
+ [m]	XmlReader CreateReader(ReaderOptions)
+ [m]	Boolean DeepEquals(XNode,XNode)
+ [m]	IEnumerable`1 ElementsAfterSelf()
+ [m]	IEnumerable`1 ElementsAfterSelf(XName)
+ [m]	IEnumerable`1 ElementsBeforeSelf()
+ [m]	IEnumerable`1 ElementsBeforeSelf(XName)
+ [m]	Boolean IsAfter(XNode)
+ [m]	Boolean IsBefore(XNode)
+ [m]	IEnumerable`1 NodesAfterSelf()
+ [m]	IEnumerable`1 NodesBeforeSelf()
+ [m]	XNode ReadFrom(XmlReader)
+ [m]	Void Remove()
+ [m]	Void ReplaceWith(Object)
+ [m]	Void ReplaceWith(Object[])
+ [m]	String ToString()
+ [m]	String ToString(SaveOptions)
+ [m]	Void WriteTo(XmlWriter)

f [t] System.Xml.Linq.XNodeDocumentOrderComparer
+ [m]	Void .ctor()
+ [m]	Int32 Compare(XNode,XNode)
+ [m]	Int32 System.Collections.IComparer.Compare(Object,Object)

f [t] System.Xml.Linq.XNodeEqualityComparer
+ [m]	Void .ctor()
+ [m]	Boolean Equals(XNode,XNode)
+ [m]	Int32 GetHashCode(XNode)
+ [m]	Boolean System.Collections.IEqualityComparer.Equals(Object,Object)
+ [m]	Int32 System.Collections.IEqualityComparer.GetHashCode(Object)

f [t] System.Xml.Linq.XObject
+ [m]	Void .ctor()
+ [m]	String get_BaseUri()
+ [m]	XDocument get_Document()
+ [m]	XmlNodeType get_NodeType()
+ [m]	XElement get_Parent()
+ [m]	Int32 System.Xml.IXmlLineInfo.get_LineNumber()
+ [m]	Int32 System.Xml.IXmlLineInfo.get_LinePosition()
+ [m]	Void add_Changed(EventHandler`1)
+ [m]	Void remove_Changed(EventHandler`1)
+ [m]	Void add_Changing(EventHandler`1)
+ [m]	Void remove_Changing(EventHandler`1)
+ [m]	Void AddAnnotation(Object)
+ [m]	Object Annotation(Type)
+ [m]	T Annotation()
+ [m]	IEnumerable`1 Annotations(Type)
+ [m]	IEnumerable`1 Annotations()
+ [m]	Void RemoveAnnotations(Type)
+ [m]	Void RemoveAnnotations()
+ [m]	Boolean System.Xml.IXmlLineInfo.HasLineInfo()

f [t] System.Xml.Linq.XObjectChange

f [t] System.Xml.Linq.XObjectChangeEventArgs
+ [m]	Void .ctor(XObjectChange)
+ [m]	XObjectChange get_ObjectChange()

f [t] System.Xml.Linq.XProcessingInstruction
+ [m]	Void .ctor(String,String)
+ [m]	Void .ctor(XProcessingInstruction)
+ [m]	String get_Data()
+ [m]	Void set_Data(String)
+ [m]	XmlNodeType get_NodeType()
+ [m]	String get_Target()
+ [m]	Void set_Target(String)
+ [m]	Void WriteTo(XmlWriter)

f [t] System.Xml.Linq.XStreamingElement
+ [m]	Void .ctor(XName)
+ [m]	Void .ctor(XName,Object)
+ [m]	Void .ctor(XName,Object[])
+ [m]	XName get_Name()
+ [m]	Void set_Name(XName)
+ [m]	Void Add(Object)
+ [m]	Void Add(Object[])
+ [m]	Void Save(Stream)
+ [m]	Void Save(Stream,SaveOptions)
+ [m]	Void Save(TextWriter)
+ [m]	Void Save(TextWriter,SaveOptions)
+ [m]	Void Save(XmlWriter)
+ [m]	String ToString()
+ [m]	String ToString(SaveOptions)
+ [m]	Void WriteTo(XmlWriter)

f [t] System.Xml.Linq.XText
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(XText)
+ [m]	XmlNodeType get_NodeType()
+ [m]	String get_Value()
+ [m]	Void set_Value(String)
+ [m]	Void WriteTo(XmlWriter)

---------------------------------------
+ [a] System.Xml.XPath.dll
ref: ./netstandard/packages/System.Xml.XPath/ref/netstandard1.3/System.Xml.XPath.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Xml.XPath.dll

f [t] System.Xml.XmlNodeOrder

f [t] System.Xml.XPath.IXPathNavigable
+ [m]	XPathNavigator CreateNavigator()

f [t] System.Xml.XPath.XmlCaseOrder

f [t] System.Xml.XPath.XmlDataType

f [t] System.Xml.XPath.XmlSortOrder

f [t] System.Xml.XPath.XPathDocument
+ [m]	Void .ctor(Stream)
+ [m]	Void .ctor(TextReader)
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,XmlSpace)
+ [m]	Void .ctor(XmlReader)
+ [m]	Void .ctor(XmlReader,XmlSpace)
+ [m]	XPathNavigator CreateNavigator()

f [t] System.Xml.XPath.XPathException
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Exception)

f [t] System.Xml.XPath.XPathExpression
+ [m]	Void .ctor()
+ [m]	String get_Expression()
+ [m]	XPathResultType get_ReturnType()
+ [m]	Void AddSort(Object,IComparer)
+ [m]	Void AddSort(Object,XmlSortOrder,XmlCaseOrder,String,XmlDataType)
+ [m]	XPathExpression Clone()
+ [m]	XPathExpression Compile(String)
+ [m]	XPathExpression Compile(String,IXmlNamespaceResolver)
+ [m]	Void SetContext(IXmlNamespaceResolver)
+ [m]	Void SetContext(XmlNamespaceManager)

f [t] System.Xml.XPath.XPathItem
+ [m]	Void .ctor()
+ [m]	Boolean get_IsNode()
+ [m]	Object get_TypedValue()
+ [m]	String get_Value()
+ [m]	Boolean get_ValueAsBoolean()
+ [m]	DateTime get_ValueAsDateTime()
+ [m]	Double get_ValueAsDouble()
+ [m]	Int32 get_ValueAsInt()
+ [m]	Int64 get_ValueAsLong()
+ [m]	Type get_ValueType()
+ [m]	Object ValueAs(Type)
+ [m]	Object ValueAs(Type,IXmlNamespaceResolver)

f [t] System.Xml.XPath.XPathNamespaceScope

f [t] System.Xml.XPath.XPathNavigator
+ [m]	Void .ctor()
+ [m]	String get_BaseURI()
+ [m]	Boolean get_CanEdit()
+ [m]	Boolean get_HasAttributes()
+ [m]	Boolean get_HasChildren()
+ [m]	String get_InnerXml()
+ [m]	Void set_InnerXml(String)
+ [m]	Boolean get_IsEmptyElement()
+ [m]	Boolean get_IsNode()
+ [m]	String get_LocalName()
+ [m]	String get_Name()
+ [m]	String get_NamespaceURI()
+ [m]	XmlNameTable get_NameTable()
+ [m]	IEqualityComparer get_NavigatorComparer()
+ [m]	XPathNodeType get_NodeType()
+ [m]	String get_OuterXml()
+ [m]	Void set_OuterXml(String)
+ [m]	String get_Prefix()
+ [m]	Object get_TypedValue()
+ [m]	Object get_UnderlyingObject()
+ [m]	Boolean get_ValueAsBoolean()
+ [m]	DateTime get_ValueAsDateTime()
+ [m]	Double get_ValueAsDouble()
+ [m]	Int32 get_ValueAsInt()
+ [m]	Int64 get_ValueAsLong()
+ [m]	Type get_ValueType()
+ [m]	String get_XmlLang()
+ [m]	XmlWriter AppendChild()
+ [m]	Void AppendChild(String)
+ [m]	Void AppendChild(XmlReader)
+ [m]	Void AppendChild(XPathNavigator)
+ [m]	Void AppendChildElement(String,String,String,String)
+ [m]	XPathNavigator Clone()
+ [m]	XmlNodeOrder ComparePosition(XPathNavigator)
+ [m]	XPathExpression Compile(String)
+ [m]	Void CreateAttribute(String,String,String,String)
+ [m]	XmlWriter CreateAttributes()
+ [m]	XPathNavigator CreateNavigator()
+ [m]	Void DeleteRange(XPathNavigator)
+ [m]	Void DeleteSelf()
+ [m]	Object Evaluate(String)
+ [m]	Object Evaluate(String,IXmlNamespaceResolver)
+ [m]	Object Evaluate(XPathExpression)
+ [m]	Object Evaluate(XPathExpression,XPathNodeIterator)
+ [m]	String GetAttribute(String,String)
+ [m]	String GetNamespace(String)
+ [m]	IDictionary`2 GetNamespacesInScope(XmlNamespaceScope)
+ [m]	XmlWriter InsertAfter()
+ [m]	Void InsertAfter(String)
+ [m]	Void InsertAfter(XmlReader)
+ [m]	Void InsertAfter(XPathNavigator)
+ [m]	XmlWriter InsertBefore()
+ [m]	Void InsertBefore(String)
+ [m]	Void InsertBefore(XmlReader)
+ [m]	Void InsertBefore(XPathNavigator)
+ [m]	Void InsertElementAfter(String,String,String,String)
+ [m]	Void InsertElementBefore(String,String,String,String)
+ [m]	Boolean IsDescendant(XPathNavigator)
+ [m]	Boolean IsSamePosition(XPathNavigator)
+ [m]	String LookupNamespace(String)
+ [m]	String LookupPrefix(String)
+ [m]	Boolean Matches(String)
+ [m]	Boolean Matches(XPathExpression)
+ [m]	Boolean MoveTo(XPathNavigator)
+ [m]	Boolean MoveToAttribute(String,String)
+ [m]	Boolean MoveToChild(String,String)
+ [m]	Boolean MoveToChild(XPathNodeType)
+ [m]	Boolean MoveToFirst()
+ [m]	Boolean MoveToFirstAttribute()
+ [m]	Boolean MoveToFirstChild()
+ [m]	Boolean MoveToFirstNamespace()
+ [m]	Boolean MoveToFirstNamespace(XPathNamespaceScope)
+ [m]	Boolean MoveToFollowing(String,String)
+ [m]	Boolean MoveToFollowing(String,String,XPathNavigator)
+ [m]	Boolean MoveToFollowing(XPathNodeType)
+ [m]	Boolean MoveToFollowing(XPathNodeType,XPathNavigator)
+ [m]	Boolean MoveToId(String)
+ [m]	Boolean MoveToNamespace(String)
+ [m]	Boolean MoveToNext()
+ [m]	Boolean MoveToNext(String,String)
+ [m]	Boolean MoveToNext(XPathNodeType)
+ [m]	Boolean MoveToNextAttribute()
+ [m]	Boolean MoveToNextNamespace()
+ [m]	Boolean MoveToNextNamespace(XPathNamespaceScope)
+ [m]	Boolean MoveToParent()
+ [m]	Boolean MoveToPrevious()
+ [m]	Void MoveToRoot()
+ [m]	XmlWriter PrependChild()
+ [m]	Void PrependChild(String)
+ [m]	Void PrependChild(XmlReader)
+ [m]	Void PrependChild(XPathNavigator)
+ [m]	Void PrependChildElement(String,String,String,String)
+ [m]	XmlReader ReadSubtree()
+ [m]	XmlWriter ReplaceRange(XPathNavigator)
+ [m]	Void ReplaceSelf(String)
+ [m]	Void ReplaceSelf(XmlReader)
+ [m]	Void ReplaceSelf(XPathNavigator)
+ [m]	XPathNodeIterator Select(String)
+ [m]	XPathNodeIterator Select(String,IXmlNamespaceResolver)
+ [m]	XPathNodeIterator Select(XPathExpression)
+ [m]	XPathNodeIterator SelectAncestors(String,String,Boolean)
+ [m]	XPathNodeIterator SelectAncestors(XPathNodeType,Boolean)
+ [m]	XPathNodeIterator SelectChildren(String,String)
+ [m]	XPathNodeIterator SelectChildren(XPathNodeType)
+ [m]	XPathNodeIterator SelectDescendants(String,String,Boolean)
+ [m]	XPathNodeIterator SelectDescendants(XPathNodeType,Boolean)
+ [m]	XPathNavigator SelectSingleNode(String)
+ [m]	XPathNavigator SelectSingleNode(String,IXmlNamespaceResolver)
+ [m]	XPathNavigator SelectSingleNode(XPathExpression)
+ [m]	Void SetTypedValue(Object)
+ [m]	Void SetValue(String)
+ [m]	String ToString()
+ [m]	Object ValueAs(Type,IXmlNamespaceResolver)
+ [m]	Void WriteSubtree(XmlWriter)

f [t] System.Xml.XPath.XPathNodeIterator
+ [m]	Void .ctor()
+ [m]	Int32 get_Count()
+ [m]	XPathNavigator get_Current()
+ [m]	Int32 get_CurrentPosition()
+ [m]	XPathNodeIterator Clone()
+ [m]	IEnumerator GetEnumerator()
+ [m]	Boolean MoveNext()

f [t] System.Xml.XPath.XPathNodeType

f [t] System.Xml.XPath.XPathResultType

---------------------------------------
+ [a] System.Xml.XPath.XDocument.dll
ref: ./netstandard/packages/System.Xml.XPath.XDocument/ref/netstandard1.3/System.Xml.XPath.XDocument.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Xml.XPath.XDocument.dll

f [t] System.Xml.XPath.Extensions
+ [m]	XPathNavigator CreateNavigator(XNode)
+ [m]	XPathNavigator CreateNavigator(XNode,XmlNameTable)
+ [m]	Object XPathEvaluate(XNode,String)
+ [m]	Object XPathEvaluate(XNode,String,IXmlNamespaceResolver)
+ [m]	XElement XPathSelectElement(XNode,String)
+ [m]	XElement XPathSelectElement(XNode,String,IXmlNamespaceResolver)
+ [m]	IEnumerable`1 XPathSelectElements(XNode,String)
+ [m]	IEnumerable`1 XPathSelectElements(XNode,String,IXmlNamespaceResolver)

+ [t] System.Xml.XPath.XDocumentExtensions
+ [m]	IXPathNavigable ToXPathNavigable(XNode)

---------------------------------------
+ [a] System.Xml.XPath.XmlDocument.dll
ref: ./netstandard/packages/System.Xml.XPath.XmlDocument/ref/netstandard1.3/System.Xml.XPath.XmlDocument.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/mono/2.1/System.Xml.XPath.XmlDocument.dll

+ [t] System.Xml.XmlDocumentXPathExtensions
! [m]	XmlNodeList SelectNodes(XmlNode,String)
! [m]	XmlNodeList SelectNodes(XmlNode,String,XmlNamespaceManager)
! [m]	XmlNode SelectSingleNode(XmlNode,String)
! [m]	XmlNode SelectSingleNode(XmlNode,String,XmlNamespaceManager)
! [m]	XPathNavigator CreateNavigator(XmlNode)
! [m]	IXPathNavigable ToXPathNavigable(XmlNode)
! [m]	XPathNavigator CreateNavigator(XmlDocument)
! [m]	XPathNavigator CreateNavigator(XmlDocument,XmlNode)

---------------------------------------
+ [a] System.Xml.XmlDocument.dll
ref: ./netstandard/packages/System.Xml.XmlDocument/ref/netstandard1.3/System.Xml.XmlDocument.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Xml.XmlDocument.dll

f [t] System.Xml.XmlAttribute
+ [m]	Void .ctor(String,String,String,XmlDocument)
+ [m]	String get_BaseURI()
+ [m]	Void set_InnerText(String)
+ [m]	Void set_InnerXml(String)
+ [m]	String get_LocalName()
+ [m]	String get_Name()
+ [m]	String get_NamespaceURI()
+ [m]	XmlNodeType get_NodeType()
+ [m]	XmlDocument get_OwnerDocument()
+ [m]	XmlElement get_OwnerElement()
+ [m]	XmlNode get_ParentNode()
+ [m]	String get_Prefix()
+ [m]	Void set_Prefix(String)
+ [m]	Boolean get_Specified()
+ [m]	String get_Value()
+ [m]	Void set_Value(String)
+ [m]	XmlNode AppendChild(XmlNode)
+ [m]	XmlNode CloneNode(Boolean)
+ [m]	XmlNode InsertAfter(XmlNode,XmlNode)
+ [m]	XmlNode InsertBefore(XmlNode,XmlNode)
+ [m]	XmlNode PrependChild(XmlNode)
+ [m]	XmlNode RemoveChild(XmlNode)
+ [m]	XmlNode ReplaceChild(XmlNode,XmlNode)
+ [m]	Void WriteContentTo(XmlWriter)
+ [m]	Void WriteTo(XmlWriter)

f [t] System.Xml.XmlAttributeCollection
- [m]	Void .ctor()
+ [m]	XmlAttribute get_ItemOf(Int32)
+ [m]	XmlAttribute get_ItemOf(String)
+ [m]	XmlAttribute get_ItemOf(String,String)
+ [m]	Int32 System.Collections.ICollection.get_Count()
+ [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
+ [m]	Object System.Collections.ICollection.get_SyncRoot()
+ [m]	XmlAttribute Append(XmlAttribute)
+ [m]	Void CopyTo(XmlAttribute[],Int32)
+ [m]	XmlAttribute InsertAfter(XmlAttribute,XmlAttribute)
+ [m]	XmlAttribute InsertBefore(XmlAttribute,XmlAttribute)
+ [m]	XmlAttribute Prepend(XmlAttribute)
+ [m]	XmlAttribute Remove(XmlAttribute)
+ [m]	Void RemoveAll()
+ [m]	XmlAttribute RemoveAt(Int32)
+ [m]	XmlNode SetNamedItem(XmlNode)
+ [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)

f [t] System.Xml.XmlCDataSection
+ [m]	Void .ctor(String,XmlDocument)
+ [m]	String get_LocalName()
+ [m]	String get_Name()
+ [m]	XmlNodeType get_NodeType()
+ [m]	XmlNode get_ParentNode()
+ [m]	XmlNode get_PreviousText()
+ [m]	XmlNode CloneNode(Boolean)
+ [m]	Void WriteContentTo(XmlWriter)
+ [m]	Void WriteTo(XmlWriter)

f [t] System.Xml.XmlCharacterData
+ [m]	Void .ctor(String,XmlDocument)
+ [m]	String get_Data()
+ [m]	Void set_Data(String)
+ [m]	Int32 get_Length()
+ [m]	String get_Value()
+ [m]	Void set_Value(String)
+ [m]	Void AppendData(String)
+ [m]	Void DeleteData(Int32,Int32)
+ [m]	Void InsertData(Int32,String)
+ [m]	Void ReplaceData(Int32,Int32,String)
+ [m]	String Substring(Int32,Int32)

f [t] System.Xml.XmlComment
+ [m]	Void .ctor(String,XmlDocument)
+ [m]	String get_LocalName()
+ [m]	String get_Name()
+ [m]	XmlNodeType get_NodeType()
+ [m]	XmlNode CloneNode(Boolean)
+ [m]	Void WriteContentTo(XmlWriter)
+ [m]	Void WriteTo(XmlWriter)

f [t] System.Xml.XmlDeclaration
+ [m]	Void .ctor(String,String,String,XmlDocument)
+ [m]	String get_Encoding()
+ [m]	Void set_Encoding(String)
+ [m]	String get_InnerText()
+ [m]	Void set_InnerText(String)
+ [m]	String get_LocalName()
+ [m]	String get_Name()
+ [m]	XmlNodeType get_NodeType()
+ [m]	String get_Standalone()
+ [m]	Void set_Standalone(String)
+ [m]	String get_Value()
+ [m]	Void set_Value(String)
+ [m]	String get_Version()
+ [m]	XmlNode CloneNode(Boolean)
+ [m]	Void WriteContentTo(XmlWriter)
+ [m]	Void WriteTo(XmlWriter)

f [t] System.Xml.XmlDocument
+ [m]	Void .ctor()
+ [m]	Void .ctor(XmlImplementation)
+ [m]	Void .ctor(XmlNameTable)
+ [m]	String get_BaseURI()
+ [m]	XmlElement get_DocumentElement()
+ [m]	XmlImplementation get_Implementation()
+ [m]	Void set_InnerText(String)
+ [m]	String get_InnerXml()
+ [m]	Void set_InnerXml(String)
+ [m]	Boolean get_IsReadOnly()
+ [m]	String get_LocalName()
+ [m]	String get_Name()
+ [m]	XmlNameTable get_NameTable()
+ [m]	XmlNodeType get_NodeType()
+ [m]	XmlDocument get_OwnerDocument()
+ [m]	XmlNode get_ParentNode()
+ [m]	Boolean get_PreserveWhitespace()
+ [m]	Void set_PreserveWhitespace(Boolean)
+ [m]	Void add_NodeChanged(XmlNodeChangedEventHandler)
+ [m]	Void remove_NodeChanged(XmlNodeChangedEventHandler)
+ [m]	Void add_NodeChanging(XmlNodeChangedEventHandler)
+ [m]	Void remove_NodeChanging(XmlNodeChangedEventHandler)
+ [m]	Void add_NodeInserted(XmlNodeChangedEventHandler)
+ [m]	Void remove_NodeInserted(XmlNodeChangedEventHandler)
+ [m]	Void add_NodeInserting(XmlNodeChangedEventHandler)
+ [m]	Void remove_NodeInserting(XmlNodeChangedEventHandler)
+ [m]	Void add_NodeRemoved(XmlNodeChangedEventHandler)
+ [m]	Void remove_NodeRemoved(XmlNodeChangedEventHandler)
+ [m]	Void add_NodeRemoving(XmlNodeChangedEventHandler)
+ [m]	Void remove_NodeRemoving(XmlNodeChangedEventHandler)
+ [m]	XmlNode CloneNode(Boolean)
+ [m]	XmlAttribute CreateAttribute(String)
+ [m]	XmlAttribute CreateAttribute(String,String)
+ [m]	XmlAttribute CreateAttribute(String,String,String)
+ [m]	XmlCDataSection CreateCDataSection(String)
+ [m]	XmlComment CreateComment(String)
+ [m]	XmlDocumentFragment CreateDocumentFragment()
+ [m]	XmlElement CreateElement(String)
+ [m]	XmlElement CreateElement(String,String)
+ [m]	XmlElement CreateElement(String,String,String)
+ [m]	XmlNode CreateNode(String,String,String)
+ [m]	XmlNode CreateNode(XmlNodeType,String,String)
+ [m]	XmlNode CreateNode(XmlNodeType,String,String,String)
+ [m]	XmlProcessingInstruction CreateProcessingInstruction(String,String)
+ [m]	XmlSignificantWhitespace CreateSignificantWhitespace(String)
+ [m]	XmlText CreateTextNode(String)
+ [m]	XmlWhitespace CreateWhitespace(String)
+ [m]	XmlDeclaration CreateXmlDeclaration(String,String,String)
+ [m]	XmlNodeList GetElementsByTagName(String)
+ [m]	XmlNodeList GetElementsByTagName(String,String)
+ [m]	XmlNode ImportNode(XmlNode,Boolean)
+ [m]	Void Load(Stream)
+ [m]	Void Load(TextReader)
+ [m]	Void Load(XmlReader)
+ [m]	Void LoadXml(String)
+ [m]	XmlNode ReadNode(XmlReader)
+ [m]	Void Save(Stream)
+ [m]	Void Save(TextWriter)
+ [m]	Void Save(XmlWriter)
+ [m]	Void WriteContentTo(XmlWriter)
+ [m]	Void WriteTo(XmlWriter)

f [t] System.Xml.XmlDocumentFragment
+ [m]	Void .ctor(XmlDocument)
+ [m]	String get_InnerXml()
+ [m]	Void set_InnerXml(String)
+ [m]	String get_LocalName()
+ [m]	String get_Name()
+ [m]	XmlNodeType get_NodeType()
+ [m]	XmlDocument get_OwnerDocument()
+ [m]	XmlNode get_ParentNode()
+ [m]	XmlNode CloneNode(Boolean)
+ [m]	Void WriteContentTo(XmlWriter)
+ [m]	Void WriteTo(XmlWriter)

f [t] System.Xml.XmlElement
+ [m]	Void .ctor(String,String,String,XmlDocument)
+ [m]	XmlAttributeCollection get_Attributes()
+ [m]	Boolean get_HasAttributes()
+ [m]	String get_InnerText()
+ [m]	Void set_InnerText(String)
+ [m]	String get_InnerXml()
+ [m]	Void set_InnerXml(String)
+ [m]	Boolean get_IsEmpty()
+ [m]	Void set_IsEmpty(Boolean)
+ [m]	String get_LocalName()
+ [m]	String get_Name()
+ [m]	String get_NamespaceURI()
+ [m]	XmlNode get_NextSibling()
+ [m]	XmlNodeType get_NodeType()
+ [m]	XmlDocument get_OwnerDocument()
+ [m]	XmlNode get_ParentNode()
+ [m]	String get_Prefix()
+ [m]	Void set_Prefix(String)
+ [m]	XmlNode CloneNode(Boolean)
+ [m]	String GetAttribute(String)
+ [m]	String GetAttribute(String,String)
+ [m]	XmlAttribute GetAttributeNode(String)
+ [m]	XmlAttribute GetAttributeNode(String,String)
+ [m]	XmlNodeList GetElementsByTagName(String)
+ [m]	XmlNodeList GetElementsByTagName(String,String)
+ [m]	Boolean HasAttribute(String)
+ [m]	Boolean HasAttribute(String,String)
+ [m]	Void RemoveAll()
+ [m]	Void RemoveAllAttributes()
+ [m]	Void RemoveAttribute(String)
+ [m]	Void RemoveAttribute(String,String)
+ [m]	XmlNode RemoveAttributeAt(Int32)
+ [m]	XmlAttribute RemoveAttributeNode(String,String)
+ [m]	XmlAttribute RemoveAttributeNode(XmlAttribute)
+ [m]	Void SetAttribute(String,String)
+ [m]	String SetAttribute(String,String,String)
+ [m]	XmlAttribute SetAttributeNode(String,String)
+ [m]	XmlAttribute SetAttributeNode(XmlAttribute)
+ [m]	Void WriteContentTo(XmlWriter)
+ [m]	Void WriteTo(XmlWriter)

f [t] System.Xml.XmlImplementation
+ [m]	Void .ctor()
+ [m]	Void .ctor(XmlNameTable)
+ [m]	XmlDocument CreateDocument()
+ [m]	Boolean HasFeature(String,String)

f [t] System.Xml.XmlLinkedNode
+ [m]	Void .ctor()
+ [m]	XmlNode get_NextSibling()
+ [m]	XmlNode get_PreviousSibling()

f [t] System.Xml.XmlNamedNodeMap
- [m]	Void .ctor()
+ [m]	Int32 get_Count()
+ [m]	IEnumerator GetEnumerator()
+ [m]	XmlNode GetNamedItem(String)
+ [m]	XmlNode GetNamedItem(String,String)
+ [m]	XmlNode Item(Int32)
+ [m]	XmlNode RemoveNamedItem(String)
+ [m]	XmlNode RemoveNamedItem(String,String)
+ [m]	XmlNode SetNamedItem(XmlNode)

f [t] System.Xml.XmlNode
+ [m]	Void .ctor()
+ [m]	XmlAttributeCollection get_Attributes()
+ [m]	String get_BaseURI()
+ [m]	XmlNodeList get_ChildNodes()
+ [m]	XmlNode get_FirstChild()
+ [m]	Boolean get_HasChildNodes()
+ [m]	String get_InnerText()
+ [m]	Void set_InnerText(String)
+ [m]	String get_InnerXml()
+ [m]	Void set_InnerXml(String)
+ [m]	Boolean get_IsReadOnly()
+ [m]	XmlElement get_Item(String)
+ [m]	XmlElement get_Item(String,String)
+ [m]	XmlNode get_LastChild()
+ [m]	String get_LocalName()
+ [m]	String get_Name()
+ [m]	String get_NamespaceURI()
+ [m]	XmlNode get_NextSibling()
+ [m]	XmlNodeType get_NodeType()
+ [m]	String get_OuterXml()
+ [m]	XmlDocument get_OwnerDocument()
+ [m]	XmlNode get_ParentNode()
+ [m]	String get_Prefix()
+ [m]	Void set_Prefix(String)
+ [m]	XmlNode get_PreviousSibling()
+ [m]	XmlNode get_PreviousText()
+ [m]	String get_Value()
+ [m]	Void set_Value(String)
+ [m]	XmlNode AppendChild(XmlNode)
+ [m]	XmlNode CloneNode(Boolean)
+ [m]	IEnumerator GetEnumerator()
+ [m]	String GetNamespaceOfPrefix(String)
+ [m]	String GetPrefixOfNamespace(String)
+ [m]	XmlNode InsertAfter(XmlNode,XmlNode)
+ [m]	XmlNode InsertBefore(XmlNode,XmlNode)
+ [m]	Void Normalize()
+ [m]	XmlNode PrependChild(XmlNode)
+ [m]	Void RemoveAll()
+ [m]	XmlNode RemoveChild(XmlNode)
+ [m]	XmlNode ReplaceChild(XmlNode,XmlNode)
+ [m]	Boolean Supports(String,String)
+ [m]	IEnumerator System.Collections.IEnumerable.GetEnumerator()
+ [m]	Void WriteContentTo(XmlWriter)
+ [m]	Void WriteTo(XmlWriter)

f [t] System.Xml.XmlNodeChangedAction

f [t] System.Xml.XmlNodeChangedEventArgs
+ [m]	Void .ctor(XmlNode,XmlNode,XmlNode,String,String,XmlNodeChangedAction)
+ [m]	XmlNodeChangedAction get_Action()
+ [m]	XmlNode get_NewParent()
+ [m]	String get_NewValue()
+ [m]	XmlNode get_Node()
+ [m]	XmlNode get_OldParent()
+ [m]	String get_OldValue()

f [t] System.Xml.XmlNodeChangedEventHandler
+ [m]	Void .ctor(Object,IntPtr)
+ [m]	Void Invoke(Object,XmlNodeChangedEventArgs)
+ [m]	IAsyncResult BeginInvoke(Object,XmlNodeChangedEventArgs,AsyncCallback,Object)
+ [m]	Void EndInvoke(IAsyncResult)

f [t] System.Xml.XmlNodeList
+ [m]	Void .ctor()
+ [m]	Int32 get_Count()
+ [m]	XmlNode get_ItemOf(Int32)
+ [m]	IEnumerator GetEnumerator()
+ [m]	XmlNode Item(Int32)
+ [m]	Void PrivateDisposeNodeList()
+ [m]	Void System.IDisposable.Dispose()

f [t] System.Xml.XmlProcessingInstruction
+ [m]	Void .ctor(String,String,XmlDocument)
+ [m]	String get_Data()
+ [m]	Void set_Data(String)
+ [m]	String get_InnerText()
+ [m]	Void set_InnerText(String)
+ [m]	String get_LocalName()
+ [m]	String get_Name()
+ [m]	XmlNodeType get_NodeType()
+ [m]	String get_Target()
+ [m]	String get_Value()
+ [m]	Void set_Value(String)
+ [m]	XmlNode CloneNode(Boolean)
+ [m]	Void WriteContentTo(XmlWriter)
+ [m]	Void WriteTo(XmlWriter)

f [t] System.Xml.XmlSignificantWhitespace
+ [m]	Void .ctor(String,XmlDocument)
+ [m]	String get_LocalName()
+ [m]	String get_Name()
+ [m]	XmlNodeType get_NodeType()
+ [m]	XmlNode get_ParentNode()
+ [m]	XmlNode get_PreviousText()
+ [m]	String get_Value()
+ [m]	Void set_Value(String)
+ [m]	XmlNode CloneNode(Boolean)
+ [m]	Void WriteContentTo(XmlWriter)
+ [m]	Void WriteTo(XmlWriter)

f [t] System.Xml.XmlText
+ [m]	Void .ctor(String,XmlDocument)
+ [m]	String get_LocalName()
+ [m]	String get_Name()
+ [m]	XmlNodeType get_NodeType()
+ [m]	XmlNode get_ParentNode()
+ [m]	XmlNode get_PreviousText()
+ [m]	String get_Value()
+ [m]	Void set_Value(String)
+ [m]	XmlNode CloneNode(Boolean)
+ [m]	XmlText SplitText(Int32)
+ [m]	Void WriteContentTo(XmlWriter)
+ [m]	Void WriteTo(XmlWriter)

f [t] System.Xml.XmlWhitespace
+ [m]	Void .ctor(String,XmlDocument)
+ [m]	String get_LocalName()
+ [m]	String get_Name()
+ [m]	XmlNodeType get_NodeType()
+ [m]	XmlNode get_ParentNode()
+ [m]	XmlNode get_PreviousText()
+ [m]	String get_Value()
+ [m]	Void set_Value(String)
+ [m]	XmlNode CloneNode(Boolean)
+ [m]	Void WriteContentTo(XmlWriter)
+ [m]	Void WriteTo(XmlWriter)

---------------------------------------
+ [a] System.Xml.XmlSerializer.dll
ref: ./netstandard/packages/System.Xml.XmlSerializer/ref/netstandard1.3/System.Xml.XmlSerializer.dll
runtime: /Library/Frameworks/Xamarin.Android.framework/Versions/Current/lib/xbuild-frameworks/MonoAndroid/v1.0/Facades/System.Xml.XmlSerializer.dll

f [t] System.Xml.Serialization.XmlAnyAttributeAttribute
+ [m]	Void .ctor()

f [t] System.Xml.Serialization.XmlAnyElementAttribute
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,String)
+ [m]	String get_Name()
+ [m]	Void set_Name(String)
+ [m]	String get_Namespace()
+ [m]	Void set_Namespace(String)
+ [m]	Int32 get_Order()
+ [m]	Void set_Order(Int32)

f [t] System.Xml.Serialization.XmlAnyElementAttributes
+ [m]	Void .ctor()
+ [m]	XmlAnyElementAttribute get_Item(Int32)
+ [m]	Void set_Item(Int32,XmlAnyElementAttribute)
+ [m]	Int32 Add(XmlAnyElementAttribute)
+ [m]	Boolean Contains(XmlAnyElementAttribute)
+ [m]	Void CopyTo(XmlAnyElementAttribute[],Int32)
+ [m]	Int32 IndexOf(XmlAnyElementAttribute)
+ [m]	Void Insert(Int32,XmlAnyElementAttribute)
+ [m]	Void Remove(XmlAnyElementAttribute)
- [m]	Int32 get_Count()
- [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
- [m]	Object System.Collections.ICollection.get_SyncRoot()
- [m]	Boolean System.Collections.IList.get_IsFixedSize()
- [m]	Boolean System.Collections.IList.get_IsReadOnly()
- [m]	Object System.Collections.IList.get_Item(Int32)
- [m]	Void System.Collections.IList.set_Item(Int32,Object)
- [m]	Void Clear()
- [m]	IEnumerator GetEnumerator()
- [m]	Void RemoveAt(Int32)
- [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
- [m]	Int32 System.Collections.IList.Add(Object)
- [m]	Boolean System.Collections.IList.Contains(Object)
- [m]	Int32 System.Collections.IList.IndexOf(Object)
- [m]	Void System.Collections.IList.Insert(Int32,Object)
- [m]	Void System.Collections.IList.Remove(Object)

f [t] System.Xml.Serialization.XmlArrayAttribute
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	String get_ElementName()
+ [m]	Void set_ElementName(String)
+ [m]	XmlSchemaForm get_Form()
+ [m]	Void set_Form(XmlSchemaForm)
+ [m]	Boolean get_IsNullable()
+ [m]	Void set_IsNullable(Boolean)
+ [m]	String get_Namespace()
+ [m]	Void set_Namespace(String)
+ [m]	Int32 get_Order()
+ [m]	Void set_Order(Int32)

f [t] System.Xml.Serialization.XmlArrayItemAttribute
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Type)
+ [m]	Void .ctor(Type)
+ [m]	String get_DataType()
+ [m]	Void set_DataType(String)
+ [m]	String get_ElementName()
+ [m]	Void set_ElementName(String)
+ [m]	XmlSchemaForm get_Form()
+ [m]	Void set_Form(XmlSchemaForm)
+ [m]	Boolean get_IsNullable()
+ [m]	Void set_IsNullable(Boolean)
+ [m]	String get_Namespace()
+ [m]	Void set_Namespace(String)
+ [m]	Int32 get_NestingLevel()
+ [m]	Void set_NestingLevel(Int32)
+ [m]	Type get_Type()
+ [m]	Void set_Type(Type)

f [t] System.Xml.Serialization.XmlArrayItemAttributes
+ [m]	Void .ctor()
+ [m]	XmlArrayItemAttribute get_Item(Int32)
+ [m]	Void set_Item(Int32,XmlArrayItemAttribute)
+ [m]	Int32 Add(XmlArrayItemAttribute)
+ [m]	Boolean Contains(XmlArrayItemAttribute)
+ [m]	Void CopyTo(XmlArrayItemAttribute[],Int32)
+ [m]	Int32 IndexOf(XmlArrayItemAttribute)
+ [m]	Void Insert(Int32,XmlArrayItemAttribute)
+ [m]	Void Remove(XmlArrayItemAttribute)
- [m]	Int32 get_Count()
- [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
- [m]	Object System.Collections.ICollection.get_SyncRoot()
- [m]	Boolean System.Collections.IList.get_IsFixedSize()
- [m]	Boolean System.Collections.IList.get_IsReadOnly()
- [m]	Object System.Collections.IList.get_Item(Int32)
- [m]	Void System.Collections.IList.set_Item(Int32,Object)
- [m]	Void Clear()
- [m]	IEnumerator GetEnumerator()
- [m]	Void RemoveAt(Int32)
- [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
- [m]	Int32 System.Collections.IList.Add(Object)
- [m]	Boolean System.Collections.IList.Contains(Object)
- [m]	Int32 System.Collections.IList.IndexOf(Object)
- [m]	Void System.Collections.IList.Insert(Int32,Object)
- [m]	Void System.Collections.IList.Remove(Object)

f [t] System.Xml.Serialization.XmlAttributeAttribute
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Type)
+ [m]	Void .ctor(Type)
+ [m]	String get_AttributeName()
+ [m]	Void set_AttributeName(String)
+ [m]	String get_DataType()
+ [m]	Void set_DataType(String)
+ [m]	XmlSchemaForm get_Form()
+ [m]	Void set_Form(XmlSchemaForm)
+ [m]	String get_Namespace()
+ [m]	Void set_Namespace(String)
+ [m]	Type get_Type()
+ [m]	Void set_Type(Type)

f [t] System.Xml.Serialization.XmlAttributeOverrides
+ [m]	Void .ctor()
+ [m]	XmlAttributes get_Item(Type)
+ [m]	XmlAttributes get_Item(Type,String)
+ [m]	Void Add(Type,String,XmlAttributes)
+ [m]	Void Add(Type,XmlAttributes)

f [t] System.Xml.Serialization.XmlAttributes
+ [m]	Void .ctor()
+ [m]	XmlAnyAttributeAttribute get_XmlAnyAttribute()
+ [m]	Void set_XmlAnyAttribute(XmlAnyAttributeAttribute)
+ [m]	XmlAnyElementAttributes get_XmlAnyElements()
+ [m]	XmlArrayAttribute get_XmlArray()
+ [m]	Void set_XmlArray(XmlArrayAttribute)
+ [m]	XmlArrayItemAttributes get_XmlArrayItems()
+ [m]	XmlAttributeAttribute get_XmlAttribute()
+ [m]	Void set_XmlAttribute(XmlAttributeAttribute)
+ [m]	XmlChoiceIdentifierAttribute get_XmlChoiceIdentifier()
+ [m]	Object get_XmlDefaultValue()
+ [m]	Void set_XmlDefaultValue(Object)
+ [m]	XmlElementAttributes get_XmlElements()
+ [m]	XmlEnumAttribute get_XmlEnum()
+ [m]	Void set_XmlEnum(XmlEnumAttribute)
+ [m]	Boolean get_XmlIgnore()
+ [m]	Void set_XmlIgnore(Boolean)
+ [m]	Boolean get_Xmlns()
+ [m]	Void set_Xmlns(Boolean)
+ [m]	XmlRootAttribute get_XmlRoot()
+ [m]	Void set_XmlRoot(XmlRootAttribute)
+ [m]	XmlTextAttribute get_XmlText()
+ [m]	Void set_XmlText(XmlTextAttribute)
+ [m]	XmlTypeAttribute get_XmlType()
+ [m]	Void set_XmlType(XmlTypeAttribute)

f [t] System.Xml.Serialization.XmlChoiceIdentifierAttribute
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	String get_MemberName()
+ [m]	Void set_MemberName(String)

f [t] System.Xml.Serialization.XmlElementAttribute
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Void .ctor(String,Type)
+ [m]	Void .ctor(Type)
+ [m]	String get_DataType()
+ [m]	Void set_DataType(String)
+ [m]	String get_ElementName()
+ [m]	Void set_ElementName(String)
+ [m]	XmlSchemaForm get_Form()
+ [m]	Void set_Form(XmlSchemaForm)
+ [m]	Boolean get_IsNullable()
+ [m]	Void set_IsNullable(Boolean)
+ [m]	String get_Namespace()
+ [m]	Void set_Namespace(String)
+ [m]	Int32 get_Order()
+ [m]	Void set_Order(Int32)
+ [m]	Type get_Type()
+ [m]	Void set_Type(Type)

f [t] System.Xml.Serialization.XmlElementAttributes
+ [m]	Void .ctor()
+ [m]	XmlElementAttribute get_Item(Int32)
+ [m]	Void set_Item(Int32,XmlElementAttribute)
+ [m]	Int32 Add(XmlElementAttribute)
+ [m]	Boolean Contains(XmlElementAttribute)
+ [m]	Void CopyTo(XmlElementAttribute[],Int32)
+ [m]	Int32 IndexOf(XmlElementAttribute)
+ [m]	Void Insert(Int32,XmlElementAttribute)
+ [m]	Void Remove(XmlElementAttribute)
- [m]	Int32 get_Count()
- [m]	Boolean System.Collections.ICollection.get_IsSynchronized()
- [m]	Object System.Collections.ICollection.get_SyncRoot()
- [m]	Boolean System.Collections.IList.get_IsFixedSize()
- [m]	Boolean System.Collections.IList.get_IsReadOnly()
- [m]	Object System.Collections.IList.get_Item(Int32)
- [m]	Void System.Collections.IList.set_Item(Int32,Object)
- [m]	Void Clear()
- [m]	IEnumerator GetEnumerator()
- [m]	Void RemoveAt(Int32)
- [m]	Void System.Collections.ICollection.CopyTo(Array,Int32)
- [m]	Int32 System.Collections.IList.Add(Object)
- [m]	Boolean System.Collections.IList.Contains(Object)
- [m]	Int32 System.Collections.IList.IndexOf(Object)
- [m]	Void System.Collections.IList.Insert(Int32,Object)
- [m]	Void System.Collections.IList.Remove(Object)

f [t] System.Xml.Serialization.XmlEnumAttribute
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	String get_Name()
+ [m]	Void set_Name(String)

f [t] System.Xml.Serialization.XmlIgnoreAttribute
+ [m]	Void .ctor()

f [t] System.Xml.Serialization.XmlIncludeAttribute
+ [m]	Void .ctor(Type)
+ [m]	Type get_Type()
+ [m]	Void set_Type(Type)

f [t] System.Xml.Serialization.XmlNamespaceDeclarationsAttribute
+ [m]	Void .ctor()

f [t] System.Xml.Serialization.XmlRootAttribute
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	String get_DataType()
+ [m]	Void set_DataType(String)
+ [m]	String get_ElementName()
+ [m]	Void set_ElementName(String)
+ [m]	Boolean get_IsNullable()
+ [m]	Void set_IsNullable(Boolean)
+ [m]	String get_Namespace()
+ [m]	Void set_Namespace(String)

f [t] System.Xml.Serialization.XmlSerializer
+ [m]	Void .ctor()
+ [m]	Void .ctor(Type)
+ [m]	Void .ctor(Type,String)
+ [m]	Void .ctor(Type,Type[])
+ [m]	Void .ctor(Type,XmlAttributeOverrides)
+ [m]	Void .ctor(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
+ [m]	Void .ctor(Type,XmlRootAttribute)
+ [m]	Boolean CanDeserialize(XmlReader)
+ [m]	Object Deserialize(Stream)
+ [m]	Object Deserialize(TextReader)
+ [m]	Object Deserialize(XmlReader)
+ [m]	XmlSerializer[] FromTypes(Type[])
+ [m]	Void Serialize(Stream,Object)
+ [m]	Void Serialize(Stream,Object,XmlSerializerNamespaces)
+ [m]	Void Serialize(TextWriter,Object)
+ [m]	Void Serialize(TextWriter,Object,XmlSerializerNamespaces)
+ [m]	Void Serialize(XmlWriter,Object)
+ [m]	Void Serialize(XmlWriter,Object,XmlSerializerNamespaces)

f [t] System.Xml.Serialization.XmlSerializerNamespaces
+ [m]	Void .ctor()
+ [m]	Void .ctor(XmlSerializerNamespaces)
+ [m]	Void .ctor(XmlQualifiedName[])
+ [m]	Int32 get_Count()
+ [m]	Void Add(String,String)
+ [m]	XmlQualifiedName[] ToArray()

f [t] System.Xml.Serialization.XmlTextAttribute
+ [m]	Void .ctor()
+ [m]	Void .ctor(Type)
+ [m]	String get_DataType()
+ [m]	Void set_DataType(String)
+ [m]	Type get_Type()
+ [m]	Void set_Type(Type)

f [t] System.Xml.Serialization.XmlTypeAttribute
+ [m]	Void .ctor()
+ [m]	Void .ctor(String)
+ [m]	Boolean get_AnonymousType()
+ [m]	Void set_AnonymousType(Boolean)
+ [m]	Boolean get_IncludeInSchema()
+ [m]	Void set_IncludeInSchema(Boolean)
+ [m]	String get_Namespace()
+ [m]	Void set_Namespace(String)
+ [m]	String get_TypeName()
+ [m]	Void set_TypeName(String)

---------------------------------------
